// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CuratedRating.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Videa.CuratedRatingNS.Service.Proto.Types {

  /// <summary>Holder for reflection information generated from CuratedRating.proto</summary>
  public static partial class CuratedRatingReflection {

    #region Descriptor
    /// <summary>File descriptor for CuratedRating.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CuratedRatingReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChNDdXJhdGVkUmF0aW5nLnByb3RvGh9nb29nbGUvcHJvdG9idWYvdGltZXN0",
            "YW1wLnByb3RvGh5nb29nbGUvcHJvdG9idWYvZHVyYXRpb24ucHJvdG8itQIK",
            "DUN1cmF0ZWRSYXRpbmcSFwoPQ3VyYXRlZFJhdGluZ0lkGAEgASgDEiAKGFNl",
            "bGxhYmxlSW52ZW50b3J5SGFzaEtleRgCIAEoCRIVCg1SYXRpbmdIYXNoS2V5",
            "GAMgASgJEhUKDVJhdGluZ1ZlcnNpb24YBCABKAUSFwoPSXNEeW5hbWljUmF0",
            "aW5nGAUgASgIEhsKE0N1cmF0aW5nUmF0aW5nVmFsdWUYBiABKAkSFAoMUmF0",
            "aW5nVHlwZUlkGAcgASgFEhgKEEN1cmF0aW9uU3RhdHVzSWQYCCABKAUSEQoJ",
            "Q3JlYXRlZEJ5GAkgASgJEhIKCk1vZGlmaWVkQnkYCiABKAkSLgoKUm93VmVy",
            "c2lvbhgLIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXAiWQoKUmF0",
            "aW5nVHlwZRIUCgxSYXRpbmdUeXBlSWQYASABKAUSFgoOUmF0aW5nVHlwZU5h",
            "bWUYAiABKAkSHQoVUmF0aW5nVHlwZURlc2NyaXB0aW9uGAMgASgJImkKDkN1",
            "cmF0aW9uU3RhdHVzEhgKEEN1cmF0aW9uU3RhdHVzSWQYASABKAUSGgoSQ3Vy",
            "YXRpb25TdGF0dXNOYW1lGAIgASgJEiEKGUN1cmF0aW9uU3RhdHVzRGVzY3Jp",
            "cHRpb24YAyABKAkiFgoGUmF0aW5nEgwKBHRvZG8YASABKAUiNQoaQ3VyYXRl",
            "ZFJhdGluZ0RlbGV0ZVJlcXVlc3QSFwoPQ3VyYXRlZFJhdGluZ0lkGAEgASgD",
            "Ih0KG0N1cmF0ZWRSYXRpbmdEZWxldGVSZXNwb25zZSIvChdSYXRpbmdUeXBl",
            "RGVsZXRlUmVxdWVzdBIUCgxSYXRpbmdUeXBlSWQYASABKAUiGgoYUmF0aW5n",
            "VHlwZURlbGV0ZVJlc3BvbnNlIjcKG0N1cmF0aW9uU3RhdHVzRGVsZXRlUmVx",
            "dWVzdBIYChBDdXJhdGlvblN0YXR1c0lkGAEgASgFIh4KHEN1cmF0aW9uU3Rh",
            "dHVzRGVsZXRlUmVzcG9uc2UiRgodQ3VyYXRlZFJhdGluZ0FkZFVwZGF0ZVJl",
            "cXVlc3QSJQoNQ3VyYXRlZFJhdGluZxgBIAEoCzIOLkN1cmF0ZWRSYXRpbmci",
            "IAoeQ3VyYXRlZFJhdGluZ0FkZFVwZGF0ZVJlc3BvbnNlIj0KGlJhdGluZ1R5",
            "cGVBZGRVcGRhdGVSZXF1ZXN0Eh8KClJhdGluZ1R5cGUYASABKAsyCy5SYXRp",
            "bmdUeXBlIh0KG1JhdGluZ1R5cGVBZGRVcGRhdGVSZXNwb25zZSJJCh5DdXJh",
            "dGlvblN0YXR1c0FkZFVwZGF0ZVJlcXVlc3QSJwoOQ3VyYXRpb25TdGF0dXMY",
            "ASABKAsyDy5DdXJhdGlvblN0YXR1cyIhCh9DdXJhdGlvblN0YXR1c0FkZFVw",
            "ZGF0ZVJlc3BvbnNlIjsKGkdldENvbmZpcm1lZFJhdGluZ3NSZXF1ZXN0Eh0K",
            "FVNlbGxhYmxlSW52ZW50b3J5TGlzdBgBIAEoCSI2ChtHZXRDb25maXJtZWRS",
            "YXRpbmdzUmVzcG9uc2USFwoGUmF0aW5nGAEgAygLMgcuUmF0aW5nIpwBChBC",
            "dWxrU3RvcmVSZXF1ZXN0EiUKDUN1cmF0ZWRSYXRpbmcYASADKAsyDi5DdXJh",
            "dGVkUmF0aW5nEh8KClJhdGluZ1R5cGUYAiADKAsyCy5SYXRpbmdUeXBlEicK",
            "DkN1cmF0aW9uU3RhdHVzGAMgAygLMg8uQ3VyYXRpb25TdGF0dXMSFwoGUmF0",
            "aW5nGAQgAygLMgcuUmF0aW5nIhMKEUJ1bGtTdG9yZVJlc3BvbnNlMqcFChRD",
            "dXJhdGVkUmF0aW5nU2VydmljZRJSChNDdXJhdGVkUmF0aW5nRGVsZXRlEhsu",
            "Q3VyYXRlZFJhdGluZ0RlbGV0ZVJlcXVlc3QaHC5DdXJhdGVkUmF0aW5nRGVs",
            "ZXRlUmVzcG9uc2UiABJJChBSYXRpbmdUeXBlRGVsZXRlEhguUmF0aW5nVHlw",
            "ZURlbGV0ZVJlcXVlc3QaGS5SYXRpbmdUeXBlRGVsZXRlUmVzcG9uc2UiABJV",
            "ChRDdXJhdGlvblN0YXR1c0RlbGV0ZRIcLkN1cmF0aW9uU3RhdHVzRGVsZXRl",
            "UmVxdWVzdBodLkN1cmF0aW9uU3RhdHVzRGVsZXRlUmVzcG9uc2UiABJbChZD",
            "dXJhdGVkUmF0aW5nQWRkVXBkYXRlEh4uQ3VyYXRlZFJhdGluZ0FkZFVwZGF0",
            "ZVJlcXVlc3QaHy5DdXJhdGVkUmF0aW5nQWRkVXBkYXRlUmVzcG9uc2UiABJS",
            "ChNSYXRpbmdUeXBlQWRkVXBkYXRlEhsuUmF0aW5nVHlwZUFkZFVwZGF0ZVJl",
            "cXVlc3QaHC5SYXRpbmdUeXBlQWRkVXBkYXRlUmVzcG9uc2UiABJeChdDdXJh",
            "dGlvblN0YXR1c0FkZFVwZGF0ZRIfLkN1cmF0aW9uU3RhdHVzQWRkVXBkYXRl",
            "UmVxdWVzdBogLkN1cmF0aW9uU3RhdHVzQWRkVXBkYXRlUmVzcG9uc2UiABJS",
            "ChNHZXRDb25maXJtZWRSYXRpbmdzEhsuR2V0Q29uZmlybWVkUmF0aW5nc1Jl",
            "cXVlc3QaHC5HZXRDb25maXJtZWRSYXRpbmdzUmVzcG9uc2UiABI0CglCdWxr",
            "U3RvcmUSES5CdWxrU3RvcmVSZXF1ZXN0GhIuQnVsa1N0b3JlUmVzcG9uc2Ui",
            "AEIsqgIpVmlkZWEuQ3VyYXRlZFJhdGluZ05TLlNlcnZpY2UuUHJvdG8uVHlw",
            "ZXNiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.DurationReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Videa.CuratedRatingNS.Service.Proto.Types.CuratedRating), global::Videa.CuratedRatingNS.Service.Proto.Types.CuratedRating.Parser, new[]{ "CuratedRatingId", "SellableInventoryHashKey", "RatingHashKey", "RatingVersion", "IsDynamicRating", "CuratingRatingValue", "RatingTypeId", "CurationStatusId", "CreatedBy", "ModifiedBy", "RowVersion" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Videa.CuratedRatingNS.Service.Proto.Types.RatingType), global::Videa.CuratedRatingNS.Service.Proto.Types.RatingType.Parser, new[]{ "RatingTypeId", "RatingTypeName", "RatingTypeDescription" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Videa.CuratedRatingNS.Service.Proto.Types.CurationStatus), global::Videa.CuratedRatingNS.Service.Proto.Types.CurationStatus.Parser, new[]{ "CurationStatusId", "CurationStatusName", "CurationStatusDescription" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Videa.CuratedRatingNS.Service.Proto.Types.Rating), global::Videa.CuratedRatingNS.Service.Proto.Types.Rating.Parser, new[]{ "Todo" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Videa.CuratedRatingNS.Service.Proto.Types.CuratedRatingDeleteRequest), global::Videa.CuratedRatingNS.Service.Proto.Types.CuratedRatingDeleteRequest.Parser, new[]{ "CuratedRatingId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Videa.CuratedRatingNS.Service.Proto.Types.CuratedRatingDeleteResponse), global::Videa.CuratedRatingNS.Service.Proto.Types.CuratedRatingDeleteResponse.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Videa.CuratedRatingNS.Service.Proto.Types.RatingTypeDeleteRequest), global::Videa.CuratedRatingNS.Service.Proto.Types.RatingTypeDeleteRequest.Parser, new[]{ "RatingTypeId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Videa.CuratedRatingNS.Service.Proto.Types.RatingTypeDeleteResponse), global::Videa.CuratedRatingNS.Service.Proto.Types.RatingTypeDeleteResponse.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Videa.CuratedRatingNS.Service.Proto.Types.CurationStatusDeleteRequest), global::Videa.CuratedRatingNS.Service.Proto.Types.CurationStatusDeleteRequest.Parser, new[]{ "CurationStatusId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Videa.CuratedRatingNS.Service.Proto.Types.CurationStatusDeleteResponse), global::Videa.CuratedRatingNS.Service.Proto.Types.CurationStatusDeleteResponse.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Videa.CuratedRatingNS.Service.Proto.Types.CuratedRatingAddUpdateRequest), global::Videa.CuratedRatingNS.Service.Proto.Types.CuratedRatingAddUpdateRequest.Parser, new[]{ "CuratedRating" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Videa.CuratedRatingNS.Service.Proto.Types.CuratedRatingAddUpdateResponse), global::Videa.CuratedRatingNS.Service.Proto.Types.CuratedRatingAddUpdateResponse.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Videa.CuratedRatingNS.Service.Proto.Types.RatingTypeAddUpdateRequest), global::Videa.CuratedRatingNS.Service.Proto.Types.RatingTypeAddUpdateRequest.Parser, new[]{ "RatingType" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Videa.CuratedRatingNS.Service.Proto.Types.RatingTypeAddUpdateResponse), global::Videa.CuratedRatingNS.Service.Proto.Types.RatingTypeAddUpdateResponse.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Videa.CuratedRatingNS.Service.Proto.Types.CurationStatusAddUpdateRequest), global::Videa.CuratedRatingNS.Service.Proto.Types.CurationStatusAddUpdateRequest.Parser, new[]{ "CurationStatus" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Videa.CuratedRatingNS.Service.Proto.Types.CurationStatusAddUpdateResponse), global::Videa.CuratedRatingNS.Service.Proto.Types.CurationStatusAddUpdateResponse.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Videa.CuratedRatingNS.Service.Proto.Types.GetConfirmedRatingsRequest), global::Videa.CuratedRatingNS.Service.Proto.Types.GetConfirmedRatingsRequest.Parser, new[]{ "SellableInventoryList" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Videa.CuratedRatingNS.Service.Proto.Types.GetConfirmedRatingsResponse), global::Videa.CuratedRatingNS.Service.Proto.Types.GetConfirmedRatingsResponse.Parser, new[]{ "Rating" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Videa.CuratedRatingNS.Service.Proto.Types.BulkStoreRequest), global::Videa.CuratedRatingNS.Service.Proto.Types.BulkStoreRequest.Parser, new[]{ "CuratedRating", "RatingType", "CurationStatus", "Rating" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Videa.CuratedRatingNS.Service.Proto.Types.BulkStoreResponse), global::Videa.CuratedRatingNS.Service.Proto.Types.BulkStoreResponse.Parser, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class CuratedRating : pb::IMessage<CuratedRating> {
    private static readonly pb::MessageParser<CuratedRating> _parser = new pb::MessageParser<CuratedRating>(() => new CuratedRating());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CuratedRating> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Videa.CuratedRatingNS.Service.Proto.Types.CuratedRatingReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CuratedRating() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CuratedRating(CuratedRating other) : this() {
      curatedRatingId_ = other.curatedRatingId_;
      sellableInventoryHashKey_ = other.sellableInventoryHashKey_;
      ratingHashKey_ = other.ratingHashKey_;
      ratingVersion_ = other.ratingVersion_;
      isDynamicRating_ = other.isDynamicRating_;
      curatingRatingValue_ = other.curatingRatingValue_;
      ratingTypeId_ = other.ratingTypeId_;
      curationStatusId_ = other.curationStatusId_;
      createdBy_ = other.createdBy_;
      modifiedBy_ = other.modifiedBy_;
      RowVersion = other.rowVersion_ != null ? other.RowVersion.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CuratedRating Clone() {
      return new CuratedRating(this);
    }

    /// <summary>Field number for the "CuratedRatingId" field.</summary>
    public const int CuratedRatingIdFieldNumber = 1;
    private long curatedRatingId_;
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CuratedRatingId {
      get { return curatedRatingId_; }
      set {
        curatedRatingId_ = value;
      }
    }

    /// <summary>Field number for the "SellableInventoryHashKey" field.</summary>
    public const int SellableInventoryHashKeyFieldNumber = 2;
    private string sellableInventoryHashKey_ = "";
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SellableInventoryHashKey {
      get { return sellableInventoryHashKey_; }
      set {
        sellableInventoryHashKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "RatingHashKey" field.</summary>
    public const int RatingHashKeyFieldNumber = 3;
    private string ratingHashKey_ = "";
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RatingHashKey {
      get { return ratingHashKey_; }
      set {
        ratingHashKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "RatingVersion" field.</summary>
    public const int RatingVersionFieldNumber = 4;
    private int ratingVersion_;
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RatingVersion {
      get { return ratingVersion_; }
      set {
        ratingVersion_ = value;
      }
    }

    /// <summary>Field number for the "IsDynamicRating" field.</summary>
    public const int IsDynamicRatingFieldNumber = 5;
    private bool isDynamicRating_;
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsDynamicRating {
      get { return isDynamicRating_; }
      set {
        isDynamicRating_ = value;
      }
    }

    /// <summary>Field number for the "CuratingRatingValue" field.</summary>
    public const int CuratingRatingValueFieldNumber = 6;
    private string curatingRatingValue_ = "";
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CuratingRatingValue {
      get { return curatingRatingValue_; }
      set {
        curatingRatingValue_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "RatingTypeId" field.</summary>
    public const int RatingTypeIdFieldNumber = 7;
    private int ratingTypeId_;
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RatingTypeId {
      get { return ratingTypeId_; }
      set {
        ratingTypeId_ = value;
      }
    }

    /// <summary>Field number for the "CurationStatusId" field.</summary>
    public const int CurationStatusIdFieldNumber = 8;
    private int curationStatusId_;
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CurationStatusId {
      get { return curationStatusId_; }
      set {
        curationStatusId_ = value;
      }
    }

    /// <summary>Field number for the "CreatedBy" field.</summary>
    public const int CreatedByFieldNumber = 9;
    private string createdBy_ = "";
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedBy {
      get { return createdBy_; }
      set {
        createdBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModifiedBy" field.</summary>
    public const int ModifiedByFieldNumber = 10;
    private string modifiedBy_ = "";
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModifiedBy {
      get { return modifiedBy_; }
      set {
        modifiedBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "RowVersion" field.</summary>
    public const int RowVersionFieldNumber = 11;
    private global::Google.Protobuf.WellKnownTypes.Timestamp rowVersion_;
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp RowVersion {
      get { return rowVersion_; }
      set {
        rowVersion_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CuratedRating);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CuratedRating other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CuratedRatingId != other.CuratedRatingId) return false;
      if (SellableInventoryHashKey != other.SellableInventoryHashKey) return false;
      if (RatingHashKey != other.RatingHashKey) return false;
      if (RatingVersion != other.RatingVersion) return false;
      if (IsDynamicRating != other.IsDynamicRating) return false;
      if (CuratingRatingValue != other.CuratingRatingValue) return false;
      if (RatingTypeId != other.RatingTypeId) return false;
      if (CurationStatusId != other.CurationStatusId) return false;
      if (CreatedBy != other.CreatedBy) return false;
      if (ModifiedBy != other.ModifiedBy) return false;
      if (!object.Equals(RowVersion, other.RowVersion)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CuratedRatingId != 0L) hash ^= CuratedRatingId.GetHashCode();
      if (SellableInventoryHashKey.Length != 0) hash ^= SellableInventoryHashKey.GetHashCode();
      if (RatingHashKey.Length != 0) hash ^= RatingHashKey.GetHashCode();
      if (RatingVersion != 0) hash ^= RatingVersion.GetHashCode();
      if (IsDynamicRating != false) hash ^= IsDynamicRating.GetHashCode();
      if (CuratingRatingValue.Length != 0) hash ^= CuratingRatingValue.GetHashCode();
      if (RatingTypeId != 0) hash ^= RatingTypeId.GetHashCode();
      if (CurationStatusId != 0) hash ^= CurationStatusId.GetHashCode();
      if (CreatedBy.Length != 0) hash ^= CreatedBy.GetHashCode();
      if (ModifiedBy.Length != 0) hash ^= ModifiedBy.GetHashCode();
      if (rowVersion_ != null) hash ^= RowVersion.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CuratedRatingId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(CuratedRatingId);
      }
      if (SellableInventoryHashKey.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SellableInventoryHashKey);
      }
      if (RatingHashKey.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(RatingHashKey);
      }
      if (RatingVersion != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(RatingVersion);
      }
      if (IsDynamicRating != false) {
        output.WriteRawTag(40);
        output.WriteBool(IsDynamicRating);
      }
      if (CuratingRatingValue.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(CuratingRatingValue);
      }
      if (RatingTypeId != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(RatingTypeId);
      }
      if (CurationStatusId != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(CurationStatusId);
      }
      if (CreatedBy.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(CreatedBy);
      }
      if (ModifiedBy.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(ModifiedBy);
      }
      if (rowVersion_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(RowVersion);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CuratedRatingId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CuratedRatingId);
      }
      if (SellableInventoryHashKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SellableInventoryHashKey);
      }
      if (RatingHashKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RatingHashKey);
      }
      if (RatingVersion != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RatingVersion);
      }
      if (IsDynamicRating != false) {
        size += 1 + 1;
      }
      if (CuratingRatingValue.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CuratingRatingValue);
      }
      if (RatingTypeId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RatingTypeId);
      }
      if (CurationStatusId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CurationStatusId);
      }
      if (CreatedBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedBy);
      }
      if (ModifiedBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModifiedBy);
      }
      if (rowVersion_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RowVersion);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CuratedRating other) {
      if (other == null) {
        return;
      }
      if (other.CuratedRatingId != 0L) {
        CuratedRatingId = other.CuratedRatingId;
      }
      if (other.SellableInventoryHashKey.Length != 0) {
        SellableInventoryHashKey = other.SellableInventoryHashKey;
      }
      if (other.RatingHashKey.Length != 0) {
        RatingHashKey = other.RatingHashKey;
      }
      if (other.RatingVersion != 0) {
        RatingVersion = other.RatingVersion;
      }
      if (other.IsDynamicRating != false) {
        IsDynamicRating = other.IsDynamicRating;
      }
      if (other.CuratingRatingValue.Length != 0) {
        CuratingRatingValue = other.CuratingRatingValue;
      }
      if (other.RatingTypeId != 0) {
        RatingTypeId = other.RatingTypeId;
      }
      if (other.CurationStatusId != 0) {
        CurationStatusId = other.CurationStatusId;
      }
      if (other.CreatedBy.Length != 0) {
        CreatedBy = other.CreatedBy;
      }
      if (other.ModifiedBy.Length != 0) {
        ModifiedBy = other.ModifiedBy;
      }
      if (other.rowVersion_ != null) {
        if (rowVersion_ == null) {
          rowVersion_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        RowVersion.MergeFrom(other.RowVersion);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            CuratedRatingId = input.ReadInt64();
            break;
          }
          case 18: {
            SellableInventoryHashKey = input.ReadString();
            break;
          }
          case 26: {
            RatingHashKey = input.ReadString();
            break;
          }
          case 32: {
            RatingVersion = input.ReadInt32();
            break;
          }
          case 40: {
            IsDynamicRating = input.ReadBool();
            break;
          }
          case 50: {
            CuratingRatingValue = input.ReadString();
            break;
          }
          case 56: {
            RatingTypeId = input.ReadInt32();
            break;
          }
          case 64: {
            CurationStatusId = input.ReadInt32();
            break;
          }
          case 74: {
            CreatedBy = input.ReadString();
            break;
          }
          case 82: {
            ModifiedBy = input.ReadString();
            break;
          }
          case 90: {
            if (rowVersion_ == null) {
              rowVersion_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(rowVersion_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class RatingType : pb::IMessage<RatingType> {
    private static readonly pb::MessageParser<RatingType> _parser = new pb::MessageParser<RatingType>(() => new RatingType());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RatingType> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Videa.CuratedRatingNS.Service.Proto.Types.CuratedRatingReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RatingType() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RatingType(RatingType other) : this() {
      ratingTypeId_ = other.ratingTypeId_;
      ratingTypeName_ = other.ratingTypeName_;
      ratingTypeDescription_ = other.ratingTypeDescription_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RatingType Clone() {
      return new RatingType(this);
    }

    /// <summary>Field number for the "RatingTypeId" field.</summary>
    public const int RatingTypeIdFieldNumber = 1;
    private int ratingTypeId_;
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RatingTypeId {
      get { return ratingTypeId_; }
      set {
        ratingTypeId_ = value;
      }
    }

    /// <summary>Field number for the "RatingTypeName" field.</summary>
    public const int RatingTypeNameFieldNumber = 2;
    private string ratingTypeName_ = "";
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RatingTypeName {
      get { return ratingTypeName_; }
      set {
        ratingTypeName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "RatingTypeDescription" field.</summary>
    public const int RatingTypeDescriptionFieldNumber = 3;
    private string ratingTypeDescription_ = "";
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RatingTypeDescription {
      get { return ratingTypeDescription_; }
      set {
        ratingTypeDescription_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RatingType);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RatingType other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RatingTypeId != other.RatingTypeId) return false;
      if (RatingTypeName != other.RatingTypeName) return false;
      if (RatingTypeDescription != other.RatingTypeDescription) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RatingTypeId != 0) hash ^= RatingTypeId.GetHashCode();
      if (RatingTypeName.Length != 0) hash ^= RatingTypeName.GetHashCode();
      if (RatingTypeDescription.Length != 0) hash ^= RatingTypeDescription.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RatingTypeId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(RatingTypeId);
      }
      if (RatingTypeName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(RatingTypeName);
      }
      if (RatingTypeDescription.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(RatingTypeDescription);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RatingTypeId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RatingTypeId);
      }
      if (RatingTypeName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RatingTypeName);
      }
      if (RatingTypeDescription.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RatingTypeDescription);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RatingType other) {
      if (other == null) {
        return;
      }
      if (other.RatingTypeId != 0) {
        RatingTypeId = other.RatingTypeId;
      }
      if (other.RatingTypeName.Length != 0) {
        RatingTypeName = other.RatingTypeName;
      }
      if (other.RatingTypeDescription.Length != 0) {
        RatingTypeDescription = other.RatingTypeDescription;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            RatingTypeId = input.ReadInt32();
            break;
          }
          case 18: {
            RatingTypeName = input.ReadString();
            break;
          }
          case 26: {
            RatingTypeDescription = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CurationStatus : pb::IMessage<CurationStatus> {
    private static readonly pb::MessageParser<CurationStatus> _parser = new pb::MessageParser<CurationStatus>(() => new CurationStatus());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CurationStatus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Videa.CuratedRatingNS.Service.Proto.Types.CuratedRatingReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CurationStatus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CurationStatus(CurationStatus other) : this() {
      curationStatusId_ = other.curationStatusId_;
      curationStatusName_ = other.curationStatusName_;
      curationStatusDescription_ = other.curationStatusDescription_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CurationStatus Clone() {
      return new CurationStatus(this);
    }

    /// <summary>Field number for the "CurationStatusId" field.</summary>
    public const int CurationStatusIdFieldNumber = 1;
    private int curationStatusId_;
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CurationStatusId {
      get { return curationStatusId_; }
      set {
        curationStatusId_ = value;
      }
    }

    /// <summary>Field number for the "CurationStatusName" field.</summary>
    public const int CurationStatusNameFieldNumber = 2;
    private string curationStatusName_ = "";
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CurationStatusName {
      get { return curationStatusName_; }
      set {
        curationStatusName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CurationStatusDescription" field.</summary>
    public const int CurationStatusDescriptionFieldNumber = 3;
    private string curationStatusDescription_ = "";
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CurationStatusDescription {
      get { return curationStatusDescription_; }
      set {
        curationStatusDescription_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CurationStatus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CurationStatus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CurationStatusId != other.CurationStatusId) return false;
      if (CurationStatusName != other.CurationStatusName) return false;
      if (CurationStatusDescription != other.CurationStatusDescription) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CurationStatusId != 0) hash ^= CurationStatusId.GetHashCode();
      if (CurationStatusName.Length != 0) hash ^= CurationStatusName.GetHashCode();
      if (CurationStatusDescription.Length != 0) hash ^= CurationStatusDescription.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CurationStatusId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(CurationStatusId);
      }
      if (CurationStatusName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(CurationStatusName);
      }
      if (CurationStatusDescription.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(CurationStatusDescription);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CurationStatusId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CurationStatusId);
      }
      if (CurationStatusName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CurationStatusName);
      }
      if (CurationStatusDescription.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CurationStatusDescription);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CurationStatus other) {
      if (other == null) {
        return;
      }
      if (other.CurationStatusId != 0) {
        CurationStatusId = other.CurationStatusId;
      }
      if (other.CurationStatusName.Length != 0) {
        CurationStatusName = other.CurationStatusName;
      }
      if (other.CurationStatusDescription.Length != 0) {
        CurationStatusDescription = other.CurationStatusDescription;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            CurationStatusId = input.ReadInt32();
            break;
          }
          case 18: {
            CurationStatusName = input.ReadString();
            break;
          }
          case 26: {
            CurationStatusDescription = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Rating : pb::IMessage<Rating> {
    private static readonly pb::MessageParser<Rating> _parser = new pb::MessageParser<Rating>(() => new Rating());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Rating> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Videa.CuratedRatingNS.Service.Proto.Types.CuratedRatingReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Rating() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Rating(Rating other) : this() {
      todo_ = other.todo_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Rating Clone() {
      return new Rating(this);
    }

    /// <summary>Field number for the "todo" field.</summary>
    public const int TodoFieldNumber = 1;
    private int todo_;
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Todo {
      get { return todo_; }
      set {
        todo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Rating);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Rating other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Todo != other.Todo) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Todo != 0) hash ^= Todo.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Todo != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Todo);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Todo != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Todo);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Rating other) {
      if (other == null) {
        return;
      }
      if (other.Todo != 0) {
        Todo = other.Todo;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Todo = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CuratedRatingDeleteRequest : pb::IMessage<CuratedRatingDeleteRequest> {
    private static readonly pb::MessageParser<CuratedRatingDeleteRequest> _parser = new pb::MessageParser<CuratedRatingDeleteRequest>(() => new CuratedRatingDeleteRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CuratedRatingDeleteRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Videa.CuratedRatingNS.Service.Proto.Types.CuratedRatingReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CuratedRatingDeleteRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CuratedRatingDeleteRequest(CuratedRatingDeleteRequest other) : this() {
      curatedRatingId_ = other.curatedRatingId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CuratedRatingDeleteRequest Clone() {
      return new CuratedRatingDeleteRequest(this);
    }

    /// <summary>Field number for the "CuratedRatingId" field.</summary>
    public const int CuratedRatingIdFieldNumber = 1;
    private long curatedRatingId_;
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CuratedRatingId {
      get { return curatedRatingId_; }
      set {
        curatedRatingId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CuratedRatingDeleteRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CuratedRatingDeleteRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CuratedRatingId != other.CuratedRatingId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CuratedRatingId != 0L) hash ^= CuratedRatingId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CuratedRatingId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(CuratedRatingId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CuratedRatingId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CuratedRatingId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CuratedRatingDeleteRequest other) {
      if (other == null) {
        return;
      }
      if (other.CuratedRatingId != 0L) {
        CuratedRatingId = other.CuratedRatingId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            CuratedRatingId = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CuratedRatingDeleteResponse : pb::IMessage<CuratedRatingDeleteResponse> {
    private static readonly pb::MessageParser<CuratedRatingDeleteResponse> _parser = new pb::MessageParser<CuratedRatingDeleteResponse>(() => new CuratedRatingDeleteResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CuratedRatingDeleteResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Videa.CuratedRatingNS.Service.Proto.Types.CuratedRatingReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CuratedRatingDeleteResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CuratedRatingDeleteResponse(CuratedRatingDeleteResponse other) : this() {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CuratedRatingDeleteResponse Clone() {
      return new CuratedRatingDeleteResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CuratedRatingDeleteResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CuratedRatingDeleteResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CuratedRatingDeleteResponse other) {
      if (other == null) {
        return;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
        }
      }
    }

  }

  public sealed partial class RatingTypeDeleteRequest : pb::IMessage<RatingTypeDeleteRequest> {
    private static readonly pb::MessageParser<RatingTypeDeleteRequest> _parser = new pb::MessageParser<RatingTypeDeleteRequest>(() => new RatingTypeDeleteRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RatingTypeDeleteRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Videa.CuratedRatingNS.Service.Proto.Types.CuratedRatingReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RatingTypeDeleteRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RatingTypeDeleteRequest(RatingTypeDeleteRequest other) : this() {
      ratingTypeId_ = other.ratingTypeId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RatingTypeDeleteRequest Clone() {
      return new RatingTypeDeleteRequest(this);
    }

    /// <summary>Field number for the "RatingTypeId" field.</summary>
    public const int RatingTypeIdFieldNumber = 1;
    private int ratingTypeId_;
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RatingTypeId {
      get { return ratingTypeId_; }
      set {
        ratingTypeId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RatingTypeDeleteRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RatingTypeDeleteRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RatingTypeId != other.RatingTypeId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RatingTypeId != 0) hash ^= RatingTypeId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RatingTypeId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(RatingTypeId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RatingTypeId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RatingTypeId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RatingTypeDeleteRequest other) {
      if (other == null) {
        return;
      }
      if (other.RatingTypeId != 0) {
        RatingTypeId = other.RatingTypeId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            RatingTypeId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RatingTypeDeleteResponse : pb::IMessage<RatingTypeDeleteResponse> {
    private static readonly pb::MessageParser<RatingTypeDeleteResponse> _parser = new pb::MessageParser<RatingTypeDeleteResponse>(() => new RatingTypeDeleteResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RatingTypeDeleteResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Videa.CuratedRatingNS.Service.Proto.Types.CuratedRatingReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RatingTypeDeleteResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RatingTypeDeleteResponse(RatingTypeDeleteResponse other) : this() {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RatingTypeDeleteResponse Clone() {
      return new RatingTypeDeleteResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RatingTypeDeleteResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RatingTypeDeleteResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RatingTypeDeleteResponse other) {
      if (other == null) {
        return;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
        }
      }
    }

  }

  public sealed partial class CurationStatusDeleteRequest : pb::IMessage<CurationStatusDeleteRequest> {
    private static readonly pb::MessageParser<CurationStatusDeleteRequest> _parser = new pb::MessageParser<CurationStatusDeleteRequest>(() => new CurationStatusDeleteRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CurationStatusDeleteRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Videa.CuratedRatingNS.Service.Proto.Types.CuratedRatingReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CurationStatusDeleteRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CurationStatusDeleteRequest(CurationStatusDeleteRequest other) : this() {
      curationStatusId_ = other.curationStatusId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CurationStatusDeleteRequest Clone() {
      return new CurationStatusDeleteRequest(this);
    }

    /// <summary>Field number for the "CurationStatusId" field.</summary>
    public const int CurationStatusIdFieldNumber = 1;
    private int curationStatusId_;
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CurationStatusId {
      get { return curationStatusId_; }
      set {
        curationStatusId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CurationStatusDeleteRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CurationStatusDeleteRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CurationStatusId != other.CurationStatusId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CurationStatusId != 0) hash ^= CurationStatusId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CurationStatusId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(CurationStatusId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CurationStatusId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CurationStatusId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CurationStatusDeleteRequest other) {
      if (other == null) {
        return;
      }
      if (other.CurationStatusId != 0) {
        CurationStatusId = other.CurationStatusId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            CurationStatusId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CurationStatusDeleteResponse : pb::IMessage<CurationStatusDeleteResponse> {
    private static readonly pb::MessageParser<CurationStatusDeleteResponse> _parser = new pb::MessageParser<CurationStatusDeleteResponse>(() => new CurationStatusDeleteResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CurationStatusDeleteResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Videa.CuratedRatingNS.Service.Proto.Types.CuratedRatingReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CurationStatusDeleteResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CurationStatusDeleteResponse(CurationStatusDeleteResponse other) : this() {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CurationStatusDeleteResponse Clone() {
      return new CurationStatusDeleteResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CurationStatusDeleteResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CurationStatusDeleteResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CurationStatusDeleteResponse other) {
      if (other == null) {
        return;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
        }
      }
    }

  }

  public sealed partial class CuratedRatingAddUpdateRequest : pb::IMessage<CuratedRatingAddUpdateRequest> {
    private static readonly pb::MessageParser<CuratedRatingAddUpdateRequest> _parser = new pb::MessageParser<CuratedRatingAddUpdateRequest>(() => new CuratedRatingAddUpdateRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CuratedRatingAddUpdateRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Videa.CuratedRatingNS.Service.Proto.Types.CuratedRatingReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CuratedRatingAddUpdateRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CuratedRatingAddUpdateRequest(CuratedRatingAddUpdateRequest other) : this() {
      CuratedRating = other.curatedRating_ != null ? other.CuratedRating.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CuratedRatingAddUpdateRequest Clone() {
      return new CuratedRatingAddUpdateRequest(this);
    }

    /// <summary>Field number for the "CuratedRating" field.</summary>
    public const int CuratedRatingFieldNumber = 1;
    private global::Videa.CuratedRatingNS.Service.Proto.Types.CuratedRating curatedRating_;
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Videa.CuratedRatingNS.Service.Proto.Types.CuratedRating CuratedRating {
      get { return curatedRating_; }
      set {
        curatedRating_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CuratedRatingAddUpdateRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CuratedRatingAddUpdateRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(CuratedRating, other.CuratedRating)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (curatedRating_ != null) hash ^= CuratedRating.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (curatedRating_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(CuratedRating);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (curatedRating_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CuratedRating);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CuratedRatingAddUpdateRequest other) {
      if (other == null) {
        return;
      }
      if (other.curatedRating_ != null) {
        if (curatedRating_ == null) {
          curatedRating_ = new global::Videa.CuratedRatingNS.Service.Proto.Types.CuratedRating();
        }
        CuratedRating.MergeFrom(other.CuratedRating);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (curatedRating_ == null) {
              curatedRating_ = new global::Videa.CuratedRatingNS.Service.Proto.Types.CuratedRating();
            }
            input.ReadMessage(curatedRating_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CuratedRatingAddUpdateResponse : pb::IMessage<CuratedRatingAddUpdateResponse> {
    private static readonly pb::MessageParser<CuratedRatingAddUpdateResponse> _parser = new pb::MessageParser<CuratedRatingAddUpdateResponse>(() => new CuratedRatingAddUpdateResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CuratedRatingAddUpdateResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Videa.CuratedRatingNS.Service.Proto.Types.CuratedRatingReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CuratedRatingAddUpdateResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CuratedRatingAddUpdateResponse(CuratedRatingAddUpdateResponse other) : this() {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CuratedRatingAddUpdateResponse Clone() {
      return new CuratedRatingAddUpdateResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CuratedRatingAddUpdateResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CuratedRatingAddUpdateResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CuratedRatingAddUpdateResponse other) {
      if (other == null) {
        return;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
        }
      }
    }

  }

  public sealed partial class RatingTypeAddUpdateRequest : pb::IMessage<RatingTypeAddUpdateRequest> {
    private static readonly pb::MessageParser<RatingTypeAddUpdateRequest> _parser = new pb::MessageParser<RatingTypeAddUpdateRequest>(() => new RatingTypeAddUpdateRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RatingTypeAddUpdateRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Videa.CuratedRatingNS.Service.Proto.Types.CuratedRatingReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RatingTypeAddUpdateRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RatingTypeAddUpdateRequest(RatingTypeAddUpdateRequest other) : this() {
      RatingType = other.ratingType_ != null ? other.RatingType.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RatingTypeAddUpdateRequest Clone() {
      return new RatingTypeAddUpdateRequest(this);
    }

    /// <summary>Field number for the "RatingType" field.</summary>
    public const int RatingTypeFieldNumber = 1;
    private global::Videa.CuratedRatingNS.Service.Proto.Types.RatingType ratingType_;
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Videa.CuratedRatingNS.Service.Proto.Types.RatingType RatingType {
      get { return ratingType_; }
      set {
        ratingType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RatingTypeAddUpdateRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RatingTypeAddUpdateRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(RatingType, other.RatingType)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ratingType_ != null) hash ^= RatingType.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ratingType_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(RatingType);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ratingType_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RatingType);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RatingTypeAddUpdateRequest other) {
      if (other == null) {
        return;
      }
      if (other.ratingType_ != null) {
        if (ratingType_ == null) {
          ratingType_ = new global::Videa.CuratedRatingNS.Service.Proto.Types.RatingType();
        }
        RatingType.MergeFrom(other.RatingType);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (ratingType_ == null) {
              ratingType_ = new global::Videa.CuratedRatingNS.Service.Proto.Types.RatingType();
            }
            input.ReadMessage(ratingType_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class RatingTypeAddUpdateResponse : pb::IMessage<RatingTypeAddUpdateResponse> {
    private static readonly pb::MessageParser<RatingTypeAddUpdateResponse> _parser = new pb::MessageParser<RatingTypeAddUpdateResponse>(() => new RatingTypeAddUpdateResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RatingTypeAddUpdateResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Videa.CuratedRatingNS.Service.Proto.Types.CuratedRatingReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RatingTypeAddUpdateResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RatingTypeAddUpdateResponse(RatingTypeAddUpdateResponse other) : this() {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RatingTypeAddUpdateResponse Clone() {
      return new RatingTypeAddUpdateResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RatingTypeAddUpdateResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RatingTypeAddUpdateResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RatingTypeAddUpdateResponse other) {
      if (other == null) {
        return;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
        }
      }
    }

  }

  public sealed partial class CurationStatusAddUpdateRequest : pb::IMessage<CurationStatusAddUpdateRequest> {
    private static readonly pb::MessageParser<CurationStatusAddUpdateRequest> _parser = new pb::MessageParser<CurationStatusAddUpdateRequest>(() => new CurationStatusAddUpdateRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CurationStatusAddUpdateRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Videa.CuratedRatingNS.Service.Proto.Types.CuratedRatingReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CurationStatusAddUpdateRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CurationStatusAddUpdateRequest(CurationStatusAddUpdateRequest other) : this() {
      CurationStatus = other.curationStatus_ != null ? other.CurationStatus.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CurationStatusAddUpdateRequest Clone() {
      return new CurationStatusAddUpdateRequest(this);
    }

    /// <summary>Field number for the "CurationStatus" field.</summary>
    public const int CurationStatusFieldNumber = 1;
    private global::Videa.CuratedRatingNS.Service.Proto.Types.CurationStatus curationStatus_;
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Videa.CuratedRatingNS.Service.Proto.Types.CurationStatus CurationStatus {
      get { return curationStatus_; }
      set {
        curationStatus_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CurationStatusAddUpdateRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CurationStatusAddUpdateRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(CurationStatus, other.CurationStatus)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (curationStatus_ != null) hash ^= CurationStatus.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (curationStatus_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(CurationStatus);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (curationStatus_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CurationStatus);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CurationStatusAddUpdateRequest other) {
      if (other == null) {
        return;
      }
      if (other.curationStatus_ != null) {
        if (curationStatus_ == null) {
          curationStatus_ = new global::Videa.CuratedRatingNS.Service.Proto.Types.CurationStatus();
        }
        CurationStatus.MergeFrom(other.CurationStatus);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (curationStatus_ == null) {
              curationStatus_ = new global::Videa.CuratedRatingNS.Service.Proto.Types.CurationStatus();
            }
            input.ReadMessage(curationStatus_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CurationStatusAddUpdateResponse : pb::IMessage<CurationStatusAddUpdateResponse> {
    private static readonly pb::MessageParser<CurationStatusAddUpdateResponse> _parser = new pb::MessageParser<CurationStatusAddUpdateResponse>(() => new CurationStatusAddUpdateResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CurationStatusAddUpdateResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Videa.CuratedRatingNS.Service.Proto.Types.CuratedRatingReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CurationStatusAddUpdateResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CurationStatusAddUpdateResponse(CurationStatusAddUpdateResponse other) : this() {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CurationStatusAddUpdateResponse Clone() {
      return new CurationStatusAddUpdateResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CurationStatusAddUpdateResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CurationStatusAddUpdateResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CurationStatusAddUpdateResponse other) {
      if (other == null) {
        return;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
        }
      }
    }

  }

  public sealed partial class GetConfirmedRatingsRequest : pb::IMessage<GetConfirmedRatingsRequest> {
    private static readonly pb::MessageParser<GetConfirmedRatingsRequest> _parser = new pb::MessageParser<GetConfirmedRatingsRequest>(() => new GetConfirmedRatingsRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetConfirmedRatingsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Videa.CuratedRatingNS.Service.Proto.Types.CuratedRatingReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetConfirmedRatingsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetConfirmedRatingsRequest(GetConfirmedRatingsRequest other) : this() {
      sellableInventoryList_ = other.sellableInventoryList_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetConfirmedRatingsRequest Clone() {
      return new GetConfirmedRatingsRequest(this);
    }

    /// <summary>Field number for the "SellableInventoryList" field.</summary>
    public const int SellableInventoryListFieldNumber = 1;
    private string sellableInventoryList_ = "";
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SellableInventoryList {
      get { return sellableInventoryList_; }
      set {
        sellableInventoryList_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetConfirmedRatingsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetConfirmedRatingsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SellableInventoryList != other.SellableInventoryList) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SellableInventoryList.Length != 0) hash ^= SellableInventoryList.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SellableInventoryList.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SellableInventoryList);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SellableInventoryList.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SellableInventoryList);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetConfirmedRatingsRequest other) {
      if (other == null) {
        return;
      }
      if (other.SellableInventoryList.Length != 0) {
        SellableInventoryList = other.SellableInventoryList;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            SellableInventoryList = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetConfirmedRatingsResponse : pb::IMessage<GetConfirmedRatingsResponse> {
    private static readonly pb::MessageParser<GetConfirmedRatingsResponse> _parser = new pb::MessageParser<GetConfirmedRatingsResponse>(() => new GetConfirmedRatingsResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetConfirmedRatingsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Videa.CuratedRatingNS.Service.Proto.Types.CuratedRatingReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetConfirmedRatingsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetConfirmedRatingsResponse(GetConfirmedRatingsResponse other) : this() {
      rating_ = other.rating_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetConfirmedRatingsResponse Clone() {
      return new GetConfirmedRatingsResponse(this);
    }

    /// <summary>Field number for the "Rating" field.</summary>
    public const int RatingFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Videa.CuratedRatingNS.Service.Proto.Types.Rating> _repeated_rating_codec
        = pb::FieldCodec.ForMessage(10, global::Videa.CuratedRatingNS.Service.Proto.Types.Rating.Parser);
    private readonly pbc::RepeatedField<global::Videa.CuratedRatingNS.Service.Proto.Types.Rating> rating_ = new pbc::RepeatedField<global::Videa.CuratedRatingNS.Service.Proto.Types.Rating>();
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Videa.CuratedRatingNS.Service.Proto.Types.Rating> Rating {
      get { return rating_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetConfirmedRatingsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetConfirmedRatingsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!rating_.Equals(other.rating_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= rating_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      rating_.WriteTo(output, _repeated_rating_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += rating_.CalculateSize(_repeated_rating_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetConfirmedRatingsResponse other) {
      if (other == null) {
        return;
      }
      rating_.Add(other.rating_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            rating_.AddEntriesFrom(input, _repeated_rating_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class BulkStoreRequest : pb::IMessage<BulkStoreRequest> {
    private static readonly pb::MessageParser<BulkStoreRequest> _parser = new pb::MessageParser<BulkStoreRequest>(() => new BulkStoreRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BulkStoreRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Videa.CuratedRatingNS.Service.Proto.Types.CuratedRatingReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BulkStoreRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BulkStoreRequest(BulkStoreRequest other) : this() {
      curatedRating_ = other.curatedRating_.Clone();
      ratingType_ = other.ratingType_.Clone();
      curationStatus_ = other.curationStatus_.Clone();
      rating_ = other.rating_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BulkStoreRequest Clone() {
      return new BulkStoreRequest(this);
    }

    /// <summary>Field number for the "CuratedRating" field.</summary>
    public const int CuratedRatingFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Videa.CuratedRatingNS.Service.Proto.Types.CuratedRating> _repeated_curatedRating_codec
        = pb::FieldCodec.ForMessage(10, global::Videa.CuratedRatingNS.Service.Proto.Types.CuratedRating.Parser);
    private readonly pbc::RepeatedField<global::Videa.CuratedRatingNS.Service.Proto.Types.CuratedRating> curatedRating_ = new pbc::RepeatedField<global::Videa.CuratedRatingNS.Service.Proto.Types.CuratedRating>();
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Videa.CuratedRatingNS.Service.Proto.Types.CuratedRating> CuratedRating {
      get { return curatedRating_; }
    }

    /// <summary>Field number for the "RatingType" field.</summary>
    public const int RatingTypeFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Videa.CuratedRatingNS.Service.Proto.Types.RatingType> _repeated_ratingType_codec
        = pb::FieldCodec.ForMessage(18, global::Videa.CuratedRatingNS.Service.Proto.Types.RatingType.Parser);
    private readonly pbc::RepeatedField<global::Videa.CuratedRatingNS.Service.Proto.Types.RatingType> ratingType_ = new pbc::RepeatedField<global::Videa.CuratedRatingNS.Service.Proto.Types.RatingType>();
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Videa.CuratedRatingNS.Service.Proto.Types.RatingType> RatingType {
      get { return ratingType_; }
    }

    /// <summary>Field number for the "CurationStatus" field.</summary>
    public const int CurationStatusFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Videa.CuratedRatingNS.Service.Proto.Types.CurationStatus> _repeated_curationStatus_codec
        = pb::FieldCodec.ForMessage(26, global::Videa.CuratedRatingNS.Service.Proto.Types.CurationStatus.Parser);
    private readonly pbc::RepeatedField<global::Videa.CuratedRatingNS.Service.Proto.Types.CurationStatus> curationStatus_ = new pbc::RepeatedField<global::Videa.CuratedRatingNS.Service.Proto.Types.CurationStatus>();
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Videa.CuratedRatingNS.Service.Proto.Types.CurationStatus> CurationStatus {
      get { return curationStatus_; }
    }

    /// <summary>Field number for the "Rating" field.</summary>
    public const int RatingFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Videa.CuratedRatingNS.Service.Proto.Types.Rating> _repeated_rating_codec
        = pb::FieldCodec.ForMessage(34, global::Videa.CuratedRatingNS.Service.Proto.Types.Rating.Parser);
    private readonly pbc::RepeatedField<global::Videa.CuratedRatingNS.Service.Proto.Types.Rating> rating_ = new pbc::RepeatedField<global::Videa.CuratedRatingNS.Service.Proto.Types.Rating>();
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Videa.CuratedRatingNS.Service.Proto.Types.Rating> Rating {
      get { return rating_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BulkStoreRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BulkStoreRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!curatedRating_.Equals(other.curatedRating_)) return false;
      if(!ratingType_.Equals(other.ratingType_)) return false;
      if(!curationStatus_.Equals(other.curationStatus_)) return false;
      if(!rating_.Equals(other.rating_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= curatedRating_.GetHashCode();
      hash ^= ratingType_.GetHashCode();
      hash ^= curationStatus_.GetHashCode();
      hash ^= rating_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      curatedRating_.WriteTo(output, _repeated_curatedRating_codec);
      ratingType_.WriteTo(output, _repeated_ratingType_codec);
      curationStatus_.WriteTo(output, _repeated_curationStatus_codec);
      rating_.WriteTo(output, _repeated_rating_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += curatedRating_.CalculateSize(_repeated_curatedRating_codec);
      size += ratingType_.CalculateSize(_repeated_ratingType_codec);
      size += curationStatus_.CalculateSize(_repeated_curationStatus_codec);
      size += rating_.CalculateSize(_repeated_rating_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BulkStoreRequest other) {
      if (other == null) {
        return;
      }
      curatedRating_.Add(other.curatedRating_);
      ratingType_.Add(other.ratingType_);
      curationStatus_.Add(other.curationStatus_);
      rating_.Add(other.rating_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            curatedRating_.AddEntriesFrom(input, _repeated_curatedRating_codec);
            break;
          }
          case 18: {
            ratingType_.AddEntriesFrom(input, _repeated_ratingType_codec);
            break;
          }
          case 26: {
            curationStatus_.AddEntriesFrom(input, _repeated_curationStatus_codec);
            break;
          }
          case 34: {
            rating_.AddEntriesFrom(input, _repeated_rating_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class BulkStoreResponse : pb::IMessage<BulkStoreResponse> {
    private static readonly pb::MessageParser<BulkStoreResponse> _parser = new pb::MessageParser<BulkStoreResponse>(() => new BulkStoreResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BulkStoreResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Videa.CuratedRatingNS.Service.Proto.Types.CuratedRatingReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BulkStoreResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BulkStoreResponse(BulkStoreResponse other) : this() {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BulkStoreResponse Clone() {
      return new BulkStoreResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BulkStoreResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BulkStoreResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BulkStoreResponse other) {
      if (other == null) {
        return;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code

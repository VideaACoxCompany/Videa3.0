// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: AvailMartService.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Videa.AvailMartNS.Service.Proto.Types {

  /// <summary>Holder for reflection information generated from AvailMartService.proto</summary>
  public static partial class AvailMartServiceReflection {

    #region Descriptor
    /// <summary>File descriptor for AvailMartService.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static AvailMartServiceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChZBdmFpbE1hcnRTZXJ2aWNlLnByb3RvGh9nb29nbGUvcHJvdG9idWYvdGlt",
            "ZXN0YW1wLnByb3RvGh5nb29nbGUvcHJvdG9idWYvZHVyYXRpb24ucHJvdG8i",
            "lwEKCUF2YWlsTWFydBIYChBBdmFpbE1hcnRIYXNoS2V5GAEgASgJEhQKDEF2",
            "YWlsTWFydFNxbhgCIAEoBRItCglTdGFydERhdGUYAyABKAsyGi5nb29nbGUu",
            "cHJvdG9idWYuVGltZXN0YW1wEisKB0VuZERhdGUYBCABKAsyGi5nb29nbGUu",
            "cHJvdG9idWYuVGltZXN0YW1wIr8BCglBdmFpbExpc3QSGAoQQXZhaWxMaXN0",
            "SGFzaEtleRgBIAEoCRIUCgxBdmFpbExpc3RTcW4YAiABKAUSGAoQQXZhaWxN",
            "YXJ0SGFzaEtleRgDIAEoCRIMCgROYW1lGAQgASgJEi0KCVN0YXJ0RGF0ZRgF",
            "IAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASKwoHRW5kRGF0ZRgG",
            "IAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXAitgEKHEF2YWlsTGlu",
            "ZVdpdGhEZXRhaWxlZFBlcmlvZHMSKwojQXZhaWxMaW5lV2l0aERldGFpbGVk",
            "UGVyaW9kc0hhc2hLZXkYASABKAkSJwofQXZhaWxMaW5lV2l0aERldGFpbGVk",
            "UGVyaW9kc1NxbhgCIAEoBRIYChBBdmFpbExpc3RIYXNoS2V5GAMgASgJEhMK",
            "C0RheXBhcnROYW1lGAQgASgJEhEKCUF2YWlsTmFtZRgFIAEoCSLhAQoORGV0",
            "YWlsZWRQZXJpb2QSHQoVRGV0YWlsZWRQZXJpb2RIYXNoS2V5GAEgASgJEhkK",
            "EURldGFpbGVkUGVyaW9kU3FuGAIgASgFEisKI0F2YWlsTGluZVdpdGhEZXRh",
            "aWxlZFBlcmlvZHNIYXNoS2V5GAMgASgJEi0KCVN0YXJ0RGF0ZRgEIAEoCzIa",
            "Lmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASKwoHRW5kRGF0ZRgFIAEoCzIa",
            "Lmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASDAoEUmF0ZRgGIAEoCSIyChZB",
            "dmFpbE1hcnREZWxldGVSZXF1ZXN0EhgKEEF2YWlsTWFydEhhc2hLZXkYASAB",
            "KAkiGQoXQXZhaWxNYXJ0RGVsZXRlUmVzcG9uc2UiMgoWQXZhaWxMaXN0RGVs",
            "ZXRlUmVxdWVzdBIYChBBdmFpbExpc3RIYXNoS2V5GAEgASgJIhkKF0F2YWls",
            "TGlzdERlbGV0ZVJlc3BvbnNlIlgKKUF2YWlsTGluZVdpdGhEZXRhaWxlZFBl",
            "cmlvZHNEZWxldGVSZXF1ZXN0EisKI0F2YWlsTGluZVdpdGhEZXRhaWxlZFBl",
            "cmlvZHNIYXNoS2V5GAEgASgJIiwKKkF2YWlsTGluZVdpdGhEZXRhaWxlZFBl",
            "cmlvZHNEZWxldGVSZXNwb25zZSI8ChtEZXRhaWxlZFBlcmlvZERlbGV0ZVJl",
            "cXVlc3QSHQoVRGV0YWlsZWRQZXJpb2RIYXNoS2V5GAEgASgJIh4KHERldGFp",
            "bGVkUGVyaW9kRGVsZXRlUmVzcG9uc2UiOgoZQXZhaWxNYXJ0QWRkVXBkYXRl",
            "UmVxdWVzdBIdCglBdmFpbE1hcnQYASABKAsyCi5BdmFpbE1hcnQiHAoaQXZh",
            "aWxNYXJ0QWRkVXBkYXRlUmVzcG9uc2UiOgoZQXZhaWxMaXN0QWRkVXBkYXRl",
            "UmVxdWVzdBIdCglBdmFpbExpc3QYASABKAsyCi5BdmFpbExpc3QiHAoaQXZh",
            "aWxMaXN0QWRkVXBkYXRlUmVzcG9uc2UicwosQXZhaWxMaW5lV2l0aERldGFp",
            "bGVkUGVyaW9kc0FkZFVwZGF0ZVJlcXVlc3QSQwocQXZhaWxMaW5lV2l0aERl",
            "dGFpbGVkUGVyaW9kcxgBIAEoCzIdLkF2YWlsTGluZVdpdGhEZXRhaWxlZFBl",
            "cmlvZHMiLwotQXZhaWxMaW5lV2l0aERldGFpbGVkUGVyaW9kc0FkZFVwZGF0",
            "ZVJlc3BvbnNlIkkKHkRldGFpbGVkUGVyaW9kQWRkVXBkYXRlUmVxdWVzdBIn",
            "Cg5EZXRhaWxlZFBlcmlvZBgBIAEoCzIPLkRldGFpbGVkUGVyaW9kIiEKH0Rl",
            "dGFpbGVkUGVyaW9kQWRkVXBkYXRlUmVzcG9uc2UifQoTR2V0QXZhaWxNYXJ0",
            "UmVxdWVzdBIWCg5TdGF0aW9uSGFzaEtleRgBIAEoCRIbChNSYXRlQ2FyZFR5",
            "cGVIYXNoS2V5GAIgASgJEhYKDkRheXBhcnRIYXNoS2V5GAMgASgJEhkKEUJy",
            "b2FkY2FzdFdlZWtMaXN0GAQgASgJIjUKFEdldEF2YWlsTWFydFJlc3BvbnNl",
            "Eh0KCUF2YWlsTWFydBgBIAMoCzIKLkF2YWlsTWFydCK+AQoQQnVsa1N0b3Jl",
            "UmVxdWVzdBIdCglBdmFpbE1hcnQYASADKAsyCi5BdmFpbE1hcnQSHQoJQXZh",
            "aWxMaXN0GAIgAygLMgouQXZhaWxMaXN0EkMKHEF2YWlsTGluZVdpdGhEZXRh",
            "aWxlZFBlcmlvZHMYAyADKAsyHS5BdmFpbExpbmVXaXRoRGV0YWlsZWRQZXJp",
            "b2RzEicKDkRldGFpbGVkUGVyaW9kGAQgAygLMg8uRGV0YWlsZWRQZXJpb2Qi",
            "EwoRQnVsa1N0b3JlUmVzcG9uc2Uy/AYKEEF2YWlsTWFydFNlcnZpY2USRgoP",
            "QXZhaWxNYXJ0RGVsZXRlEhcuQXZhaWxNYXJ0RGVsZXRlUmVxdWVzdBoYLkF2",
            "YWlsTWFydERlbGV0ZVJlc3BvbnNlIgASRgoPQXZhaWxMaXN0RGVsZXRlEhcu",
            "QXZhaWxMaXN0RGVsZXRlUmVxdWVzdBoYLkF2YWlsTGlzdERlbGV0ZVJlc3Bv",
            "bnNlIgASfwoiQXZhaWxMaW5lV2l0aERldGFpbGVkUGVyaW9kc0RlbGV0ZRIq",
            "LkF2YWlsTGluZVdpdGhEZXRhaWxlZFBlcmlvZHNEZWxldGVSZXF1ZXN0Gisu",
            "QXZhaWxMaW5lV2l0aERldGFpbGVkUGVyaW9kc0RlbGV0ZVJlc3BvbnNlIgAS",
            "VQoURGV0YWlsZWRQZXJpb2REZWxldGUSHC5EZXRhaWxlZFBlcmlvZERlbGV0",
            "ZVJlcXVlc3QaHS5EZXRhaWxlZFBlcmlvZERlbGV0ZVJlc3BvbnNlIgASTwoS",
            "QXZhaWxNYXJ0QWRkVXBkYXRlEhouQXZhaWxNYXJ0QWRkVXBkYXRlUmVxdWVz",
            "dBobLkF2YWlsTWFydEFkZFVwZGF0ZVJlc3BvbnNlIgASTwoSQXZhaWxMaXN0",
            "QWRkVXBkYXRlEhouQXZhaWxMaXN0QWRkVXBkYXRlUmVxdWVzdBobLkF2YWls",
            "TGlzdEFkZFVwZGF0ZVJlc3BvbnNlIgASiAEKJUF2YWlsTGluZVdpdGhEZXRh",
            "aWxlZFBlcmlvZHNBZGRVcGRhdGUSLS5BdmFpbExpbmVXaXRoRGV0YWlsZWRQ",
            "ZXJpb2RzQWRkVXBkYXRlUmVxdWVzdBouLkF2YWlsTGluZVdpdGhEZXRhaWxl",
            "ZFBlcmlvZHNBZGRVcGRhdGVSZXNwb25zZSIAEl4KF0RldGFpbGVkUGVyaW9k",
            "QWRkVXBkYXRlEh8uRGV0YWlsZWRQZXJpb2RBZGRVcGRhdGVSZXF1ZXN0GiAu",
            "RGV0YWlsZWRQZXJpb2RBZGRVcGRhdGVSZXNwb25zZSIAEj0KDEdldEF2YWls",
            "TWFydBIULkdldEF2YWlsTWFydFJlcXVlc3QaFS5HZXRBdmFpbE1hcnRSZXNw",
            "b25zZSIAEjQKCUJ1bGtTdG9yZRIRLkJ1bGtTdG9yZVJlcXVlc3QaEi5CdWxr",
            "U3RvcmVSZXNwb25zZSIAQiiqAiVWaWRlYS5BdmFpbE1hcnROUy5TZXJ2aWNl",
            "LlByb3RvLlR5cGVzYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.DurationReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Videa.AvailMartNS.Service.Proto.Types.AvailMart), global::Videa.AvailMartNS.Service.Proto.Types.AvailMart.Parser, new[]{ "AvailMartHashKey", "AvailMartSqn", "StartDate", "EndDate" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Videa.AvailMartNS.Service.Proto.Types.AvailList), global::Videa.AvailMartNS.Service.Proto.Types.AvailList.Parser, new[]{ "AvailListHashKey", "AvailListSqn", "AvailMartHashKey", "Name", "StartDate", "EndDate" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Videa.AvailMartNS.Service.Proto.Types.AvailLineWithDetailedPeriods), global::Videa.AvailMartNS.Service.Proto.Types.AvailLineWithDetailedPeriods.Parser, new[]{ "AvailLineWithDetailedPeriodsHashKey", "AvailLineWithDetailedPeriodsSqn", "AvailListHashKey", "DaypartName", "AvailName" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Videa.AvailMartNS.Service.Proto.Types.DetailedPeriod), global::Videa.AvailMartNS.Service.Proto.Types.DetailedPeriod.Parser, new[]{ "DetailedPeriodHashKey", "DetailedPeriodSqn", "AvailLineWithDetailedPeriodsHashKey", "StartDate", "EndDate", "Rate" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Videa.AvailMartNS.Service.Proto.Types.AvailMartDeleteRequest), global::Videa.AvailMartNS.Service.Proto.Types.AvailMartDeleteRequest.Parser, new[]{ "AvailMartHashKey" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Videa.AvailMartNS.Service.Proto.Types.AvailMartDeleteResponse), global::Videa.AvailMartNS.Service.Proto.Types.AvailMartDeleteResponse.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Videa.AvailMartNS.Service.Proto.Types.AvailListDeleteRequest), global::Videa.AvailMartNS.Service.Proto.Types.AvailListDeleteRequest.Parser, new[]{ "AvailListHashKey" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Videa.AvailMartNS.Service.Proto.Types.AvailListDeleteResponse), global::Videa.AvailMartNS.Service.Proto.Types.AvailListDeleteResponse.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Videa.AvailMartNS.Service.Proto.Types.AvailLineWithDetailedPeriodsDeleteRequest), global::Videa.AvailMartNS.Service.Proto.Types.AvailLineWithDetailedPeriodsDeleteRequest.Parser, new[]{ "AvailLineWithDetailedPeriodsHashKey" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Videa.AvailMartNS.Service.Proto.Types.AvailLineWithDetailedPeriodsDeleteResponse), global::Videa.AvailMartNS.Service.Proto.Types.AvailLineWithDetailedPeriodsDeleteResponse.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Videa.AvailMartNS.Service.Proto.Types.DetailedPeriodDeleteRequest), global::Videa.AvailMartNS.Service.Proto.Types.DetailedPeriodDeleteRequest.Parser, new[]{ "DetailedPeriodHashKey" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Videa.AvailMartNS.Service.Proto.Types.DetailedPeriodDeleteResponse), global::Videa.AvailMartNS.Service.Proto.Types.DetailedPeriodDeleteResponse.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Videa.AvailMartNS.Service.Proto.Types.AvailMartAddUpdateRequest), global::Videa.AvailMartNS.Service.Proto.Types.AvailMartAddUpdateRequest.Parser, new[]{ "AvailMart" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Videa.AvailMartNS.Service.Proto.Types.AvailMartAddUpdateResponse), global::Videa.AvailMartNS.Service.Proto.Types.AvailMartAddUpdateResponse.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Videa.AvailMartNS.Service.Proto.Types.AvailListAddUpdateRequest), global::Videa.AvailMartNS.Service.Proto.Types.AvailListAddUpdateRequest.Parser, new[]{ "AvailList" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Videa.AvailMartNS.Service.Proto.Types.AvailListAddUpdateResponse), global::Videa.AvailMartNS.Service.Proto.Types.AvailListAddUpdateResponse.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Videa.AvailMartNS.Service.Proto.Types.AvailLineWithDetailedPeriodsAddUpdateRequest), global::Videa.AvailMartNS.Service.Proto.Types.AvailLineWithDetailedPeriodsAddUpdateRequest.Parser, new[]{ "AvailLineWithDetailedPeriods" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Videa.AvailMartNS.Service.Proto.Types.AvailLineWithDetailedPeriodsAddUpdateResponse), global::Videa.AvailMartNS.Service.Proto.Types.AvailLineWithDetailedPeriodsAddUpdateResponse.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Videa.AvailMartNS.Service.Proto.Types.DetailedPeriodAddUpdateRequest), global::Videa.AvailMartNS.Service.Proto.Types.DetailedPeriodAddUpdateRequest.Parser, new[]{ "DetailedPeriod" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Videa.AvailMartNS.Service.Proto.Types.DetailedPeriodAddUpdateResponse), global::Videa.AvailMartNS.Service.Proto.Types.DetailedPeriodAddUpdateResponse.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Videa.AvailMartNS.Service.Proto.Types.GetAvailMartRequest), global::Videa.AvailMartNS.Service.Proto.Types.GetAvailMartRequest.Parser, new[]{ "StationHashKey", "RateCardTypeHashKey", "DaypartHashKey", "BroadcastWeekList" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Videa.AvailMartNS.Service.Proto.Types.GetAvailMartResponse), global::Videa.AvailMartNS.Service.Proto.Types.GetAvailMartResponse.Parser, new[]{ "AvailMart" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Videa.AvailMartNS.Service.Proto.Types.BulkStoreRequest), global::Videa.AvailMartNS.Service.Proto.Types.BulkStoreRequest.Parser, new[]{ "AvailMart", "AvailList", "AvailLineWithDetailedPeriods", "DetailedPeriod" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Videa.AvailMartNS.Service.Proto.Types.BulkStoreResponse), global::Videa.AvailMartNS.Service.Proto.Types.BulkStoreResponse.Parser, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class AvailMart : pb::IMessage<AvailMart> {
    private static readonly pb::MessageParser<AvailMart> _parser = new pb::MessageParser<AvailMart>(() => new AvailMart());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AvailMart> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Videa.AvailMartNS.Service.Proto.Types.AvailMartServiceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AvailMart() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AvailMart(AvailMart other) : this() {
      availMartHashKey_ = other.availMartHashKey_;
      availMartSqn_ = other.availMartSqn_;
      StartDate = other.startDate_ != null ? other.StartDate.Clone() : null;
      EndDate = other.endDate_ != null ? other.EndDate.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AvailMart Clone() {
      return new AvailMart(this);
    }

    /// <summary>Field number for the "AvailMartHashKey" field.</summary>
    public const int AvailMartHashKeyFieldNumber = 1;
    private string availMartHashKey_ = "";
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AvailMartHashKey {
      get { return availMartHashKey_; }
      set {
        availMartHashKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "AvailMartSqn" field.</summary>
    public const int AvailMartSqnFieldNumber = 2;
    private int availMartSqn_;
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AvailMartSqn {
      get { return availMartSqn_; }
      set {
        availMartSqn_ = value;
      }
    }

    /// <summary>Field number for the "StartDate" field.</summary>
    public const int StartDateFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Timestamp startDate_;
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp StartDate {
      get { return startDate_; }
      set {
        startDate_ = value;
      }
    }

    /// <summary>Field number for the "EndDate" field.</summary>
    public const int EndDateFieldNumber = 4;
    private global::Google.Protobuf.WellKnownTypes.Timestamp endDate_;
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp EndDate {
      get { return endDate_; }
      set {
        endDate_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AvailMart);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AvailMart other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AvailMartHashKey != other.AvailMartHashKey) return false;
      if (AvailMartSqn != other.AvailMartSqn) return false;
      if (!object.Equals(StartDate, other.StartDate)) return false;
      if (!object.Equals(EndDate, other.EndDate)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AvailMartHashKey.Length != 0) hash ^= AvailMartHashKey.GetHashCode();
      if (AvailMartSqn != 0) hash ^= AvailMartSqn.GetHashCode();
      if (startDate_ != null) hash ^= StartDate.GetHashCode();
      if (endDate_ != null) hash ^= EndDate.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AvailMartHashKey.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AvailMartHashKey);
      }
      if (AvailMartSqn != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(AvailMartSqn);
      }
      if (startDate_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(StartDate);
      }
      if (endDate_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(EndDate);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AvailMartHashKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AvailMartHashKey);
      }
      if (AvailMartSqn != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AvailMartSqn);
      }
      if (startDate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StartDate);
      }
      if (endDate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EndDate);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AvailMart other) {
      if (other == null) {
        return;
      }
      if (other.AvailMartHashKey.Length != 0) {
        AvailMartHashKey = other.AvailMartHashKey;
      }
      if (other.AvailMartSqn != 0) {
        AvailMartSqn = other.AvailMartSqn;
      }
      if (other.startDate_ != null) {
        if (startDate_ == null) {
          startDate_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        StartDate.MergeFrom(other.StartDate);
      }
      if (other.endDate_ != null) {
        if (endDate_ == null) {
          endDate_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        EndDate.MergeFrom(other.EndDate);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            AvailMartHashKey = input.ReadString();
            break;
          }
          case 16: {
            AvailMartSqn = input.ReadInt32();
            break;
          }
          case 26: {
            if (startDate_ == null) {
              startDate_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(startDate_);
            break;
          }
          case 34: {
            if (endDate_ == null) {
              endDate_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(endDate_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AvailList : pb::IMessage<AvailList> {
    private static readonly pb::MessageParser<AvailList> _parser = new pb::MessageParser<AvailList>(() => new AvailList());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AvailList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Videa.AvailMartNS.Service.Proto.Types.AvailMartServiceReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AvailList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AvailList(AvailList other) : this() {
      availListHashKey_ = other.availListHashKey_;
      availListSqn_ = other.availListSqn_;
      availMartHashKey_ = other.availMartHashKey_;
      name_ = other.name_;
      StartDate = other.startDate_ != null ? other.StartDate.Clone() : null;
      EndDate = other.endDate_ != null ? other.EndDate.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AvailList Clone() {
      return new AvailList(this);
    }

    /// <summary>Field number for the "AvailListHashKey" field.</summary>
    public const int AvailListHashKeyFieldNumber = 1;
    private string availListHashKey_ = "";
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AvailListHashKey {
      get { return availListHashKey_; }
      set {
        availListHashKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "AvailListSqn" field.</summary>
    public const int AvailListSqnFieldNumber = 2;
    private int availListSqn_;
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AvailListSqn {
      get { return availListSqn_; }
      set {
        availListSqn_ = value;
      }
    }

    /// <summary>Field number for the "AvailMartHashKey" field.</summary>
    public const int AvailMartHashKeyFieldNumber = 3;
    private string availMartHashKey_ = "";
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AvailMartHashKey {
      get { return availMartHashKey_; }
      set {
        availMartHashKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Name" field.</summary>
    public const int NameFieldNumber = 4;
    private string name_ = "";
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "StartDate" field.</summary>
    public const int StartDateFieldNumber = 5;
    private global::Google.Protobuf.WellKnownTypes.Timestamp startDate_;
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp StartDate {
      get { return startDate_; }
      set {
        startDate_ = value;
      }
    }

    /// <summary>Field number for the "EndDate" field.</summary>
    public const int EndDateFieldNumber = 6;
    private global::Google.Protobuf.WellKnownTypes.Timestamp endDate_;
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp EndDate {
      get { return endDate_; }
      set {
        endDate_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AvailList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AvailList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AvailListHashKey != other.AvailListHashKey) return false;
      if (AvailListSqn != other.AvailListSqn) return false;
      if (AvailMartHashKey != other.AvailMartHashKey) return false;
      if (Name != other.Name) return false;
      if (!object.Equals(StartDate, other.StartDate)) return false;
      if (!object.Equals(EndDate, other.EndDate)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AvailListHashKey.Length != 0) hash ^= AvailListHashKey.GetHashCode();
      if (AvailListSqn != 0) hash ^= AvailListSqn.GetHashCode();
      if (AvailMartHashKey.Length != 0) hash ^= AvailMartHashKey.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (startDate_ != null) hash ^= StartDate.GetHashCode();
      if (endDate_ != null) hash ^= EndDate.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AvailListHashKey.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AvailListHashKey);
      }
      if (AvailListSqn != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(AvailListSqn);
      }
      if (AvailMartHashKey.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(AvailMartHashKey);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Name);
      }
      if (startDate_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(StartDate);
      }
      if (endDate_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(EndDate);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AvailListHashKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AvailListHashKey);
      }
      if (AvailListSqn != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AvailListSqn);
      }
      if (AvailMartHashKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AvailMartHashKey);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (startDate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StartDate);
      }
      if (endDate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EndDate);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AvailList other) {
      if (other == null) {
        return;
      }
      if (other.AvailListHashKey.Length != 0) {
        AvailListHashKey = other.AvailListHashKey;
      }
      if (other.AvailListSqn != 0) {
        AvailListSqn = other.AvailListSqn;
      }
      if (other.AvailMartHashKey.Length != 0) {
        AvailMartHashKey = other.AvailMartHashKey;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.startDate_ != null) {
        if (startDate_ == null) {
          startDate_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        StartDate.MergeFrom(other.StartDate);
      }
      if (other.endDate_ != null) {
        if (endDate_ == null) {
          endDate_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        EndDate.MergeFrom(other.EndDate);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            AvailListHashKey = input.ReadString();
            break;
          }
          case 16: {
            AvailListSqn = input.ReadInt32();
            break;
          }
          case 26: {
            AvailMartHashKey = input.ReadString();
            break;
          }
          case 34: {
            Name = input.ReadString();
            break;
          }
          case 42: {
            if (startDate_ == null) {
              startDate_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(startDate_);
            break;
          }
          case 50: {
            if (endDate_ == null) {
              endDate_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(endDate_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AvailLineWithDetailedPeriods : pb::IMessage<AvailLineWithDetailedPeriods> {
    private static readonly pb::MessageParser<AvailLineWithDetailedPeriods> _parser = new pb::MessageParser<AvailLineWithDetailedPeriods>(() => new AvailLineWithDetailedPeriods());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AvailLineWithDetailedPeriods> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Videa.AvailMartNS.Service.Proto.Types.AvailMartServiceReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AvailLineWithDetailedPeriods() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AvailLineWithDetailedPeriods(AvailLineWithDetailedPeriods other) : this() {
      availLineWithDetailedPeriodsHashKey_ = other.availLineWithDetailedPeriodsHashKey_;
      availLineWithDetailedPeriodsSqn_ = other.availLineWithDetailedPeriodsSqn_;
      availListHashKey_ = other.availListHashKey_;
      daypartName_ = other.daypartName_;
      availName_ = other.availName_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AvailLineWithDetailedPeriods Clone() {
      return new AvailLineWithDetailedPeriods(this);
    }

    /// <summary>Field number for the "AvailLineWithDetailedPeriodsHashKey" field.</summary>
    public const int AvailLineWithDetailedPeriodsHashKeyFieldNumber = 1;
    private string availLineWithDetailedPeriodsHashKey_ = "";
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AvailLineWithDetailedPeriodsHashKey {
      get { return availLineWithDetailedPeriodsHashKey_; }
      set {
        availLineWithDetailedPeriodsHashKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "AvailLineWithDetailedPeriodsSqn" field.</summary>
    public const int AvailLineWithDetailedPeriodsSqnFieldNumber = 2;
    private int availLineWithDetailedPeriodsSqn_;
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AvailLineWithDetailedPeriodsSqn {
      get { return availLineWithDetailedPeriodsSqn_; }
      set {
        availLineWithDetailedPeriodsSqn_ = value;
      }
    }

    /// <summary>Field number for the "AvailListHashKey" field.</summary>
    public const int AvailListHashKeyFieldNumber = 3;
    private string availListHashKey_ = "";
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AvailListHashKey {
      get { return availListHashKey_; }
      set {
        availListHashKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "DaypartName" field.</summary>
    public const int DaypartNameFieldNumber = 4;
    private string daypartName_ = "";
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DaypartName {
      get { return daypartName_; }
      set {
        daypartName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "AvailName" field.</summary>
    public const int AvailNameFieldNumber = 5;
    private string availName_ = "";
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AvailName {
      get { return availName_; }
      set {
        availName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AvailLineWithDetailedPeriods);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AvailLineWithDetailedPeriods other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AvailLineWithDetailedPeriodsHashKey != other.AvailLineWithDetailedPeriodsHashKey) return false;
      if (AvailLineWithDetailedPeriodsSqn != other.AvailLineWithDetailedPeriodsSqn) return false;
      if (AvailListHashKey != other.AvailListHashKey) return false;
      if (DaypartName != other.DaypartName) return false;
      if (AvailName != other.AvailName) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AvailLineWithDetailedPeriodsHashKey.Length != 0) hash ^= AvailLineWithDetailedPeriodsHashKey.GetHashCode();
      if (AvailLineWithDetailedPeriodsSqn != 0) hash ^= AvailLineWithDetailedPeriodsSqn.GetHashCode();
      if (AvailListHashKey.Length != 0) hash ^= AvailListHashKey.GetHashCode();
      if (DaypartName.Length != 0) hash ^= DaypartName.GetHashCode();
      if (AvailName.Length != 0) hash ^= AvailName.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AvailLineWithDetailedPeriodsHashKey.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AvailLineWithDetailedPeriodsHashKey);
      }
      if (AvailLineWithDetailedPeriodsSqn != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(AvailLineWithDetailedPeriodsSqn);
      }
      if (AvailListHashKey.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(AvailListHashKey);
      }
      if (DaypartName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(DaypartName);
      }
      if (AvailName.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(AvailName);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AvailLineWithDetailedPeriodsHashKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AvailLineWithDetailedPeriodsHashKey);
      }
      if (AvailLineWithDetailedPeriodsSqn != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AvailLineWithDetailedPeriodsSqn);
      }
      if (AvailListHashKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AvailListHashKey);
      }
      if (DaypartName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DaypartName);
      }
      if (AvailName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AvailName);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AvailLineWithDetailedPeriods other) {
      if (other == null) {
        return;
      }
      if (other.AvailLineWithDetailedPeriodsHashKey.Length != 0) {
        AvailLineWithDetailedPeriodsHashKey = other.AvailLineWithDetailedPeriodsHashKey;
      }
      if (other.AvailLineWithDetailedPeriodsSqn != 0) {
        AvailLineWithDetailedPeriodsSqn = other.AvailLineWithDetailedPeriodsSqn;
      }
      if (other.AvailListHashKey.Length != 0) {
        AvailListHashKey = other.AvailListHashKey;
      }
      if (other.DaypartName.Length != 0) {
        DaypartName = other.DaypartName;
      }
      if (other.AvailName.Length != 0) {
        AvailName = other.AvailName;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            AvailLineWithDetailedPeriodsHashKey = input.ReadString();
            break;
          }
          case 16: {
            AvailLineWithDetailedPeriodsSqn = input.ReadInt32();
            break;
          }
          case 26: {
            AvailListHashKey = input.ReadString();
            break;
          }
          case 34: {
            DaypartName = input.ReadString();
            break;
          }
          case 42: {
            AvailName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DetailedPeriod : pb::IMessage<DetailedPeriod> {
    private static readonly pb::MessageParser<DetailedPeriod> _parser = new pb::MessageParser<DetailedPeriod>(() => new DetailedPeriod());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DetailedPeriod> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Videa.AvailMartNS.Service.Proto.Types.AvailMartServiceReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DetailedPeriod() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DetailedPeriod(DetailedPeriod other) : this() {
      detailedPeriodHashKey_ = other.detailedPeriodHashKey_;
      detailedPeriodSqn_ = other.detailedPeriodSqn_;
      availLineWithDetailedPeriodsHashKey_ = other.availLineWithDetailedPeriodsHashKey_;
      StartDate = other.startDate_ != null ? other.StartDate.Clone() : null;
      EndDate = other.endDate_ != null ? other.EndDate.Clone() : null;
      rate_ = other.rate_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DetailedPeriod Clone() {
      return new DetailedPeriod(this);
    }

    /// <summary>Field number for the "DetailedPeriodHashKey" field.</summary>
    public const int DetailedPeriodHashKeyFieldNumber = 1;
    private string detailedPeriodHashKey_ = "";
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DetailedPeriodHashKey {
      get { return detailedPeriodHashKey_; }
      set {
        detailedPeriodHashKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "DetailedPeriodSqn" field.</summary>
    public const int DetailedPeriodSqnFieldNumber = 2;
    private int detailedPeriodSqn_;
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DetailedPeriodSqn {
      get { return detailedPeriodSqn_; }
      set {
        detailedPeriodSqn_ = value;
      }
    }

    /// <summary>Field number for the "AvailLineWithDetailedPeriodsHashKey" field.</summary>
    public const int AvailLineWithDetailedPeriodsHashKeyFieldNumber = 3;
    private string availLineWithDetailedPeriodsHashKey_ = "";
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AvailLineWithDetailedPeriodsHashKey {
      get { return availLineWithDetailedPeriodsHashKey_; }
      set {
        availLineWithDetailedPeriodsHashKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "StartDate" field.</summary>
    public const int StartDateFieldNumber = 4;
    private global::Google.Protobuf.WellKnownTypes.Timestamp startDate_;
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp StartDate {
      get { return startDate_; }
      set {
        startDate_ = value;
      }
    }

    /// <summary>Field number for the "EndDate" field.</summary>
    public const int EndDateFieldNumber = 5;
    private global::Google.Protobuf.WellKnownTypes.Timestamp endDate_;
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp EndDate {
      get { return endDate_; }
      set {
        endDate_ = value;
      }
    }

    /// <summary>Field number for the "Rate" field.</summary>
    public const int RateFieldNumber = 6;
    private string rate_ = "";
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Rate {
      get { return rate_; }
      set {
        rate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DetailedPeriod);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DetailedPeriod other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DetailedPeriodHashKey != other.DetailedPeriodHashKey) return false;
      if (DetailedPeriodSqn != other.DetailedPeriodSqn) return false;
      if (AvailLineWithDetailedPeriodsHashKey != other.AvailLineWithDetailedPeriodsHashKey) return false;
      if (!object.Equals(StartDate, other.StartDate)) return false;
      if (!object.Equals(EndDate, other.EndDate)) return false;
      if (Rate != other.Rate) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (DetailedPeriodHashKey.Length != 0) hash ^= DetailedPeriodHashKey.GetHashCode();
      if (DetailedPeriodSqn != 0) hash ^= DetailedPeriodSqn.GetHashCode();
      if (AvailLineWithDetailedPeriodsHashKey.Length != 0) hash ^= AvailLineWithDetailedPeriodsHashKey.GetHashCode();
      if (startDate_ != null) hash ^= StartDate.GetHashCode();
      if (endDate_ != null) hash ^= EndDate.GetHashCode();
      if (Rate.Length != 0) hash ^= Rate.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (DetailedPeriodHashKey.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(DetailedPeriodHashKey);
      }
      if (DetailedPeriodSqn != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(DetailedPeriodSqn);
      }
      if (AvailLineWithDetailedPeriodsHashKey.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(AvailLineWithDetailedPeriodsHashKey);
      }
      if (startDate_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(StartDate);
      }
      if (endDate_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(EndDate);
      }
      if (Rate.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Rate);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (DetailedPeriodHashKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DetailedPeriodHashKey);
      }
      if (DetailedPeriodSqn != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DetailedPeriodSqn);
      }
      if (AvailLineWithDetailedPeriodsHashKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AvailLineWithDetailedPeriodsHashKey);
      }
      if (startDate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StartDate);
      }
      if (endDate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EndDate);
      }
      if (Rate.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Rate);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DetailedPeriod other) {
      if (other == null) {
        return;
      }
      if (other.DetailedPeriodHashKey.Length != 0) {
        DetailedPeriodHashKey = other.DetailedPeriodHashKey;
      }
      if (other.DetailedPeriodSqn != 0) {
        DetailedPeriodSqn = other.DetailedPeriodSqn;
      }
      if (other.AvailLineWithDetailedPeriodsHashKey.Length != 0) {
        AvailLineWithDetailedPeriodsHashKey = other.AvailLineWithDetailedPeriodsHashKey;
      }
      if (other.startDate_ != null) {
        if (startDate_ == null) {
          startDate_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        StartDate.MergeFrom(other.StartDate);
      }
      if (other.endDate_ != null) {
        if (endDate_ == null) {
          endDate_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        EndDate.MergeFrom(other.EndDate);
      }
      if (other.Rate.Length != 0) {
        Rate = other.Rate;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            DetailedPeriodHashKey = input.ReadString();
            break;
          }
          case 16: {
            DetailedPeriodSqn = input.ReadInt32();
            break;
          }
          case 26: {
            AvailLineWithDetailedPeriodsHashKey = input.ReadString();
            break;
          }
          case 34: {
            if (startDate_ == null) {
              startDate_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(startDate_);
            break;
          }
          case 42: {
            if (endDate_ == null) {
              endDate_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(endDate_);
            break;
          }
          case 50: {
            Rate = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AvailMartDeleteRequest : pb::IMessage<AvailMartDeleteRequest> {
    private static readonly pb::MessageParser<AvailMartDeleteRequest> _parser = new pb::MessageParser<AvailMartDeleteRequest>(() => new AvailMartDeleteRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AvailMartDeleteRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Videa.AvailMartNS.Service.Proto.Types.AvailMartServiceReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AvailMartDeleteRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AvailMartDeleteRequest(AvailMartDeleteRequest other) : this() {
      availMartHashKey_ = other.availMartHashKey_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AvailMartDeleteRequest Clone() {
      return new AvailMartDeleteRequest(this);
    }

    /// <summary>Field number for the "AvailMartHashKey" field.</summary>
    public const int AvailMartHashKeyFieldNumber = 1;
    private string availMartHashKey_ = "";
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AvailMartHashKey {
      get { return availMartHashKey_; }
      set {
        availMartHashKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AvailMartDeleteRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AvailMartDeleteRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AvailMartHashKey != other.AvailMartHashKey) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AvailMartHashKey.Length != 0) hash ^= AvailMartHashKey.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AvailMartHashKey.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AvailMartHashKey);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AvailMartHashKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AvailMartHashKey);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AvailMartDeleteRequest other) {
      if (other == null) {
        return;
      }
      if (other.AvailMartHashKey.Length != 0) {
        AvailMartHashKey = other.AvailMartHashKey;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            AvailMartHashKey = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AvailMartDeleteResponse : pb::IMessage<AvailMartDeleteResponse> {
    private static readonly pb::MessageParser<AvailMartDeleteResponse> _parser = new pb::MessageParser<AvailMartDeleteResponse>(() => new AvailMartDeleteResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AvailMartDeleteResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Videa.AvailMartNS.Service.Proto.Types.AvailMartServiceReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AvailMartDeleteResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AvailMartDeleteResponse(AvailMartDeleteResponse other) : this() {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AvailMartDeleteResponse Clone() {
      return new AvailMartDeleteResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AvailMartDeleteResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AvailMartDeleteResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AvailMartDeleteResponse other) {
      if (other == null) {
        return;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
        }
      }
    }

  }

  public sealed partial class AvailListDeleteRequest : pb::IMessage<AvailListDeleteRequest> {
    private static readonly pb::MessageParser<AvailListDeleteRequest> _parser = new pb::MessageParser<AvailListDeleteRequest>(() => new AvailListDeleteRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AvailListDeleteRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Videa.AvailMartNS.Service.Proto.Types.AvailMartServiceReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AvailListDeleteRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AvailListDeleteRequest(AvailListDeleteRequest other) : this() {
      availListHashKey_ = other.availListHashKey_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AvailListDeleteRequest Clone() {
      return new AvailListDeleteRequest(this);
    }

    /// <summary>Field number for the "AvailListHashKey" field.</summary>
    public const int AvailListHashKeyFieldNumber = 1;
    private string availListHashKey_ = "";
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AvailListHashKey {
      get { return availListHashKey_; }
      set {
        availListHashKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AvailListDeleteRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AvailListDeleteRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AvailListHashKey != other.AvailListHashKey) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AvailListHashKey.Length != 0) hash ^= AvailListHashKey.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AvailListHashKey.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AvailListHashKey);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AvailListHashKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AvailListHashKey);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AvailListDeleteRequest other) {
      if (other == null) {
        return;
      }
      if (other.AvailListHashKey.Length != 0) {
        AvailListHashKey = other.AvailListHashKey;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            AvailListHashKey = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AvailListDeleteResponse : pb::IMessage<AvailListDeleteResponse> {
    private static readonly pb::MessageParser<AvailListDeleteResponse> _parser = new pb::MessageParser<AvailListDeleteResponse>(() => new AvailListDeleteResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AvailListDeleteResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Videa.AvailMartNS.Service.Proto.Types.AvailMartServiceReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AvailListDeleteResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AvailListDeleteResponse(AvailListDeleteResponse other) : this() {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AvailListDeleteResponse Clone() {
      return new AvailListDeleteResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AvailListDeleteResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AvailListDeleteResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AvailListDeleteResponse other) {
      if (other == null) {
        return;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
        }
      }
    }

  }

  public sealed partial class AvailLineWithDetailedPeriodsDeleteRequest : pb::IMessage<AvailLineWithDetailedPeriodsDeleteRequest> {
    private static readonly pb::MessageParser<AvailLineWithDetailedPeriodsDeleteRequest> _parser = new pb::MessageParser<AvailLineWithDetailedPeriodsDeleteRequest>(() => new AvailLineWithDetailedPeriodsDeleteRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AvailLineWithDetailedPeriodsDeleteRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Videa.AvailMartNS.Service.Proto.Types.AvailMartServiceReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AvailLineWithDetailedPeriodsDeleteRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AvailLineWithDetailedPeriodsDeleteRequest(AvailLineWithDetailedPeriodsDeleteRequest other) : this() {
      availLineWithDetailedPeriodsHashKey_ = other.availLineWithDetailedPeriodsHashKey_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AvailLineWithDetailedPeriodsDeleteRequest Clone() {
      return new AvailLineWithDetailedPeriodsDeleteRequest(this);
    }

    /// <summary>Field number for the "AvailLineWithDetailedPeriodsHashKey" field.</summary>
    public const int AvailLineWithDetailedPeriodsHashKeyFieldNumber = 1;
    private string availLineWithDetailedPeriodsHashKey_ = "";
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AvailLineWithDetailedPeriodsHashKey {
      get { return availLineWithDetailedPeriodsHashKey_; }
      set {
        availLineWithDetailedPeriodsHashKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AvailLineWithDetailedPeriodsDeleteRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AvailLineWithDetailedPeriodsDeleteRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AvailLineWithDetailedPeriodsHashKey != other.AvailLineWithDetailedPeriodsHashKey) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AvailLineWithDetailedPeriodsHashKey.Length != 0) hash ^= AvailLineWithDetailedPeriodsHashKey.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AvailLineWithDetailedPeriodsHashKey.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AvailLineWithDetailedPeriodsHashKey);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AvailLineWithDetailedPeriodsHashKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AvailLineWithDetailedPeriodsHashKey);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AvailLineWithDetailedPeriodsDeleteRequest other) {
      if (other == null) {
        return;
      }
      if (other.AvailLineWithDetailedPeriodsHashKey.Length != 0) {
        AvailLineWithDetailedPeriodsHashKey = other.AvailLineWithDetailedPeriodsHashKey;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            AvailLineWithDetailedPeriodsHashKey = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AvailLineWithDetailedPeriodsDeleteResponse : pb::IMessage<AvailLineWithDetailedPeriodsDeleteResponse> {
    private static readonly pb::MessageParser<AvailLineWithDetailedPeriodsDeleteResponse> _parser = new pb::MessageParser<AvailLineWithDetailedPeriodsDeleteResponse>(() => new AvailLineWithDetailedPeriodsDeleteResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AvailLineWithDetailedPeriodsDeleteResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Videa.AvailMartNS.Service.Proto.Types.AvailMartServiceReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AvailLineWithDetailedPeriodsDeleteResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AvailLineWithDetailedPeriodsDeleteResponse(AvailLineWithDetailedPeriodsDeleteResponse other) : this() {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AvailLineWithDetailedPeriodsDeleteResponse Clone() {
      return new AvailLineWithDetailedPeriodsDeleteResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AvailLineWithDetailedPeriodsDeleteResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AvailLineWithDetailedPeriodsDeleteResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AvailLineWithDetailedPeriodsDeleteResponse other) {
      if (other == null) {
        return;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
        }
      }
    }

  }

  public sealed partial class DetailedPeriodDeleteRequest : pb::IMessage<DetailedPeriodDeleteRequest> {
    private static readonly pb::MessageParser<DetailedPeriodDeleteRequest> _parser = new pb::MessageParser<DetailedPeriodDeleteRequest>(() => new DetailedPeriodDeleteRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DetailedPeriodDeleteRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Videa.AvailMartNS.Service.Proto.Types.AvailMartServiceReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DetailedPeriodDeleteRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DetailedPeriodDeleteRequest(DetailedPeriodDeleteRequest other) : this() {
      detailedPeriodHashKey_ = other.detailedPeriodHashKey_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DetailedPeriodDeleteRequest Clone() {
      return new DetailedPeriodDeleteRequest(this);
    }

    /// <summary>Field number for the "DetailedPeriodHashKey" field.</summary>
    public const int DetailedPeriodHashKeyFieldNumber = 1;
    private string detailedPeriodHashKey_ = "";
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DetailedPeriodHashKey {
      get { return detailedPeriodHashKey_; }
      set {
        detailedPeriodHashKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DetailedPeriodDeleteRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DetailedPeriodDeleteRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DetailedPeriodHashKey != other.DetailedPeriodHashKey) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (DetailedPeriodHashKey.Length != 0) hash ^= DetailedPeriodHashKey.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (DetailedPeriodHashKey.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(DetailedPeriodHashKey);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (DetailedPeriodHashKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DetailedPeriodHashKey);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DetailedPeriodDeleteRequest other) {
      if (other == null) {
        return;
      }
      if (other.DetailedPeriodHashKey.Length != 0) {
        DetailedPeriodHashKey = other.DetailedPeriodHashKey;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            DetailedPeriodHashKey = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DetailedPeriodDeleteResponse : pb::IMessage<DetailedPeriodDeleteResponse> {
    private static readonly pb::MessageParser<DetailedPeriodDeleteResponse> _parser = new pb::MessageParser<DetailedPeriodDeleteResponse>(() => new DetailedPeriodDeleteResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DetailedPeriodDeleteResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Videa.AvailMartNS.Service.Proto.Types.AvailMartServiceReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DetailedPeriodDeleteResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DetailedPeriodDeleteResponse(DetailedPeriodDeleteResponse other) : this() {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DetailedPeriodDeleteResponse Clone() {
      return new DetailedPeriodDeleteResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DetailedPeriodDeleteResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DetailedPeriodDeleteResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DetailedPeriodDeleteResponse other) {
      if (other == null) {
        return;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
        }
      }
    }

  }

  public sealed partial class AvailMartAddUpdateRequest : pb::IMessage<AvailMartAddUpdateRequest> {
    private static readonly pb::MessageParser<AvailMartAddUpdateRequest> _parser = new pb::MessageParser<AvailMartAddUpdateRequest>(() => new AvailMartAddUpdateRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AvailMartAddUpdateRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Videa.AvailMartNS.Service.Proto.Types.AvailMartServiceReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AvailMartAddUpdateRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AvailMartAddUpdateRequest(AvailMartAddUpdateRequest other) : this() {
      AvailMart = other.availMart_ != null ? other.AvailMart.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AvailMartAddUpdateRequest Clone() {
      return new AvailMartAddUpdateRequest(this);
    }

    /// <summary>Field number for the "AvailMart" field.</summary>
    public const int AvailMartFieldNumber = 1;
    private global::Videa.AvailMartNS.Service.Proto.Types.AvailMart availMart_;
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Videa.AvailMartNS.Service.Proto.Types.AvailMart AvailMart {
      get { return availMart_; }
      set {
        availMart_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AvailMartAddUpdateRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AvailMartAddUpdateRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AvailMart, other.AvailMart)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (availMart_ != null) hash ^= AvailMart.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (availMart_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(AvailMart);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (availMart_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AvailMart);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AvailMartAddUpdateRequest other) {
      if (other == null) {
        return;
      }
      if (other.availMart_ != null) {
        if (availMart_ == null) {
          availMart_ = new global::Videa.AvailMartNS.Service.Proto.Types.AvailMart();
        }
        AvailMart.MergeFrom(other.AvailMart);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (availMart_ == null) {
              availMart_ = new global::Videa.AvailMartNS.Service.Proto.Types.AvailMart();
            }
            input.ReadMessage(availMart_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AvailMartAddUpdateResponse : pb::IMessage<AvailMartAddUpdateResponse> {
    private static readonly pb::MessageParser<AvailMartAddUpdateResponse> _parser = new pb::MessageParser<AvailMartAddUpdateResponse>(() => new AvailMartAddUpdateResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AvailMartAddUpdateResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Videa.AvailMartNS.Service.Proto.Types.AvailMartServiceReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AvailMartAddUpdateResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AvailMartAddUpdateResponse(AvailMartAddUpdateResponse other) : this() {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AvailMartAddUpdateResponse Clone() {
      return new AvailMartAddUpdateResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AvailMartAddUpdateResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AvailMartAddUpdateResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AvailMartAddUpdateResponse other) {
      if (other == null) {
        return;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
        }
      }
    }

  }

  public sealed partial class AvailListAddUpdateRequest : pb::IMessage<AvailListAddUpdateRequest> {
    private static readonly pb::MessageParser<AvailListAddUpdateRequest> _parser = new pb::MessageParser<AvailListAddUpdateRequest>(() => new AvailListAddUpdateRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AvailListAddUpdateRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Videa.AvailMartNS.Service.Proto.Types.AvailMartServiceReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AvailListAddUpdateRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AvailListAddUpdateRequest(AvailListAddUpdateRequest other) : this() {
      AvailList = other.availList_ != null ? other.AvailList.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AvailListAddUpdateRequest Clone() {
      return new AvailListAddUpdateRequest(this);
    }

    /// <summary>Field number for the "AvailList" field.</summary>
    public const int AvailListFieldNumber = 1;
    private global::Videa.AvailMartNS.Service.Proto.Types.AvailList availList_;
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Videa.AvailMartNS.Service.Proto.Types.AvailList AvailList {
      get { return availList_; }
      set {
        availList_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AvailListAddUpdateRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AvailListAddUpdateRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AvailList, other.AvailList)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (availList_ != null) hash ^= AvailList.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (availList_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(AvailList);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (availList_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AvailList);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AvailListAddUpdateRequest other) {
      if (other == null) {
        return;
      }
      if (other.availList_ != null) {
        if (availList_ == null) {
          availList_ = new global::Videa.AvailMartNS.Service.Proto.Types.AvailList();
        }
        AvailList.MergeFrom(other.AvailList);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (availList_ == null) {
              availList_ = new global::Videa.AvailMartNS.Service.Proto.Types.AvailList();
            }
            input.ReadMessage(availList_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AvailListAddUpdateResponse : pb::IMessage<AvailListAddUpdateResponse> {
    private static readonly pb::MessageParser<AvailListAddUpdateResponse> _parser = new pb::MessageParser<AvailListAddUpdateResponse>(() => new AvailListAddUpdateResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AvailListAddUpdateResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Videa.AvailMartNS.Service.Proto.Types.AvailMartServiceReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AvailListAddUpdateResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AvailListAddUpdateResponse(AvailListAddUpdateResponse other) : this() {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AvailListAddUpdateResponse Clone() {
      return new AvailListAddUpdateResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AvailListAddUpdateResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AvailListAddUpdateResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AvailListAddUpdateResponse other) {
      if (other == null) {
        return;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
        }
      }
    }

  }

  public sealed partial class AvailLineWithDetailedPeriodsAddUpdateRequest : pb::IMessage<AvailLineWithDetailedPeriodsAddUpdateRequest> {
    private static readonly pb::MessageParser<AvailLineWithDetailedPeriodsAddUpdateRequest> _parser = new pb::MessageParser<AvailLineWithDetailedPeriodsAddUpdateRequest>(() => new AvailLineWithDetailedPeriodsAddUpdateRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AvailLineWithDetailedPeriodsAddUpdateRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Videa.AvailMartNS.Service.Proto.Types.AvailMartServiceReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AvailLineWithDetailedPeriodsAddUpdateRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AvailLineWithDetailedPeriodsAddUpdateRequest(AvailLineWithDetailedPeriodsAddUpdateRequest other) : this() {
      AvailLineWithDetailedPeriods = other.availLineWithDetailedPeriods_ != null ? other.AvailLineWithDetailedPeriods.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AvailLineWithDetailedPeriodsAddUpdateRequest Clone() {
      return new AvailLineWithDetailedPeriodsAddUpdateRequest(this);
    }

    /// <summary>Field number for the "AvailLineWithDetailedPeriods" field.</summary>
    public const int AvailLineWithDetailedPeriodsFieldNumber = 1;
    private global::Videa.AvailMartNS.Service.Proto.Types.AvailLineWithDetailedPeriods availLineWithDetailedPeriods_;
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Videa.AvailMartNS.Service.Proto.Types.AvailLineWithDetailedPeriods AvailLineWithDetailedPeriods {
      get { return availLineWithDetailedPeriods_; }
      set {
        availLineWithDetailedPeriods_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AvailLineWithDetailedPeriodsAddUpdateRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AvailLineWithDetailedPeriodsAddUpdateRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AvailLineWithDetailedPeriods, other.AvailLineWithDetailedPeriods)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (availLineWithDetailedPeriods_ != null) hash ^= AvailLineWithDetailedPeriods.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (availLineWithDetailedPeriods_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(AvailLineWithDetailedPeriods);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (availLineWithDetailedPeriods_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AvailLineWithDetailedPeriods);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AvailLineWithDetailedPeriodsAddUpdateRequest other) {
      if (other == null) {
        return;
      }
      if (other.availLineWithDetailedPeriods_ != null) {
        if (availLineWithDetailedPeriods_ == null) {
          availLineWithDetailedPeriods_ = new global::Videa.AvailMartNS.Service.Proto.Types.AvailLineWithDetailedPeriods();
        }
        AvailLineWithDetailedPeriods.MergeFrom(other.AvailLineWithDetailedPeriods);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (availLineWithDetailedPeriods_ == null) {
              availLineWithDetailedPeriods_ = new global::Videa.AvailMartNS.Service.Proto.Types.AvailLineWithDetailedPeriods();
            }
            input.ReadMessage(availLineWithDetailedPeriods_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AvailLineWithDetailedPeriodsAddUpdateResponse : pb::IMessage<AvailLineWithDetailedPeriodsAddUpdateResponse> {
    private static readonly pb::MessageParser<AvailLineWithDetailedPeriodsAddUpdateResponse> _parser = new pb::MessageParser<AvailLineWithDetailedPeriodsAddUpdateResponse>(() => new AvailLineWithDetailedPeriodsAddUpdateResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AvailLineWithDetailedPeriodsAddUpdateResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Videa.AvailMartNS.Service.Proto.Types.AvailMartServiceReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AvailLineWithDetailedPeriodsAddUpdateResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AvailLineWithDetailedPeriodsAddUpdateResponse(AvailLineWithDetailedPeriodsAddUpdateResponse other) : this() {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AvailLineWithDetailedPeriodsAddUpdateResponse Clone() {
      return new AvailLineWithDetailedPeriodsAddUpdateResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AvailLineWithDetailedPeriodsAddUpdateResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AvailLineWithDetailedPeriodsAddUpdateResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AvailLineWithDetailedPeriodsAddUpdateResponse other) {
      if (other == null) {
        return;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
        }
      }
    }

  }

  public sealed partial class DetailedPeriodAddUpdateRequest : pb::IMessage<DetailedPeriodAddUpdateRequest> {
    private static readonly pb::MessageParser<DetailedPeriodAddUpdateRequest> _parser = new pb::MessageParser<DetailedPeriodAddUpdateRequest>(() => new DetailedPeriodAddUpdateRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DetailedPeriodAddUpdateRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Videa.AvailMartNS.Service.Proto.Types.AvailMartServiceReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DetailedPeriodAddUpdateRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DetailedPeriodAddUpdateRequest(DetailedPeriodAddUpdateRequest other) : this() {
      DetailedPeriod = other.detailedPeriod_ != null ? other.DetailedPeriod.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DetailedPeriodAddUpdateRequest Clone() {
      return new DetailedPeriodAddUpdateRequest(this);
    }

    /// <summary>Field number for the "DetailedPeriod" field.</summary>
    public const int DetailedPeriodFieldNumber = 1;
    private global::Videa.AvailMartNS.Service.Proto.Types.DetailedPeriod detailedPeriod_;
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Videa.AvailMartNS.Service.Proto.Types.DetailedPeriod DetailedPeriod {
      get { return detailedPeriod_; }
      set {
        detailedPeriod_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DetailedPeriodAddUpdateRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DetailedPeriodAddUpdateRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(DetailedPeriod, other.DetailedPeriod)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (detailedPeriod_ != null) hash ^= DetailedPeriod.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (detailedPeriod_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(DetailedPeriod);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (detailedPeriod_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DetailedPeriod);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DetailedPeriodAddUpdateRequest other) {
      if (other == null) {
        return;
      }
      if (other.detailedPeriod_ != null) {
        if (detailedPeriod_ == null) {
          detailedPeriod_ = new global::Videa.AvailMartNS.Service.Proto.Types.DetailedPeriod();
        }
        DetailedPeriod.MergeFrom(other.DetailedPeriod);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (detailedPeriod_ == null) {
              detailedPeriod_ = new global::Videa.AvailMartNS.Service.Proto.Types.DetailedPeriod();
            }
            input.ReadMessage(detailedPeriod_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class DetailedPeriodAddUpdateResponse : pb::IMessage<DetailedPeriodAddUpdateResponse> {
    private static readonly pb::MessageParser<DetailedPeriodAddUpdateResponse> _parser = new pb::MessageParser<DetailedPeriodAddUpdateResponse>(() => new DetailedPeriodAddUpdateResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DetailedPeriodAddUpdateResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Videa.AvailMartNS.Service.Proto.Types.AvailMartServiceReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DetailedPeriodAddUpdateResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DetailedPeriodAddUpdateResponse(DetailedPeriodAddUpdateResponse other) : this() {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DetailedPeriodAddUpdateResponse Clone() {
      return new DetailedPeriodAddUpdateResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DetailedPeriodAddUpdateResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DetailedPeriodAddUpdateResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DetailedPeriodAddUpdateResponse other) {
      if (other == null) {
        return;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
        }
      }
    }

  }

  public sealed partial class GetAvailMartRequest : pb::IMessage<GetAvailMartRequest> {
    private static readonly pb::MessageParser<GetAvailMartRequest> _parser = new pb::MessageParser<GetAvailMartRequest>(() => new GetAvailMartRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetAvailMartRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Videa.AvailMartNS.Service.Proto.Types.AvailMartServiceReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAvailMartRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAvailMartRequest(GetAvailMartRequest other) : this() {
      stationHashKey_ = other.stationHashKey_;
      rateCardTypeHashKey_ = other.rateCardTypeHashKey_;
      daypartHashKey_ = other.daypartHashKey_;
      broadcastWeekList_ = other.broadcastWeekList_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAvailMartRequest Clone() {
      return new GetAvailMartRequest(this);
    }

    /// <summary>Field number for the "StationHashKey" field.</summary>
    public const int StationHashKeyFieldNumber = 1;
    private string stationHashKey_ = "";
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StationHashKey {
      get { return stationHashKey_; }
      set {
        stationHashKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "RateCardTypeHashKey" field.</summary>
    public const int RateCardTypeHashKeyFieldNumber = 2;
    private string rateCardTypeHashKey_ = "";
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RateCardTypeHashKey {
      get { return rateCardTypeHashKey_; }
      set {
        rateCardTypeHashKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "DaypartHashKey" field.</summary>
    public const int DaypartHashKeyFieldNumber = 3;
    private string daypartHashKey_ = "";
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DaypartHashKey {
      get { return daypartHashKey_; }
      set {
        daypartHashKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "BroadcastWeekList" field.</summary>
    public const int BroadcastWeekListFieldNumber = 4;
    private string broadcastWeekList_ = "";
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BroadcastWeekList {
      get { return broadcastWeekList_; }
      set {
        broadcastWeekList_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetAvailMartRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetAvailMartRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StationHashKey != other.StationHashKey) return false;
      if (RateCardTypeHashKey != other.RateCardTypeHashKey) return false;
      if (DaypartHashKey != other.DaypartHashKey) return false;
      if (BroadcastWeekList != other.BroadcastWeekList) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (StationHashKey.Length != 0) hash ^= StationHashKey.GetHashCode();
      if (RateCardTypeHashKey.Length != 0) hash ^= RateCardTypeHashKey.GetHashCode();
      if (DaypartHashKey.Length != 0) hash ^= DaypartHashKey.GetHashCode();
      if (BroadcastWeekList.Length != 0) hash ^= BroadcastWeekList.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (StationHashKey.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(StationHashKey);
      }
      if (RateCardTypeHashKey.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(RateCardTypeHashKey);
      }
      if (DaypartHashKey.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(DaypartHashKey);
      }
      if (BroadcastWeekList.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(BroadcastWeekList);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (StationHashKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StationHashKey);
      }
      if (RateCardTypeHashKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RateCardTypeHashKey);
      }
      if (DaypartHashKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DaypartHashKey);
      }
      if (BroadcastWeekList.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BroadcastWeekList);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetAvailMartRequest other) {
      if (other == null) {
        return;
      }
      if (other.StationHashKey.Length != 0) {
        StationHashKey = other.StationHashKey;
      }
      if (other.RateCardTypeHashKey.Length != 0) {
        RateCardTypeHashKey = other.RateCardTypeHashKey;
      }
      if (other.DaypartHashKey.Length != 0) {
        DaypartHashKey = other.DaypartHashKey;
      }
      if (other.BroadcastWeekList.Length != 0) {
        BroadcastWeekList = other.BroadcastWeekList;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            StationHashKey = input.ReadString();
            break;
          }
          case 18: {
            RateCardTypeHashKey = input.ReadString();
            break;
          }
          case 26: {
            DaypartHashKey = input.ReadString();
            break;
          }
          case 34: {
            BroadcastWeekList = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetAvailMartResponse : pb::IMessage<GetAvailMartResponse> {
    private static readonly pb::MessageParser<GetAvailMartResponse> _parser = new pb::MessageParser<GetAvailMartResponse>(() => new GetAvailMartResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetAvailMartResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Videa.AvailMartNS.Service.Proto.Types.AvailMartServiceReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAvailMartResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAvailMartResponse(GetAvailMartResponse other) : this() {
      availMart_ = other.availMart_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAvailMartResponse Clone() {
      return new GetAvailMartResponse(this);
    }

    /// <summary>Field number for the "AvailMart" field.</summary>
    public const int AvailMartFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Videa.AvailMartNS.Service.Proto.Types.AvailMart> _repeated_availMart_codec
        = pb::FieldCodec.ForMessage(10, global::Videa.AvailMartNS.Service.Proto.Types.AvailMart.Parser);
    private readonly pbc::RepeatedField<global::Videa.AvailMartNS.Service.Proto.Types.AvailMart> availMart_ = new pbc::RepeatedField<global::Videa.AvailMartNS.Service.Proto.Types.AvailMart>();
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Videa.AvailMartNS.Service.Proto.Types.AvailMart> AvailMart {
      get { return availMart_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetAvailMartResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetAvailMartResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!availMart_.Equals(other.availMart_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= availMart_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      availMart_.WriteTo(output, _repeated_availMart_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += availMart_.CalculateSize(_repeated_availMart_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetAvailMartResponse other) {
      if (other == null) {
        return;
      }
      availMart_.Add(other.availMart_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            availMart_.AddEntriesFrom(input, _repeated_availMart_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class BulkStoreRequest : pb::IMessage<BulkStoreRequest> {
    private static readonly pb::MessageParser<BulkStoreRequest> _parser = new pb::MessageParser<BulkStoreRequest>(() => new BulkStoreRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BulkStoreRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Videa.AvailMartNS.Service.Proto.Types.AvailMartServiceReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BulkStoreRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BulkStoreRequest(BulkStoreRequest other) : this() {
      availMart_ = other.availMart_.Clone();
      availList_ = other.availList_.Clone();
      availLineWithDetailedPeriods_ = other.availLineWithDetailedPeriods_.Clone();
      detailedPeriod_ = other.detailedPeriod_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BulkStoreRequest Clone() {
      return new BulkStoreRequest(this);
    }

    /// <summary>Field number for the "AvailMart" field.</summary>
    public const int AvailMartFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Videa.AvailMartNS.Service.Proto.Types.AvailMart> _repeated_availMart_codec
        = pb::FieldCodec.ForMessage(10, global::Videa.AvailMartNS.Service.Proto.Types.AvailMart.Parser);
    private readonly pbc::RepeatedField<global::Videa.AvailMartNS.Service.Proto.Types.AvailMart> availMart_ = new pbc::RepeatedField<global::Videa.AvailMartNS.Service.Proto.Types.AvailMart>();
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Videa.AvailMartNS.Service.Proto.Types.AvailMart> AvailMart {
      get { return availMart_; }
    }

    /// <summary>Field number for the "AvailList" field.</summary>
    public const int AvailListFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Videa.AvailMartNS.Service.Proto.Types.AvailList> _repeated_availList_codec
        = pb::FieldCodec.ForMessage(18, global::Videa.AvailMartNS.Service.Proto.Types.AvailList.Parser);
    private readonly pbc::RepeatedField<global::Videa.AvailMartNS.Service.Proto.Types.AvailList> availList_ = new pbc::RepeatedField<global::Videa.AvailMartNS.Service.Proto.Types.AvailList>();
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Videa.AvailMartNS.Service.Proto.Types.AvailList> AvailList {
      get { return availList_; }
    }

    /// <summary>Field number for the "AvailLineWithDetailedPeriods" field.</summary>
    public const int AvailLineWithDetailedPeriodsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Videa.AvailMartNS.Service.Proto.Types.AvailLineWithDetailedPeriods> _repeated_availLineWithDetailedPeriods_codec
        = pb::FieldCodec.ForMessage(26, global::Videa.AvailMartNS.Service.Proto.Types.AvailLineWithDetailedPeriods.Parser);
    private readonly pbc::RepeatedField<global::Videa.AvailMartNS.Service.Proto.Types.AvailLineWithDetailedPeriods> availLineWithDetailedPeriods_ = new pbc::RepeatedField<global::Videa.AvailMartNS.Service.Proto.Types.AvailLineWithDetailedPeriods>();
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Videa.AvailMartNS.Service.Proto.Types.AvailLineWithDetailedPeriods> AvailLineWithDetailedPeriods {
      get { return availLineWithDetailedPeriods_; }
    }

    /// <summary>Field number for the "DetailedPeriod" field.</summary>
    public const int DetailedPeriodFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Videa.AvailMartNS.Service.Proto.Types.DetailedPeriod> _repeated_detailedPeriod_codec
        = pb::FieldCodec.ForMessage(34, global::Videa.AvailMartNS.Service.Proto.Types.DetailedPeriod.Parser);
    private readonly pbc::RepeatedField<global::Videa.AvailMartNS.Service.Proto.Types.DetailedPeriod> detailedPeriod_ = new pbc::RepeatedField<global::Videa.AvailMartNS.Service.Proto.Types.DetailedPeriod>();
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Videa.AvailMartNS.Service.Proto.Types.DetailedPeriod> DetailedPeriod {
      get { return detailedPeriod_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BulkStoreRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BulkStoreRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!availMart_.Equals(other.availMart_)) return false;
      if(!availList_.Equals(other.availList_)) return false;
      if(!availLineWithDetailedPeriods_.Equals(other.availLineWithDetailedPeriods_)) return false;
      if(!detailedPeriod_.Equals(other.detailedPeriod_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= availMart_.GetHashCode();
      hash ^= availList_.GetHashCode();
      hash ^= availLineWithDetailedPeriods_.GetHashCode();
      hash ^= detailedPeriod_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      availMart_.WriteTo(output, _repeated_availMart_codec);
      availList_.WriteTo(output, _repeated_availList_codec);
      availLineWithDetailedPeriods_.WriteTo(output, _repeated_availLineWithDetailedPeriods_codec);
      detailedPeriod_.WriteTo(output, _repeated_detailedPeriod_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += availMart_.CalculateSize(_repeated_availMart_codec);
      size += availList_.CalculateSize(_repeated_availList_codec);
      size += availLineWithDetailedPeriods_.CalculateSize(_repeated_availLineWithDetailedPeriods_codec);
      size += detailedPeriod_.CalculateSize(_repeated_detailedPeriod_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BulkStoreRequest other) {
      if (other == null) {
        return;
      }
      availMart_.Add(other.availMart_);
      availList_.Add(other.availList_);
      availLineWithDetailedPeriods_.Add(other.availLineWithDetailedPeriods_);
      detailedPeriod_.Add(other.detailedPeriod_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            availMart_.AddEntriesFrom(input, _repeated_availMart_codec);
            break;
          }
          case 18: {
            availList_.AddEntriesFrom(input, _repeated_availList_codec);
            break;
          }
          case 26: {
            availLineWithDetailedPeriods_.AddEntriesFrom(input, _repeated_availLineWithDetailedPeriods_codec);
            break;
          }
          case 34: {
            detailedPeriod_.AddEntriesFrom(input, _repeated_detailedPeriod_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class BulkStoreResponse : pb::IMessage<BulkStoreResponse> {
    private static readonly pb::MessageParser<BulkStoreResponse> _parser = new pb::MessageParser<BulkStoreResponse>(() => new BulkStoreResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BulkStoreResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Videa.AvailMartNS.Service.Proto.Types.AvailMartServiceReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BulkStoreResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BulkStoreResponse(BulkStoreResponse other) : this() {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BulkStoreResponse Clone() {
      return new BulkStoreResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BulkStoreResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BulkStoreResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BulkStoreResponse other) {
      if (other == null) {
        return;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SharebuilderRateService.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Videa.SharebuilderRateNS.Service.Proto.Types {

  /// <summary>Holder for reflection information generated from SharebuilderRateService.proto</summary>
  public static partial class SharebuilderRateServiceReflection {

    #region Descriptor
    /// <summary>File descriptor for SharebuilderRateService.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SharebuilderRateServiceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch1TaGFyZWJ1aWxkZXJSYXRlU2VydmljZS5wcm90bxofZ29vZ2xlL3Byb3Rv",
            "YnVmL3RpbWVzdGFtcC5wcm90bxoeZ29vZ2xlL3Byb3RvYnVmL2R1cmF0aW9u",
            "LnByb3RvIk4KCFJhdGVUaWVyEhcKD1JhdGVUaWVySGFzaEtleRgBIAEoCRIT",
            "CgtSYXRlVGllclNxbhgCIAEoBRIUCgxSYXRlVGllck5hbWUYAyABKAkixgEK",
            "ClJhdGVQZXJpb2QSGQoRUmF0ZVBlcmlvZEhhc2hLZXkYASABKAkSFQoNUmF0",
            "ZVBlcmlvZFNxbhgCIAEoBRIWCg5SYXRlUGVyaW9kTmFtZRgDIAEoCRI3ChNS",
            "YXRlUGVyaW9kU3RhcnREYXRlGAQgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRp",
            "bWVzdGFtcBI1ChFSYXRlUGVyaW9kRW5kRGF0ZRgFIAEoCzIaLmdvb2dsZS5w",
            "cm90b2J1Zi5UaW1lc3RhbXAi7gEKFVNlbGxhYmxlSW52ZW50b3J5UmF0ZRIk",
            "ChxTZWxsYWJsZUludmVudG9yeVJhdGVIYXNoS2V5GAEgASgJEiAKGFNlbGxh",
            "YmxlSW52ZW50b3J5SGFzaEtleRgCIAEoCRIgChhTZWxsYWJsZUludmVudG9y",
            "eVJhdGVTcW4YAyABKAUSFwoPUmF0ZVRpZXJIYXNoS2V5GAQgASgJEiIKGlNl",
            "bGxhYmxlSW52ZW50b3J5UmF0ZVZhbHVlGAUgASgJEi4KClJvd1ZlcnNpb24Y",
            "BiABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wIhQKBFJhdGUSDAoE",
            "dG9kbxgBIAEoBSIwChVSYXRlVGllckRlbGV0ZVJlcXVlc3QSFwoPUmF0ZVRp",
            "ZXJIYXNoS2V5GAEgASgJIhgKFlJhdGVUaWVyRGVsZXRlUmVzcG9uc2UiNAoX",
            "UmF0ZVBlcmlvZERlbGV0ZVJlcXVlc3QSGQoRUmF0ZVBlcmlvZEhhc2hLZXkY",
            "ASABKAkiGgoYUmF0ZVBlcmlvZERlbGV0ZVJlc3BvbnNlIkoKIlNlbGxhYmxl",
            "SW52ZW50b3J5UmF0ZURlbGV0ZVJlcXVlc3QSJAocU2VsbGFibGVJbnZlbnRv",
            "cnlSYXRlSGFzaEtleRgBIAEoCSIlCiNTZWxsYWJsZUludmVudG9yeVJhdGVE",
            "ZWxldGVSZXNwb25zZSI3ChhSYXRlVGllckFkZFVwZGF0ZVJlcXVlc3QSGwoI",
            "UmF0ZVRpZXIYASABKAsyCS5SYXRlVGllciIbChlSYXRlVGllckFkZFVwZGF0",
            "ZVJlc3BvbnNlIj0KGlJhdGVQZXJpb2RBZGRVcGRhdGVSZXF1ZXN0Eh8KClJh",
            "dGVQZXJpb2QYASABKAsyCy5SYXRlUGVyaW9kIh0KG1JhdGVQZXJpb2RBZGRV",
            "cGRhdGVSZXNwb25zZSJeCiVTZWxsYWJsZUludmVudG9yeVJhdGVBZGRVcGRh",
            "dGVSZXF1ZXN0EjUKFVNlbGxhYmxlSW52ZW50b3J5UmF0ZRgBIAEoCzIWLlNl",
            "bGxhYmxlSW52ZW50b3J5UmF0ZSIoCiZTZWxsYWJsZUludmVudG9yeVJhdGVB",
            "ZGRVcGRhdGVSZXNwb25zZSI8ChtHZXRTaGFyZWJ1aWxkZXJSYXRlc1JlcXVl",
            "c3QSHQoVU2VsbGFibGVJbnZlbnRvcnlMaXN0GAEgASgJIjMKHEdldFNoYXJl",
            "YnVpbGRlclJhdGVzUmVzcG9uc2USEwoEUmF0ZRgBIAMoCzIFLlJhdGUinAEK",
            "EEJ1bGtTdG9yZVJlcXVlc3QSGwoIUmF0ZVRpZXIYASADKAsyCS5SYXRlVGll",
            "chIfCgpSYXRlUGVyaW9kGAIgAygLMgsuUmF0ZVBlcmlvZBI1ChVTZWxsYWJs",
            "ZUludmVudG9yeVJhdGUYAyADKAsyFi5TZWxsYWJsZUludmVudG9yeVJhdGUS",
            "EwoEUmF0ZRgEIAMoCzIFLlJhdGUiEwoRQnVsa1N0b3JlUmVzcG9uc2UyuQUK",
            "F1NoYXJlYnVpbGRlclJhdGVTZXJ2aWNlEkMKDlJhdGVUaWVyRGVsZXRlEhYu",
            "UmF0ZVRpZXJEZWxldGVSZXF1ZXN0GhcuUmF0ZVRpZXJEZWxldGVSZXNwb25z",
            "ZSIAEkkKEFJhdGVQZXJpb2REZWxldGUSGC5SYXRlUGVyaW9kRGVsZXRlUmVx",
            "dWVzdBoZLlJhdGVQZXJpb2REZWxldGVSZXNwb25zZSIAEmoKG1NlbGxhYmxl",
            "SW52ZW50b3J5UmF0ZURlbGV0ZRIjLlNlbGxhYmxlSW52ZW50b3J5UmF0ZURl",
            "bGV0ZVJlcXVlc3QaJC5TZWxsYWJsZUludmVudG9yeVJhdGVEZWxldGVSZXNw",
            "b25zZSIAEkwKEVJhdGVUaWVyQWRkVXBkYXRlEhkuUmF0ZVRpZXJBZGRVcGRh",
            "dGVSZXF1ZXN0GhouUmF0ZVRpZXJBZGRVcGRhdGVSZXNwb25zZSIAElIKE1Jh",
            "dGVQZXJpb2RBZGRVcGRhdGUSGy5SYXRlUGVyaW9kQWRkVXBkYXRlUmVxdWVz",
            "dBocLlJhdGVQZXJpb2RBZGRVcGRhdGVSZXNwb25zZSIAEnMKHlNlbGxhYmxl",
            "SW52ZW50b3J5UmF0ZUFkZFVwZGF0ZRImLlNlbGxhYmxlSW52ZW50b3J5UmF0",
            "ZUFkZFVwZGF0ZVJlcXVlc3QaJy5TZWxsYWJsZUludmVudG9yeVJhdGVBZGRV",
            "cGRhdGVSZXNwb25zZSIAElUKFEdldFNoYXJlYnVpbGRlclJhdGVzEhwuR2V0",
            "U2hhcmVidWlsZGVyUmF0ZXNSZXF1ZXN0Gh0uR2V0U2hhcmVidWlsZGVyUmF0",
            "ZXNSZXNwb25zZSIAEjQKCUJ1bGtTdG9yZRIRLkJ1bGtTdG9yZVJlcXVlc3Qa",
            "Ei5CdWxrU3RvcmVSZXNwb25zZSIAQi+qAixWaWRlYS5TaGFyZWJ1aWxkZXJS",
            "YXRlTlMuU2VydmljZS5Qcm90by5UeXBlc2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.DurationReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Videa.SharebuilderRateNS.Service.Proto.Types.RateTier), global::Videa.SharebuilderRateNS.Service.Proto.Types.RateTier.Parser, new[]{ "RateTierHashKey", "RateTierSqn", "RateTierName" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Videa.SharebuilderRateNS.Service.Proto.Types.RatePeriod), global::Videa.SharebuilderRateNS.Service.Proto.Types.RatePeriod.Parser, new[]{ "RatePeriodHashKey", "RatePeriodSqn", "RatePeriodName", "RatePeriodStartDate", "RatePeriodEndDate" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Videa.SharebuilderRateNS.Service.Proto.Types.SellableInventoryRate), global::Videa.SharebuilderRateNS.Service.Proto.Types.SellableInventoryRate.Parser, new[]{ "SellableInventoryRateHashKey", "SellableInventoryHashKey", "SellableInventoryRateSqn", "RateTierHashKey", "SellableInventoryRateValue", "RowVersion" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Videa.SharebuilderRateNS.Service.Proto.Types.Rate), global::Videa.SharebuilderRateNS.Service.Proto.Types.Rate.Parser, new[]{ "Todo" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Videa.SharebuilderRateNS.Service.Proto.Types.RateTierDeleteRequest), global::Videa.SharebuilderRateNS.Service.Proto.Types.RateTierDeleteRequest.Parser, new[]{ "RateTierHashKey" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Videa.SharebuilderRateNS.Service.Proto.Types.RateTierDeleteResponse), global::Videa.SharebuilderRateNS.Service.Proto.Types.RateTierDeleteResponse.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Videa.SharebuilderRateNS.Service.Proto.Types.RatePeriodDeleteRequest), global::Videa.SharebuilderRateNS.Service.Proto.Types.RatePeriodDeleteRequest.Parser, new[]{ "RatePeriodHashKey" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Videa.SharebuilderRateNS.Service.Proto.Types.RatePeriodDeleteResponse), global::Videa.SharebuilderRateNS.Service.Proto.Types.RatePeriodDeleteResponse.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Videa.SharebuilderRateNS.Service.Proto.Types.SellableInventoryRateDeleteRequest), global::Videa.SharebuilderRateNS.Service.Proto.Types.SellableInventoryRateDeleteRequest.Parser, new[]{ "SellableInventoryRateHashKey" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Videa.SharebuilderRateNS.Service.Proto.Types.SellableInventoryRateDeleteResponse), global::Videa.SharebuilderRateNS.Service.Proto.Types.SellableInventoryRateDeleteResponse.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Videa.SharebuilderRateNS.Service.Proto.Types.RateTierAddUpdateRequest), global::Videa.SharebuilderRateNS.Service.Proto.Types.RateTierAddUpdateRequest.Parser, new[]{ "RateTier" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Videa.SharebuilderRateNS.Service.Proto.Types.RateTierAddUpdateResponse), global::Videa.SharebuilderRateNS.Service.Proto.Types.RateTierAddUpdateResponse.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Videa.SharebuilderRateNS.Service.Proto.Types.RatePeriodAddUpdateRequest), global::Videa.SharebuilderRateNS.Service.Proto.Types.RatePeriodAddUpdateRequest.Parser, new[]{ "RatePeriod" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Videa.SharebuilderRateNS.Service.Proto.Types.RatePeriodAddUpdateResponse), global::Videa.SharebuilderRateNS.Service.Proto.Types.RatePeriodAddUpdateResponse.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Videa.SharebuilderRateNS.Service.Proto.Types.SellableInventoryRateAddUpdateRequest), global::Videa.SharebuilderRateNS.Service.Proto.Types.SellableInventoryRateAddUpdateRequest.Parser, new[]{ "SellableInventoryRate" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Videa.SharebuilderRateNS.Service.Proto.Types.SellableInventoryRateAddUpdateResponse), global::Videa.SharebuilderRateNS.Service.Proto.Types.SellableInventoryRateAddUpdateResponse.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Videa.SharebuilderRateNS.Service.Proto.Types.GetSharebuilderRatesRequest), global::Videa.SharebuilderRateNS.Service.Proto.Types.GetSharebuilderRatesRequest.Parser, new[]{ "SellableInventoryList" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Videa.SharebuilderRateNS.Service.Proto.Types.GetSharebuilderRatesResponse), global::Videa.SharebuilderRateNS.Service.Proto.Types.GetSharebuilderRatesResponse.Parser, new[]{ "Rate" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Videa.SharebuilderRateNS.Service.Proto.Types.BulkStoreRequest), global::Videa.SharebuilderRateNS.Service.Proto.Types.BulkStoreRequest.Parser, new[]{ "RateTier", "RatePeriod", "SellableInventoryRate", "Rate" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Videa.SharebuilderRateNS.Service.Proto.Types.BulkStoreResponse), global::Videa.SharebuilderRateNS.Service.Proto.Types.BulkStoreResponse.Parser, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class RateTier : pb::IMessage<RateTier> {
    private static readonly pb::MessageParser<RateTier> _parser = new pb::MessageParser<RateTier>(() => new RateTier());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RateTier> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Videa.SharebuilderRateNS.Service.Proto.Types.SharebuilderRateServiceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RateTier() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RateTier(RateTier other) : this() {
      rateTierHashKey_ = other.rateTierHashKey_;
      rateTierSqn_ = other.rateTierSqn_;
      rateTierName_ = other.rateTierName_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RateTier Clone() {
      return new RateTier(this);
    }

    /// <summary>Field number for the "RateTierHashKey" field.</summary>
    public const int RateTierHashKeyFieldNumber = 1;
    private string rateTierHashKey_ = "";
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RateTierHashKey {
      get { return rateTierHashKey_; }
      set {
        rateTierHashKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "RateTierSqn" field.</summary>
    public const int RateTierSqnFieldNumber = 2;
    private int rateTierSqn_;
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RateTierSqn {
      get { return rateTierSqn_; }
      set {
        rateTierSqn_ = value;
      }
    }

    /// <summary>Field number for the "RateTierName" field.</summary>
    public const int RateTierNameFieldNumber = 3;
    private string rateTierName_ = "";
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RateTierName {
      get { return rateTierName_; }
      set {
        rateTierName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RateTier);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RateTier other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RateTierHashKey != other.RateTierHashKey) return false;
      if (RateTierSqn != other.RateTierSqn) return false;
      if (RateTierName != other.RateTierName) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RateTierHashKey.Length != 0) hash ^= RateTierHashKey.GetHashCode();
      if (RateTierSqn != 0) hash ^= RateTierSqn.GetHashCode();
      if (RateTierName.Length != 0) hash ^= RateTierName.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RateTierHashKey.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(RateTierHashKey);
      }
      if (RateTierSqn != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(RateTierSqn);
      }
      if (RateTierName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(RateTierName);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RateTierHashKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RateTierHashKey);
      }
      if (RateTierSqn != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RateTierSqn);
      }
      if (RateTierName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RateTierName);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RateTier other) {
      if (other == null) {
        return;
      }
      if (other.RateTierHashKey.Length != 0) {
        RateTierHashKey = other.RateTierHashKey;
      }
      if (other.RateTierSqn != 0) {
        RateTierSqn = other.RateTierSqn;
      }
      if (other.RateTierName.Length != 0) {
        RateTierName = other.RateTierName;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            RateTierHashKey = input.ReadString();
            break;
          }
          case 16: {
            RateTierSqn = input.ReadInt32();
            break;
          }
          case 26: {
            RateTierName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RatePeriod : pb::IMessage<RatePeriod> {
    private static readonly pb::MessageParser<RatePeriod> _parser = new pb::MessageParser<RatePeriod>(() => new RatePeriod());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RatePeriod> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Videa.SharebuilderRateNS.Service.Proto.Types.SharebuilderRateServiceReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RatePeriod() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RatePeriod(RatePeriod other) : this() {
      ratePeriodHashKey_ = other.ratePeriodHashKey_;
      ratePeriodSqn_ = other.ratePeriodSqn_;
      ratePeriodName_ = other.ratePeriodName_;
      RatePeriodStartDate = other.ratePeriodStartDate_ != null ? other.RatePeriodStartDate.Clone() : null;
      RatePeriodEndDate = other.ratePeriodEndDate_ != null ? other.RatePeriodEndDate.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RatePeriod Clone() {
      return new RatePeriod(this);
    }

    /// <summary>Field number for the "RatePeriodHashKey" field.</summary>
    public const int RatePeriodHashKeyFieldNumber = 1;
    private string ratePeriodHashKey_ = "";
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RatePeriodHashKey {
      get { return ratePeriodHashKey_; }
      set {
        ratePeriodHashKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "RatePeriodSqn" field.</summary>
    public const int RatePeriodSqnFieldNumber = 2;
    private int ratePeriodSqn_;
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RatePeriodSqn {
      get { return ratePeriodSqn_; }
      set {
        ratePeriodSqn_ = value;
      }
    }

    /// <summary>Field number for the "RatePeriodName" field.</summary>
    public const int RatePeriodNameFieldNumber = 3;
    private string ratePeriodName_ = "";
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RatePeriodName {
      get { return ratePeriodName_; }
      set {
        ratePeriodName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "RatePeriodStartDate" field.</summary>
    public const int RatePeriodStartDateFieldNumber = 4;
    private global::Google.Protobuf.WellKnownTypes.Timestamp ratePeriodStartDate_;
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp RatePeriodStartDate {
      get { return ratePeriodStartDate_; }
      set {
        ratePeriodStartDate_ = value;
      }
    }

    /// <summary>Field number for the "RatePeriodEndDate" field.</summary>
    public const int RatePeriodEndDateFieldNumber = 5;
    private global::Google.Protobuf.WellKnownTypes.Timestamp ratePeriodEndDate_;
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp RatePeriodEndDate {
      get { return ratePeriodEndDate_; }
      set {
        ratePeriodEndDate_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RatePeriod);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RatePeriod other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RatePeriodHashKey != other.RatePeriodHashKey) return false;
      if (RatePeriodSqn != other.RatePeriodSqn) return false;
      if (RatePeriodName != other.RatePeriodName) return false;
      if (!object.Equals(RatePeriodStartDate, other.RatePeriodStartDate)) return false;
      if (!object.Equals(RatePeriodEndDate, other.RatePeriodEndDate)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RatePeriodHashKey.Length != 0) hash ^= RatePeriodHashKey.GetHashCode();
      if (RatePeriodSqn != 0) hash ^= RatePeriodSqn.GetHashCode();
      if (RatePeriodName.Length != 0) hash ^= RatePeriodName.GetHashCode();
      if (ratePeriodStartDate_ != null) hash ^= RatePeriodStartDate.GetHashCode();
      if (ratePeriodEndDate_ != null) hash ^= RatePeriodEndDate.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RatePeriodHashKey.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(RatePeriodHashKey);
      }
      if (RatePeriodSqn != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(RatePeriodSqn);
      }
      if (RatePeriodName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(RatePeriodName);
      }
      if (ratePeriodStartDate_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(RatePeriodStartDate);
      }
      if (ratePeriodEndDate_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(RatePeriodEndDate);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RatePeriodHashKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RatePeriodHashKey);
      }
      if (RatePeriodSqn != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RatePeriodSqn);
      }
      if (RatePeriodName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RatePeriodName);
      }
      if (ratePeriodStartDate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RatePeriodStartDate);
      }
      if (ratePeriodEndDate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RatePeriodEndDate);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RatePeriod other) {
      if (other == null) {
        return;
      }
      if (other.RatePeriodHashKey.Length != 0) {
        RatePeriodHashKey = other.RatePeriodHashKey;
      }
      if (other.RatePeriodSqn != 0) {
        RatePeriodSqn = other.RatePeriodSqn;
      }
      if (other.RatePeriodName.Length != 0) {
        RatePeriodName = other.RatePeriodName;
      }
      if (other.ratePeriodStartDate_ != null) {
        if (ratePeriodStartDate_ == null) {
          ratePeriodStartDate_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        RatePeriodStartDate.MergeFrom(other.RatePeriodStartDate);
      }
      if (other.ratePeriodEndDate_ != null) {
        if (ratePeriodEndDate_ == null) {
          ratePeriodEndDate_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        RatePeriodEndDate.MergeFrom(other.RatePeriodEndDate);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            RatePeriodHashKey = input.ReadString();
            break;
          }
          case 16: {
            RatePeriodSqn = input.ReadInt32();
            break;
          }
          case 26: {
            RatePeriodName = input.ReadString();
            break;
          }
          case 34: {
            if (ratePeriodStartDate_ == null) {
              ratePeriodStartDate_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(ratePeriodStartDate_);
            break;
          }
          case 42: {
            if (ratePeriodEndDate_ == null) {
              ratePeriodEndDate_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(ratePeriodEndDate_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SellableInventoryRate : pb::IMessage<SellableInventoryRate> {
    private static readonly pb::MessageParser<SellableInventoryRate> _parser = new pb::MessageParser<SellableInventoryRate>(() => new SellableInventoryRate());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SellableInventoryRate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Videa.SharebuilderRateNS.Service.Proto.Types.SharebuilderRateServiceReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SellableInventoryRate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SellableInventoryRate(SellableInventoryRate other) : this() {
      sellableInventoryRateHashKey_ = other.sellableInventoryRateHashKey_;
      sellableInventoryHashKey_ = other.sellableInventoryHashKey_;
      sellableInventoryRateSqn_ = other.sellableInventoryRateSqn_;
      rateTierHashKey_ = other.rateTierHashKey_;
      sellableInventoryRateValue_ = other.sellableInventoryRateValue_;
      RowVersion = other.rowVersion_ != null ? other.RowVersion.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SellableInventoryRate Clone() {
      return new SellableInventoryRate(this);
    }

    /// <summary>Field number for the "SellableInventoryRateHashKey" field.</summary>
    public const int SellableInventoryRateHashKeyFieldNumber = 1;
    private string sellableInventoryRateHashKey_ = "";
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SellableInventoryRateHashKey {
      get { return sellableInventoryRateHashKey_; }
      set {
        sellableInventoryRateHashKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "SellableInventoryHashKey" field.</summary>
    public const int SellableInventoryHashKeyFieldNumber = 2;
    private string sellableInventoryHashKey_ = "";
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SellableInventoryHashKey {
      get { return sellableInventoryHashKey_; }
      set {
        sellableInventoryHashKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "SellableInventoryRateSqn" field.</summary>
    public const int SellableInventoryRateSqnFieldNumber = 3;
    private int sellableInventoryRateSqn_;
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SellableInventoryRateSqn {
      get { return sellableInventoryRateSqn_; }
      set {
        sellableInventoryRateSqn_ = value;
      }
    }

    /// <summary>Field number for the "RateTierHashKey" field.</summary>
    public const int RateTierHashKeyFieldNumber = 4;
    private string rateTierHashKey_ = "";
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RateTierHashKey {
      get { return rateTierHashKey_; }
      set {
        rateTierHashKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "SellableInventoryRateValue" field.</summary>
    public const int SellableInventoryRateValueFieldNumber = 5;
    private string sellableInventoryRateValue_ = "";
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SellableInventoryRateValue {
      get { return sellableInventoryRateValue_; }
      set {
        sellableInventoryRateValue_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "RowVersion" field.</summary>
    public const int RowVersionFieldNumber = 6;
    private global::Google.Protobuf.WellKnownTypes.Timestamp rowVersion_;
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp RowVersion {
      get { return rowVersion_; }
      set {
        rowVersion_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SellableInventoryRate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SellableInventoryRate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SellableInventoryRateHashKey != other.SellableInventoryRateHashKey) return false;
      if (SellableInventoryHashKey != other.SellableInventoryHashKey) return false;
      if (SellableInventoryRateSqn != other.SellableInventoryRateSqn) return false;
      if (RateTierHashKey != other.RateTierHashKey) return false;
      if (SellableInventoryRateValue != other.SellableInventoryRateValue) return false;
      if (!object.Equals(RowVersion, other.RowVersion)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SellableInventoryRateHashKey.Length != 0) hash ^= SellableInventoryRateHashKey.GetHashCode();
      if (SellableInventoryHashKey.Length != 0) hash ^= SellableInventoryHashKey.GetHashCode();
      if (SellableInventoryRateSqn != 0) hash ^= SellableInventoryRateSqn.GetHashCode();
      if (RateTierHashKey.Length != 0) hash ^= RateTierHashKey.GetHashCode();
      if (SellableInventoryRateValue.Length != 0) hash ^= SellableInventoryRateValue.GetHashCode();
      if (rowVersion_ != null) hash ^= RowVersion.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SellableInventoryRateHashKey.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SellableInventoryRateHashKey);
      }
      if (SellableInventoryHashKey.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SellableInventoryHashKey);
      }
      if (SellableInventoryRateSqn != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(SellableInventoryRateSqn);
      }
      if (RateTierHashKey.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(RateTierHashKey);
      }
      if (SellableInventoryRateValue.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(SellableInventoryRateValue);
      }
      if (rowVersion_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(RowVersion);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SellableInventoryRateHashKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SellableInventoryRateHashKey);
      }
      if (SellableInventoryHashKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SellableInventoryHashKey);
      }
      if (SellableInventoryRateSqn != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SellableInventoryRateSqn);
      }
      if (RateTierHashKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RateTierHashKey);
      }
      if (SellableInventoryRateValue.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SellableInventoryRateValue);
      }
      if (rowVersion_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RowVersion);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SellableInventoryRate other) {
      if (other == null) {
        return;
      }
      if (other.SellableInventoryRateHashKey.Length != 0) {
        SellableInventoryRateHashKey = other.SellableInventoryRateHashKey;
      }
      if (other.SellableInventoryHashKey.Length != 0) {
        SellableInventoryHashKey = other.SellableInventoryHashKey;
      }
      if (other.SellableInventoryRateSqn != 0) {
        SellableInventoryRateSqn = other.SellableInventoryRateSqn;
      }
      if (other.RateTierHashKey.Length != 0) {
        RateTierHashKey = other.RateTierHashKey;
      }
      if (other.SellableInventoryRateValue.Length != 0) {
        SellableInventoryRateValue = other.SellableInventoryRateValue;
      }
      if (other.rowVersion_ != null) {
        if (rowVersion_ == null) {
          rowVersion_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        RowVersion.MergeFrom(other.RowVersion);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            SellableInventoryRateHashKey = input.ReadString();
            break;
          }
          case 18: {
            SellableInventoryHashKey = input.ReadString();
            break;
          }
          case 24: {
            SellableInventoryRateSqn = input.ReadInt32();
            break;
          }
          case 34: {
            RateTierHashKey = input.ReadString();
            break;
          }
          case 42: {
            SellableInventoryRateValue = input.ReadString();
            break;
          }
          case 50: {
            if (rowVersion_ == null) {
              rowVersion_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(rowVersion_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Rate : pb::IMessage<Rate> {
    private static readonly pb::MessageParser<Rate> _parser = new pb::MessageParser<Rate>(() => new Rate());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Rate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Videa.SharebuilderRateNS.Service.Proto.Types.SharebuilderRateServiceReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Rate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Rate(Rate other) : this() {
      todo_ = other.todo_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Rate Clone() {
      return new Rate(this);
    }

    /// <summary>Field number for the "todo" field.</summary>
    public const int TodoFieldNumber = 1;
    private int todo_;
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Todo {
      get { return todo_; }
      set {
        todo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Rate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Rate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Todo != other.Todo) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Todo != 0) hash ^= Todo.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Todo != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Todo);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Todo != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Todo);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Rate other) {
      if (other == null) {
        return;
      }
      if (other.Todo != 0) {
        Todo = other.Todo;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Todo = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RateTierDeleteRequest : pb::IMessage<RateTierDeleteRequest> {
    private static readonly pb::MessageParser<RateTierDeleteRequest> _parser = new pb::MessageParser<RateTierDeleteRequest>(() => new RateTierDeleteRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RateTierDeleteRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Videa.SharebuilderRateNS.Service.Proto.Types.SharebuilderRateServiceReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RateTierDeleteRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RateTierDeleteRequest(RateTierDeleteRequest other) : this() {
      rateTierHashKey_ = other.rateTierHashKey_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RateTierDeleteRequest Clone() {
      return new RateTierDeleteRequest(this);
    }

    /// <summary>Field number for the "RateTierHashKey" field.</summary>
    public const int RateTierHashKeyFieldNumber = 1;
    private string rateTierHashKey_ = "";
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RateTierHashKey {
      get { return rateTierHashKey_; }
      set {
        rateTierHashKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RateTierDeleteRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RateTierDeleteRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RateTierHashKey != other.RateTierHashKey) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RateTierHashKey.Length != 0) hash ^= RateTierHashKey.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RateTierHashKey.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(RateTierHashKey);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RateTierHashKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RateTierHashKey);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RateTierDeleteRequest other) {
      if (other == null) {
        return;
      }
      if (other.RateTierHashKey.Length != 0) {
        RateTierHashKey = other.RateTierHashKey;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            RateTierHashKey = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RateTierDeleteResponse : pb::IMessage<RateTierDeleteResponse> {
    private static readonly pb::MessageParser<RateTierDeleteResponse> _parser = new pb::MessageParser<RateTierDeleteResponse>(() => new RateTierDeleteResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RateTierDeleteResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Videa.SharebuilderRateNS.Service.Proto.Types.SharebuilderRateServiceReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RateTierDeleteResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RateTierDeleteResponse(RateTierDeleteResponse other) : this() {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RateTierDeleteResponse Clone() {
      return new RateTierDeleteResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RateTierDeleteResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RateTierDeleteResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RateTierDeleteResponse other) {
      if (other == null) {
        return;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
        }
      }
    }

  }

  public sealed partial class RatePeriodDeleteRequest : pb::IMessage<RatePeriodDeleteRequest> {
    private static readonly pb::MessageParser<RatePeriodDeleteRequest> _parser = new pb::MessageParser<RatePeriodDeleteRequest>(() => new RatePeriodDeleteRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RatePeriodDeleteRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Videa.SharebuilderRateNS.Service.Proto.Types.SharebuilderRateServiceReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RatePeriodDeleteRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RatePeriodDeleteRequest(RatePeriodDeleteRequest other) : this() {
      ratePeriodHashKey_ = other.ratePeriodHashKey_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RatePeriodDeleteRequest Clone() {
      return new RatePeriodDeleteRequest(this);
    }

    /// <summary>Field number for the "RatePeriodHashKey" field.</summary>
    public const int RatePeriodHashKeyFieldNumber = 1;
    private string ratePeriodHashKey_ = "";
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RatePeriodHashKey {
      get { return ratePeriodHashKey_; }
      set {
        ratePeriodHashKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RatePeriodDeleteRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RatePeriodDeleteRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RatePeriodHashKey != other.RatePeriodHashKey) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RatePeriodHashKey.Length != 0) hash ^= RatePeriodHashKey.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RatePeriodHashKey.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(RatePeriodHashKey);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RatePeriodHashKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RatePeriodHashKey);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RatePeriodDeleteRequest other) {
      if (other == null) {
        return;
      }
      if (other.RatePeriodHashKey.Length != 0) {
        RatePeriodHashKey = other.RatePeriodHashKey;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            RatePeriodHashKey = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RatePeriodDeleteResponse : pb::IMessage<RatePeriodDeleteResponse> {
    private static readonly pb::MessageParser<RatePeriodDeleteResponse> _parser = new pb::MessageParser<RatePeriodDeleteResponse>(() => new RatePeriodDeleteResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RatePeriodDeleteResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Videa.SharebuilderRateNS.Service.Proto.Types.SharebuilderRateServiceReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RatePeriodDeleteResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RatePeriodDeleteResponse(RatePeriodDeleteResponse other) : this() {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RatePeriodDeleteResponse Clone() {
      return new RatePeriodDeleteResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RatePeriodDeleteResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RatePeriodDeleteResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RatePeriodDeleteResponse other) {
      if (other == null) {
        return;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
        }
      }
    }

  }

  public sealed partial class SellableInventoryRateDeleteRequest : pb::IMessage<SellableInventoryRateDeleteRequest> {
    private static readonly pb::MessageParser<SellableInventoryRateDeleteRequest> _parser = new pb::MessageParser<SellableInventoryRateDeleteRequest>(() => new SellableInventoryRateDeleteRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SellableInventoryRateDeleteRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Videa.SharebuilderRateNS.Service.Proto.Types.SharebuilderRateServiceReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SellableInventoryRateDeleteRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SellableInventoryRateDeleteRequest(SellableInventoryRateDeleteRequest other) : this() {
      sellableInventoryRateHashKey_ = other.sellableInventoryRateHashKey_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SellableInventoryRateDeleteRequest Clone() {
      return new SellableInventoryRateDeleteRequest(this);
    }

    /// <summary>Field number for the "SellableInventoryRateHashKey" field.</summary>
    public const int SellableInventoryRateHashKeyFieldNumber = 1;
    private string sellableInventoryRateHashKey_ = "";
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SellableInventoryRateHashKey {
      get { return sellableInventoryRateHashKey_; }
      set {
        sellableInventoryRateHashKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SellableInventoryRateDeleteRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SellableInventoryRateDeleteRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SellableInventoryRateHashKey != other.SellableInventoryRateHashKey) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SellableInventoryRateHashKey.Length != 0) hash ^= SellableInventoryRateHashKey.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SellableInventoryRateHashKey.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SellableInventoryRateHashKey);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SellableInventoryRateHashKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SellableInventoryRateHashKey);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SellableInventoryRateDeleteRequest other) {
      if (other == null) {
        return;
      }
      if (other.SellableInventoryRateHashKey.Length != 0) {
        SellableInventoryRateHashKey = other.SellableInventoryRateHashKey;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            SellableInventoryRateHashKey = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SellableInventoryRateDeleteResponse : pb::IMessage<SellableInventoryRateDeleteResponse> {
    private static readonly pb::MessageParser<SellableInventoryRateDeleteResponse> _parser = new pb::MessageParser<SellableInventoryRateDeleteResponse>(() => new SellableInventoryRateDeleteResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SellableInventoryRateDeleteResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Videa.SharebuilderRateNS.Service.Proto.Types.SharebuilderRateServiceReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SellableInventoryRateDeleteResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SellableInventoryRateDeleteResponse(SellableInventoryRateDeleteResponse other) : this() {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SellableInventoryRateDeleteResponse Clone() {
      return new SellableInventoryRateDeleteResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SellableInventoryRateDeleteResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SellableInventoryRateDeleteResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SellableInventoryRateDeleteResponse other) {
      if (other == null) {
        return;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
        }
      }
    }

  }

  public sealed partial class RateTierAddUpdateRequest : pb::IMessage<RateTierAddUpdateRequest> {
    private static readonly pb::MessageParser<RateTierAddUpdateRequest> _parser = new pb::MessageParser<RateTierAddUpdateRequest>(() => new RateTierAddUpdateRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RateTierAddUpdateRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Videa.SharebuilderRateNS.Service.Proto.Types.SharebuilderRateServiceReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RateTierAddUpdateRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RateTierAddUpdateRequest(RateTierAddUpdateRequest other) : this() {
      RateTier = other.rateTier_ != null ? other.RateTier.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RateTierAddUpdateRequest Clone() {
      return new RateTierAddUpdateRequest(this);
    }

    /// <summary>Field number for the "RateTier" field.</summary>
    public const int RateTierFieldNumber = 1;
    private global::Videa.SharebuilderRateNS.Service.Proto.Types.RateTier rateTier_;
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Videa.SharebuilderRateNS.Service.Proto.Types.RateTier RateTier {
      get { return rateTier_; }
      set {
        rateTier_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RateTierAddUpdateRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RateTierAddUpdateRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(RateTier, other.RateTier)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (rateTier_ != null) hash ^= RateTier.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (rateTier_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(RateTier);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (rateTier_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RateTier);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RateTierAddUpdateRequest other) {
      if (other == null) {
        return;
      }
      if (other.rateTier_ != null) {
        if (rateTier_ == null) {
          rateTier_ = new global::Videa.SharebuilderRateNS.Service.Proto.Types.RateTier();
        }
        RateTier.MergeFrom(other.RateTier);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (rateTier_ == null) {
              rateTier_ = new global::Videa.SharebuilderRateNS.Service.Proto.Types.RateTier();
            }
            input.ReadMessage(rateTier_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class RateTierAddUpdateResponse : pb::IMessage<RateTierAddUpdateResponse> {
    private static readonly pb::MessageParser<RateTierAddUpdateResponse> _parser = new pb::MessageParser<RateTierAddUpdateResponse>(() => new RateTierAddUpdateResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RateTierAddUpdateResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Videa.SharebuilderRateNS.Service.Proto.Types.SharebuilderRateServiceReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RateTierAddUpdateResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RateTierAddUpdateResponse(RateTierAddUpdateResponse other) : this() {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RateTierAddUpdateResponse Clone() {
      return new RateTierAddUpdateResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RateTierAddUpdateResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RateTierAddUpdateResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RateTierAddUpdateResponse other) {
      if (other == null) {
        return;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
        }
      }
    }

  }

  public sealed partial class RatePeriodAddUpdateRequest : pb::IMessage<RatePeriodAddUpdateRequest> {
    private static readonly pb::MessageParser<RatePeriodAddUpdateRequest> _parser = new pb::MessageParser<RatePeriodAddUpdateRequest>(() => new RatePeriodAddUpdateRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RatePeriodAddUpdateRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Videa.SharebuilderRateNS.Service.Proto.Types.SharebuilderRateServiceReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RatePeriodAddUpdateRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RatePeriodAddUpdateRequest(RatePeriodAddUpdateRequest other) : this() {
      RatePeriod = other.ratePeriod_ != null ? other.RatePeriod.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RatePeriodAddUpdateRequest Clone() {
      return new RatePeriodAddUpdateRequest(this);
    }

    /// <summary>Field number for the "RatePeriod" field.</summary>
    public const int RatePeriodFieldNumber = 1;
    private global::Videa.SharebuilderRateNS.Service.Proto.Types.RatePeriod ratePeriod_;
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Videa.SharebuilderRateNS.Service.Proto.Types.RatePeriod RatePeriod {
      get { return ratePeriod_; }
      set {
        ratePeriod_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RatePeriodAddUpdateRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RatePeriodAddUpdateRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(RatePeriod, other.RatePeriod)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ratePeriod_ != null) hash ^= RatePeriod.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ratePeriod_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(RatePeriod);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ratePeriod_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RatePeriod);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RatePeriodAddUpdateRequest other) {
      if (other == null) {
        return;
      }
      if (other.ratePeriod_ != null) {
        if (ratePeriod_ == null) {
          ratePeriod_ = new global::Videa.SharebuilderRateNS.Service.Proto.Types.RatePeriod();
        }
        RatePeriod.MergeFrom(other.RatePeriod);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (ratePeriod_ == null) {
              ratePeriod_ = new global::Videa.SharebuilderRateNS.Service.Proto.Types.RatePeriod();
            }
            input.ReadMessage(ratePeriod_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class RatePeriodAddUpdateResponse : pb::IMessage<RatePeriodAddUpdateResponse> {
    private static readonly pb::MessageParser<RatePeriodAddUpdateResponse> _parser = new pb::MessageParser<RatePeriodAddUpdateResponse>(() => new RatePeriodAddUpdateResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RatePeriodAddUpdateResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Videa.SharebuilderRateNS.Service.Proto.Types.SharebuilderRateServiceReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RatePeriodAddUpdateResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RatePeriodAddUpdateResponse(RatePeriodAddUpdateResponse other) : this() {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RatePeriodAddUpdateResponse Clone() {
      return new RatePeriodAddUpdateResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RatePeriodAddUpdateResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RatePeriodAddUpdateResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RatePeriodAddUpdateResponse other) {
      if (other == null) {
        return;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
        }
      }
    }

  }

  public sealed partial class SellableInventoryRateAddUpdateRequest : pb::IMessage<SellableInventoryRateAddUpdateRequest> {
    private static readonly pb::MessageParser<SellableInventoryRateAddUpdateRequest> _parser = new pb::MessageParser<SellableInventoryRateAddUpdateRequest>(() => new SellableInventoryRateAddUpdateRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SellableInventoryRateAddUpdateRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Videa.SharebuilderRateNS.Service.Proto.Types.SharebuilderRateServiceReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SellableInventoryRateAddUpdateRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SellableInventoryRateAddUpdateRequest(SellableInventoryRateAddUpdateRequest other) : this() {
      SellableInventoryRate = other.sellableInventoryRate_ != null ? other.SellableInventoryRate.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SellableInventoryRateAddUpdateRequest Clone() {
      return new SellableInventoryRateAddUpdateRequest(this);
    }

    /// <summary>Field number for the "SellableInventoryRate" field.</summary>
    public const int SellableInventoryRateFieldNumber = 1;
    private global::Videa.SharebuilderRateNS.Service.Proto.Types.SellableInventoryRate sellableInventoryRate_;
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Videa.SharebuilderRateNS.Service.Proto.Types.SellableInventoryRate SellableInventoryRate {
      get { return sellableInventoryRate_; }
      set {
        sellableInventoryRate_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SellableInventoryRateAddUpdateRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SellableInventoryRateAddUpdateRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(SellableInventoryRate, other.SellableInventoryRate)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (sellableInventoryRate_ != null) hash ^= SellableInventoryRate.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (sellableInventoryRate_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(SellableInventoryRate);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (sellableInventoryRate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SellableInventoryRate);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SellableInventoryRateAddUpdateRequest other) {
      if (other == null) {
        return;
      }
      if (other.sellableInventoryRate_ != null) {
        if (sellableInventoryRate_ == null) {
          sellableInventoryRate_ = new global::Videa.SharebuilderRateNS.Service.Proto.Types.SellableInventoryRate();
        }
        SellableInventoryRate.MergeFrom(other.SellableInventoryRate);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (sellableInventoryRate_ == null) {
              sellableInventoryRate_ = new global::Videa.SharebuilderRateNS.Service.Proto.Types.SellableInventoryRate();
            }
            input.ReadMessage(sellableInventoryRate_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SellableInventoryRateAddUpdateResponse : pb::IMessage<SellableInventoryRateAddUpdateResponse> {
    private static readonly pb::MessageParser<SellableInventoryRateAddUpdateResponse> _parser = new pb::MessageParser<SellableInventoryRateAddUpdateResponse>(() => new SellableInventoryRateAddUpdateResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SellableInventoryRateAddUpdateResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Videa.SharebuilderRateNS.Service.Proto.Types.SharebuilderRateServiceReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SellableInventoryRateAddUpdateResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SellableInventoryRateAddUpdateResponse(SellableInventoryRateAddUpdateResponse other) : this() {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SellableInventoryRateAddUpdateResponse Clone() {
      return new SellableInventoryRateAddUpdateResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SellableInventoryRateAddUpdateResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SellableInventoryRateAddUpdateResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SellableInventoryRateAddUpdateResponse other) {
      if (other == null) {
        return;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
        }
      }
    }

  }

  public sealed partial class GetSharebuilderRatesRequest : pb::IMessage<GetSharebuilderRatesRequest> {
    private static readonly pb::MessageParser<GetSharebuilderRatesRequest> _parser = new pb::MessageParser<GetSharebuilderRatesRequest>(() => new GetSharebuilderRatesRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetSharebuilderRatesRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Videa.SharebuilderRateNS.Service.Proto.Types.SharebuilderRateServiceReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetSharebuilderRatesRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetSharebuilderRatesRequest(GetSharebuilderRatesRequest other) : this() {
      sellableInventoryList_ = other.sellableInventoryList_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetSharebuilderRatesRequest Clone() {
      return new GetSharebuilderRatesRequest(this);
    }

    /// <summary>Field number for the "SellableInventoryList" field.</summary>
    public const int SellableInventoryListFieldNumber = 1;
    private string sellableInventoryList_ = "";
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SellableInventoryList {
      get { return sellableInventoryList_; }
      set {
        sellableInventoryList_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetSharebuilderRatesRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetSharebuilderRatesRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SellableInventoryList != other.SellableInventoryList) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SellableInventoryList.Length != 0) hash ^= SellableInventoryList.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SellableInventoryList.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SellableInventoryList);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SellableInventoryList.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SellableInventoryList);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetSharebuilderRatesRequest other) {
      if (other == null) {
        return;
      }
      if (other.SellableInventoryList.Length != 0) {
        SellableInventoryList = other.SellableInventoryList;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            SellableInventoryList = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetSharebuilderRatesResponse : pb::IMessage<GetSharebuilderRatesResponse> {
    private static readonly pb::MessageParser<GetSharebuilderRatesResponse> _parser = new pb::MessageParser<GetSharebuilderRatesResponse>(() => new GetSharebuilderRatesResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetSharebuilderRatesResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Videa.SharebuilderRateNS.Service.Proto.Types.SharebuilderRateServiceReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetSharebuilderRatesResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetSharebuilderRatesResponse(GetSharebuilderRatesResponse other) : this() {
      rate_ = other.rate_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetSharebuilderRatesResponse Clone() {
      return new GetSharebuilderRatesResponse(this);
    }

    /// <summary>Field number for the "Rate" field.</summary>
    public const int RateFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Videa.SharebuilderRateNS.Service.Proto.Types.Rate> _repeated_rate_codec
        = pb::FieldCodec.ForMessage(10, global::Videa.SharebuilderRateNS.Service.Proto.Types.Rate.Parser);
    private readonly pbc::RepeatedField<global::Videa.SharebuilderRateNS.Service.Proto.Types.Rate> rate_ = new pbc::RepeatedField<global::Videa.SharebuilderRateNS.Service.Proto.Types.Rate>();
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Videa.SharebuilderRateNS.Service.Proto.Types.Rate> Rate {
      get { return rate_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetSharebuilderRatesResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetSharebuilderRatesResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!rate_.Equals(other.rate_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= rate_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      rate_.WriteTo(output, _repeated_rate_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += rate_.CalculateSize(_repeated_rate_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetSharebuilderRatesResponse other) {
      if (other == null) {
        return;
      }
      rate_.Add(other.rate_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            rate_.AddEntriesFrom(input, _repeated_rate_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class BulkStoreRequest : pb::IMessage<BulkStoreRequest> {
    private static readonly pb::MessageParser<BulkStoreRequest> _parser = new pb::MessageParser<BulkStoreRequest>(() => new BulkStoreRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BulkStoreRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Videa.SharebuilderRateNS.Service.Proto.Types.SharebuilderRateServiceReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BulkStoreRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BulkStoreRequest(BulkStoreRequest other) : this() {
      rateTier_ = other.rateTier_.Clone();
      ratePeriod_ = other.ratePeriod_.Clone();
      sellableInventoryRate_ = other.sellableInventoryRate_.Clone();
      rate_ = other.rate_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BulkStoreRequest Clone() {
      return new BulkStoreRequest(this);
    }

    /// <summary>Field number for the "RateTier" field.</summary>
    public const int RateTierFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Videa.SharebuilderRateNS.Service.Proto.Types.RateTier> _repeated_rateTier_codec
        = pb::FieldCodec.ForMessage(10, global::Videa.SharebuilderRateNS.Service.Proto.Types.RateTier.Parser);
    private readonly pbc::RepeatedField<global::Videa.SharebuilderRateNS.Service.Proto.Types.RateTier> rateTier_ = new pbc::RepeatedField<global::Videa.SharebuilderRateNS.Service.Proto.Types.RateTier>();
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Videa.SharebuilderRateNS.Service.Proto.Types.RateTier> RateTier {
      get { return rateTier_; }
    }

    /// <summary>Field number for the "RatePeriod" field.</summary>
    public const int RatePeriodFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Videa.SharebuilderRateNS.Service.Proto.Types.RatePeriod> _repeated_ratePeriod_codec
        = pb::FieldCodec.ForMessage(18, global::Videa.SharebuilderRateNS.Service.Proto.Types.RatePeriod.Parser);
    private readonly pbc::RepeatedField<global::Videa.SharebuilderRateNS.Service.Proto.Types.RatePeriod> ratePeriod_ = new pbc::RepeatedField<global::Videa.SharebuilderRateNS.Service.Proto.Types.RatePeriod>();
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Videa.SharebuilderRateNS.Service.Proto.Types.RatePeriod> RatePeriod {
      get { return ratePeriod_; }
    }

    /// <summary>Field number for the "SellableInventoryRate" field.</summary>
    public const int SellableInventoryRateFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Videa.SharebuilderRateNS.Service.Proto.Types.SellableInventoryRate> _repeated_sellableInventoryRate_codec
        = pb::FieldCodec.ForMessage(26, global::Videa.SharebuilderRateNS.Service.Proto.Types.SellableInventoryRate.Parser);
    private readonly pbc::RepeatedField<global::Videa.SharebuilderRateNS.Service.Proto.Types.SellableInventoryRate> sellableInventoryRate_ = new pbc::RepeatedField<global::Videa.SharebuilderRateNS.Service.Proto.Types.SellableInventoryRate>();
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Videa.SharebuilderRateNS.Service.Proto.Types.SellableInventoryRate> SellableInventoryRate {
      get { return sellableInventoryRate_; }
    }

    /// <summary>Field number for the "Rate" field.</summary>
    public const int RateFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Videa.SharebuilderRateNS.Service.Proto.Types.Rate> _repeated_rate_codec
        = pb::FieldCodec.ForMessage(34, global::Videa.SharebuilderRateNS.Service.Proto.Types.Rate.Parser);
    private readonly pbc::RepeatedField<global::Videa.SharebuilderRateNS.Service.Proto.Types.Rate> rate_ = new pbc::RepeatedField<global::Videa.SharebuilderRateNS.Service.Proto.Types.Rate>();
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Videa.SharebuilderRateNS.Service.Proto.Types.Rate> Rate {
      get { return rate_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BulkStoreRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BulkStoreRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!rateTier_.Equals(other.rateTier_)) return false;
      if(!ratePeriod_.Equals(other.ratePeriod_)) return false;
      if(!sellableInventoryRate_.Equals(other.sellableInventoryRate_)) return false;
      if(!rate_.Equals(other.rate_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= rateTier_.GetHashCode();
      hash ^= ratePeriod_.GetHashCode();
      hash ^= sellableInventoryRate_.GetHashCode();
      hash ^= rate_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      rateTier_.WriteTo(output, _repeated_rateTier_codec);
      ratePeriod_.WriteTo(output, _repeated_ratePeriod_codec);
      sellableInventoryRate_.WriteTo(output, _repeated_sellableInventoryRate_codec);
      rate_.WriteTo(output, _repeated_rate_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += rateTier_.CalculateSize(_repeated_rateTier_codec);
      size += ratePeriod_.CalculateSize(_repeated_ratePeriod_codec);
      size += sellableInventoryRate_.CalculateSize(_repeated_sellableInventoryRate_codec);
      size += rate_.CalculateSize(_repeated_rate_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BulkStoreRequest other) {
      if (other == null) {
        return;
      }
      rateTier_.Add(other.rateTier_);
      ratePeriod_.Add(other.ratePeriod_);
      sellableInventoryRate_.Add(other.sellableInventoryRate_);
      rate_.Add(other.rate_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            rateTier_.AddEntriesFrom(input, _repeated_rateTier_codec);
            break;
          }
          case 18: {
            ratePeriod_.AddEntriesFrom(input, _repeated_ratePeriod_codec);
            break;
          }
          case 26: {
            sellableInventoryRate_.AddEntriesFrom(input, _repeated_sellableInventoryRate_codec);
            break;
          }
          case 34: {
            rate_.AddEntriesFrom(input, _repeated_rate_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class BulkStoreResponse : pb::IMessage<BulkStoreResponse> {
    private static readonly pb::MessageParser<BulkStoreResponse> _parser = new pb::MessageParser<BulkStoreResponse>(() => new BulkStoreResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BulkStoreResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Videa.SharebuilderRateNS.Service.Proto.Types.SharebuilderRateServiceReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BulkStoreResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BulkStoreResponse(BulkStoreResponse other) : this() {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BulkStoreResponse Clone() {
      return new BulkStoreResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BulkStoreResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BulkStoreResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BulkStoreResponse other) {
      if (other == null) {
        return;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code

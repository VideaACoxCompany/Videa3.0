// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SellableInventoryMartService.proto
#region Designer generated code

using System;
using System.Threading;
using System.Threading.Tasks;
using grpc = global::Grpc.Core;

namespace Videa.SellableInventoryMartNS.Service.Proto.Types {
  public static partial class SellableInventoryMartService
  {
    static readonly string __ServiceName = "SellableInventoryMartService";

    static readonly grpc::Marshaller<global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellingTitleDeleteRequest> __Marshaller_SellingTitleDeleteRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellingTitleDeleteRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellingTitleDeleteResponse> __Marshaller_SellingTitleDeleteResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellingTitleDeleteResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Videa.SellableInventoryMartNS.Service.Proto.Types.StationDeleteRequest> __Marshaller_StationDeleteRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Videa.SellableInventoryMartNS.Service.Proto.Types.StationDeleteRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Videa.SellableInventoryMartNS.Service.Proto.Types.StationDeleteResponse> __Marshaller_StationDeleteResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Videa.SellableInventoryMartNS.Service.Proto.Types.StationDeleteResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Videa.SellableInventoryMartNS.Service.Proto.Types.StationGroupDeleteRequest> __Marshaller_StationGroupDeleteRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Videa.SellableInventoryMartNS.Service.Proto.Types.StationGroupDeleteRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Videa.SellableInventoryMartNS.Service.Proto.Types.StationGroupDeleteResponse> __Marshaller_StationGroupDeleteResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Videa.SellableInventoryMartNS.Service.Proto.Types.StationGroupDeleteResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Videa.SellableInventoryMartNS.Service.Proto.Types.RateCardDeleteRequest> __Marshaller_RateCardDeleteRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Videa.SellableInventoryMartNS.Service.Proto.Types.RateCardDeleteRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Videa.SellableInventoryMartNS.Service.Proto.Types.RateCardDeleteResponse> __Marshaller_RateCardDeleteResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Videa.SellableInventoryMartNS.Service.Proto.Types.RateCardDeleteResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Videa.SellableInventoryMartNS.Service.Proto.Types.RateCardDaypartDeleteRequest> __Marshaller_RateCardDaypartDeleteRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Videa.SellableInventoryMartNS.Service.Proto.Types.RateCardDaypartDeleteRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Videa.SellableInventoryMartNS.Service.Proto.Types.RateCardDaypartDeleteResponse> __Marshaller_RateCardDaypartDeleteResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Videa.SellableInventoryMartNS.Service.Proto.Types.RateCardDaypartDeleteResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Videa.SellableInventoryMartNS.Service.Proto.Types.RateCardTypeDeleteRequest> __Marshaller_RateCardTypeDeleteRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Videa.SellableInventoryMartNS.Service.Proto.Types.RateCardTypeDeleteRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Videa.SellableInventoryMartNS.Service.Proto.Types.RateCardTypeDeleteResponse> __Marshaller_RateCardTypeDeleteResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Videa.SellableInventoryMartNS.Service.Proto.Types.RateCardTypeDeleteResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellingTitleTimeRangeDeleteRequest> __Marshaller_SellingTitleTimeRangeDeleteRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellingTitleTimeRangeDeleteRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellingTitleTimeRangeDeleteResponse> __Marshaller_SellingTitleTimeRangeDeleteResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellingTitleTimeRangeDeleteResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellingTitleDaysOfWeekDeleteRequest> __Marshaller_SellingTitleDaysOfWeekDeleteRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellingTitleDaysOfWeekDeleteRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellingTitleDaysOfWeekDeleteResponse> __Marshaller_SellingTitleDaysOfWeekDeleteResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellingTitleDaysOfWeekDeleteResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellableInventoryPeriodDeleteRequest> __Marshaller_SellableInventoryPeriodDeleteRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellableInventoryPeriodDeleteRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellableInventoryPeriodDeleteResponse> __Marshaller_SellableInventoryPeriodDeleteResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellableInventoryPeriodDeleteResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellableInventoryDeleteRequest> __Marshaller_SellableInventoryDeleteRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellableInventoryDeleteRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellableInventoryDeleteResponse> __Marshaller_SellableInventoryDeleteResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellableInventoryDeleteResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellingTitleAddUpdateRequest> __Marshaller_SellingTitleAddUpdateRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellingTitleAddUpdateRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellingTitleAddUpdateResponse> __Marshaller_SellingTitleAddUpdateResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellingTitleAddUpdateResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Videa.SellableInventoryMartNS.Service.Proto.Types.StationAddUpdateRequest> __Marshaller_StationAddUpdateRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Videa.SellableInventoryMartNS.Service.Proto.Types.StationAddUpdateRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Videa.SellableInventoryMartNS.Service.Proto.Types.StationAddUpdateResponse> __Marshaller_StationAddUpdateResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Videa.SellableInventoryMartNS.Service.Proto.Types.StationAddUpdateResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Videa.SellableInventoryMartNS.Service.Proto.Types.StationGroupAddUpdateRequest> __Marshaller_StationGroupAddUpdateRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Videa.SellableInventoryMartNS.Service.Proto.Types.StationGroupAddUpdateRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Videa.SellableInventoryMartNS.Service.Proto.Types.StationGroupAddUpdateResponse> __Marshaller_StationGroupAddUpdateResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Videa.SellableInventoryMartNS.Service.Proto.Types.StationGroupAddUpdateResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Videa.SellableInventoryMartNS.Service.Proto.Types.RateCardAddUpdateRequest> __Marshaller_RateCardAddUpdateRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Videa.SellableInventoryMartNS.Service.Proto.Types.RateCardAddUpdateRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Videa.SellableInventoryMartNS.Service.Proto.Types.RateCardAddUpdateResponse> __Marshaller_RateCardAddUpdateResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Videa.SellableInventoryMartNS.Service.Proto.Types.RateCardAddUpdateResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Videa.SellableInventoryMartNS.Service.Proto.Types.RateCardDaypartAddUpdateRequest> __Marshaller_RateCardDaypartAddUpdateRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Videa.SellableInventoryMartNS.Service.Proto.Types.RateCardDaypartAddUpdateRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Videa.SellableInventoryMartNS.Service.Proto.Types.RateCardDaypartAddUpdateResponse> __Marshaller_RateCardDaypartAddUpdateResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Videa.SellableInventoryMartNS.Service.Proto.Types.RateCardDaypartAddUpdateResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Videa.SellableInventoryMartNS.Service.Proto.Types.RateCardTypeAddUpdateRequest> __Marshaller_RateCardTypeAddUpdateRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Videa.SellableInventoryMartNS.Service.Proto.Types.RateCardTypeAddUpdateRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Videa.SellableInventoryMartNS.Service.Proto.Types.RateCardTypeAddUpdateResponse> __Marshaller_RateCardTypeAddUpdateResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Videa.SellableInventoryMartNS.Service.Proto.Types.RateCardTypeAddUpdateResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellingTitleTimeRangeAddUpdateRequest> __Marshaller_SellingTitleTimeRangeAddUpdateRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellingTitleTimeRangeAddUpdateRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellingTitleTimeRangeAddUpdateResponse> __Marshaller_SellingTitleTimeRangeAddUpdateResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellingTitleTimeRangeAddUpdateResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellingTitleDaysOfWeekAddUpdateRequest> __Marshaller_SellingTitleDaysOfWeekAddUpdateRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellingTitleDaysOfWeekAddUpdateRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellingTitleDaysOfWeekAddUpdateResponse> __Marshaller_SellingTitleDaysOfWeekAddUpdateResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellingTitleDaysOfWeekAddUpdateResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellableInventoryPeriodAddUpdateRequest> __Marshaller_SellableInventoryPeriodAddUpdateRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellableInventoryPeriodAddUpdateRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellableInventoryPeriodAddUpdateResponse> __Marshaller_SellableInventoryPeriodAddUpdateResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellableInventoryPeriodAddUpdateResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellableInventoryAddUpdateRequest> __Marshaller_SellableInventoryAddUpdateRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellableInventoryAddUpdateRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellableInventoryAddUpdateResponse> __Marshaller_SellableInventoryAddUpdateResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellableInventoryAddUpdateResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Videa.SellableInventoryMartNS.Service.Proto.Types.GetRateCardsByStationRequest> __Marshaller_GetRateCardsByStationRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Videa.SellableInventoryMartNS.Service.Proto.Types.GetRateCardsByStationRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Videa.SellableInventoryMartNS.Service.Proto.Types.GetRateCardsByStationResponse> __Marshaller_GetRateCardsByStationResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Videa.SellableInventoryMartNS.Service.Proto.Types.GetRateCardsByStationResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Videa.SellableInventoryMartNS.Service.Proto.Types.GetRateCardsByDateRangeRequest> __Marshaller_GetRateCardsByDateRangeRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Videa.SellableInventoryMartNS.Service.Proto.Types.GetRateCardsByDateRangeRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Videa.SellableInventoryMartNS.Service.Proto.Types.GetRateCardsByDateRangeResponse> __Marshaller_GetRateCardsByDateRangeResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Videa.SellableInventoryMartNS.Service.Proto.Types.GetRateCardsByDateRangeResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Videa.SellableInventoryMartNS.Service.Proto.Types.GetConfirmedInventoryRequest> __Marshaller_GetConfirmedInventoryRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Videa.SellableInventoryMartNS.Service.Proto.Types.GetConfirmedInventoryRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Videa.SellableInventoryMartNS.Service.Proto.Types.GetConfirmedInventoryResponse> __Marshaller_GetConfirmedInventoryResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Videa.SellableInventoryMartNS.Service.Proto.Types.GetConfirmedInventoryResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Videa.SellableInventoryMartNS.Service.Proto.Types.BulkStoreRequest> __Marshaller_BulkStoreRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Videa.SellableInventoryMartNS.Service.Proto.Types.BulkStoreRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Videa.SellableInventoryMartNS.Service.Proto.Types.BulkStoreResponse> __Marshaller_BulkStoreResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Videa.SellableInventoryMartNS.Service.Proto.Types.BulkStoreResponse.Parser.ParseFrom);

    static readonly grpc::Method<global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellingTitleDeleteRequest, global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellingTitleDeleteResponse> __Method_SellingTitleDelete = new grpc::Method<global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellingTitleDeleteRequest, global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellingTitleDeleteResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SellingTitleDelete",
        __Marshaller_SellingTitleDeleteRequest,
        __Marshaller_SellingTitleDeleteResponse);

    static readonly grpc::Method<global::Videa.SellableInventoryMartNS.Service.Proto.Types.StationDeleteRequest, global::Videa.SellableInventoryMartNS.Service.Proto.Types.StationDeleteResponse> __Method_StationDelete = new grpc::Method<global::Videa.SellableInventoryMartNS.Service.Proto.Types.StationDeleteRequest, global::Videa.SellableInventoryMartNS.Service.Proto.Types.StationDeleteResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "StationDelete",
        __Marshaller_StationDeleteRequest,
        __Marshaller_StationDeleteResponse);

    static readonly grpc::Method<global::Videa.SellableInventoryMartNS.Service.Proto.Types.StationGroupDeleteRequest, global::Videa.SellableInventoryMartNS.Service.Proto.Types.StationGroupDeleteResponse> __Method_StationGroupDelete = new grpc::Method<global::Videa.SellableInventoryMartNS.Service.Proto.Types.StationGroupDeleteRequest, global::Videa.SellableInventoryMartNS.Service.Proto.Types.StationGroupDeleteResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "StationGroupDelete",
        __Marshaller_StationGroupDeleteRequest,
        __Marshaller_StationGroupDeleteResponse);

    static readonly grpc::Method<global::Videa.SellableInventoryMartNS.Service.Proto.Types.RateCardDeleteRequest, global::Videa.SellableInventoryMartNS.Service.Proto.Types.RateCardDeleteResponse> __Method_RateCardDelete = new grpc::Method<global::Videa.SellableInventoryMartNS.Service.Proto.Types.RateCardDeleteRequest, global::Videa.SellableInventoryMartNS.Service.Proto.Types.RateCardDeleteResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RateCardDelete",
        __Marshaller_RateCardDeleteRequest,
        __Marshaller_RateCardDeleteResponse);

    static readonly grpc::Method<global::Videa.SellableInventoryMartNS.Service.Proto.Types.RateCardDaypartDeleteRequest, global::Videa.SellableInventoryMartNS.Service.Proto.Types.RateCardDaypartDeleteResponse> __Method_RateCardDaypartDelete = new grpc::Method<global::Videa.SellableInventoryMartNS.Service.Proto.Types.RateCardDaypartDeleteRequest, global::Videa.SellableInventoryMartNS.Service.Proto.Types.RateCardDaypartDeleteResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RateCardDaypartDelete",
        __Marshaller_RateCardDaypartDeleteRequest,
        __Marshaller_RateCardDaypartDeleteResponse);

    static readonly grpc::Method<global::Videa.SellableInventoryMartNS.Service.Proto.Types.RateCardTypeDeleteRequest, global::Videa.SellableInventoryMartNS.Service.Proto.Types.RateCardTypeDeleteResponse> __Method_RateCardTypeDelete = new grpc::Method<global::Videa.SellableInventoryMartNS.Service.Proto.Types.RateCardTypeDeleteRequest, global::Videa.SellableInventoryMartNS.Service.Proto.Types.RateCardTypeDeleteResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RateCardTypeDelete",
        __Marshaller_RateCardTypeDeleteRequest,
        __Marshaller_RateCardTypeDeleteResponse);

    static readonly grpc::Method<global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellingTitleTimeRangeDeleteRequest, global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellingTitleTimeRangeDeleteResponse> __Method_SellingTitleTimeRangeDelete = new grpc::Method<global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellingTitleTimeRangeDeleteRequest, global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellingTitleTimeRangeDeleteResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SellingTitleTimeRangeDelete",
        __Marshaller_SellingTitleTimeRangeDeleteRequest,
        __Marshaller_SellingTitleTimeRangeDeleteResponse);

    static readonly grpc::Method<global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellingTitleDaysOfWeekDeleteRequest, global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellingTitleDaysOfWeekDeleteResponse> __Method_SellingTitleDaysOfWeekDelete = new grpc::Method<global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellingTitleDaysOfWeekDeleteRequest, global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellingTitleDaysOfWeekDeleteResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SellingTitleDaysOfWeekDelete",
        __Marshaller_SellingTitleDaysOfWeekDeleteRequest,
        __Marshaller_SellingTitleDaysOfWeekDeleteResponse);

    static readonly grpc::Method<global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellableInventoryPeriodDeleteRequest, global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellableInventoryPeriodDeleteResponse> __Method_SellableInventoryPeriodDelete = new grpc::Method<global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellableInventoryPeriodDeleteRequest, global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellableInventoryPeriodDeleteResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SellableInventoryPeriodDelete",
        __Marshaller_SellableInventoryPeriodDeleteRequest,
        __Marshaller_SellableInventoryPeriodDeleteResponse);

    static readonly grpc::Method<global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellableInventoryDeleteRequest, global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellableInventoryDeleteResponse> __Method_SellableInventoryDelete = new grpc::Method<global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellableInventoryDeleteRequest, global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellableInventoryDeleteResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SellableInventoryDelete",
        __Marshaller_SellableInventoryDeleteRequest,
        __Marshaller_SellableInventoryDeleteResponse);

    static readonly grpc::Method<global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellingTitleAddUpdateRequest, global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellingTitleAddUpdateResponse> __Method_SellingTitleAddUpdate = new grpc::Method<global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellingTitleAddUpdateRequest, global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellingTitleAddUpdateResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SellingTitleAddUpdate",
        __Marshaller_SellingTitleAddUpdateRequest,
        __Marshaller_SellingTitleAddUpdateResponse);

    static readonly grpc::Method<global::Videa.SellableInventoryMartNS.Service.Proto.Types.StationAddUpdateRequest, global::Videa.SellableInventoryMartNS.Service.Proto.Types.StationAddUpdateResponse> __Method_StationAddUpdate = new grpc::Method<global::Videa.SellableInventoryMartNS.Service.Proto.Types.StationAddUpdateRequest, global::Videa.SellableInventoryMartNS.Service.Proto.Types.StationAddUpdateResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "StationAddUpdate",
        __Marshaller_StationAddUpdateRequest,
        __Marshaller_StationAddUpdateResponse);

    static readonly grpc::Method<global::Videa.SellableInventoryMartNS.Service.Proto.Types.StationGroupAddUpdateRequest, global::Videa.SellableInventoryMartNS.Service.Proto.Types.StationGroupAddUpdateResponse> __Method_StationGroupAddUpdate = new grpc::Method<global::Videa.SellableInventoryMartNS.Service.Proto.Types.StationGroupAddUpdateRequest, global::Videa.SellableInventoryMartNS.Service.Proto.Types.StationGroupAddUpdateResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "StationGroupAddUpdate",
        __Marshaller_StationGroupAddUpdateRequest,
        __Marshaller_StationGroupAddUpdateResponse);

    static readonly grpc::Method<global::Videa.SellableInventoryMartNS.Service.Proto.Types.RateCardAddUpdateRequest, global::Videa.SellableInventoryMartNS.Service.Proto.Types.RateCardAddUpdateResponse> __Method_RateCardAddUpdate = new grpc::Method<global::Videa.SellableInventoryMartNS.Service.Proto.Types.RateCardAddUpdateRequest, global::Videa.SellableInventoryMartNS.Service.Proto.Types.RateCardAddUpdateResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RateCardAddUpdate",
        __Marshaller_RateCardAddUpdateRequest,
        __Marshaller_RateCardAddUpdateResponse);

    static readonly grpc::Method<global::Videa.SellableInventoryMartNS.Service.Proto.Types.RateCardDaypartAddUpdateRequest, global::Videa.SellableInventoryMartNS.Service.Proto.Types.RateCardDaypartAddUpdateResponse> __Method_RateCardDaypartAddUpdate = new grpc::Method<global::Videa.SellableInventoryMartNS.Service.Proto.Types.RateCardDaypartAddUpdateRequest, global::Videa.SellableInventoryMartNS.Service.Proto.Types.RateCardDaypartAddUpdateResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RateCardDaypartAddUpdate",
        __Marshaller_RateCardDaypartAddUpdateRequest,
        __Marshaller_RateCardDaypartAddUpdateResponse);

    static readonly grpc::Method<global::Videa.SellableInventoryMartNS.Service.Proto.Types.RateCardTypeAddUpdateRequest, global::Videa.SellableInventoryMartNS.Service.Proto.Types.RateCardTypeAddUpdateResponse> __Method_RateCardTypeAddUpdate = new grpc::Method<global::Videa.SellableInventoryMartNS.Service.Proto.Types.RateCardTypeAddUpdateRequest, global::Videa.SellableInventoryMartNS.Service.Proto.Types.RateCardTypeAddUpdateResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RateCardTypeAddUpdate",
        __Marshaller_RateCardTypeAddUpdateRequest,
        __Marshaller_RateCardTypeAddUpdateResponse);

    static readonly grpc::Method<global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellingTitleTimeRangeAddUpdateRequest, global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellingTitleTimeRangeAddUpdateResponse> __Method_SellingTitleTimeRangeAddUpdate = new grpc::Method<global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellingTitleTimeRangeAddUpdateRequest, global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellingTitleTimeRangeAddUpdateResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SellingTitleTimeRangeAddUpdate",
        __Marshaller_SellingTitleTimeRangeAddUpdateRequest,
        __Marshaller_SellingTitleTimeRangeAddUpdateResponse);

    static readonly grpc::Method<global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellingTitleDaysOfWeekAddUpdateRequest, global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellingTitleDaysOfWeekAddUpdateResponse> __Method_SellingTitleDaysOfWeekAddUpdate = new grpc::Method<global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellingTitleDaysOfWeekAddUpdateRequest, global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellingTitleDaysOfWeekAddUpdateResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SellingTitleDaysOfWeekAddUpdate",
        __Marshaller_SellingTitleDaysOfWeekAddUpdateRequest,
        __Marshaller_SellingTitleDaysOfWeekAddUpdateResponse);

    static readonly grpc::Method<global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellableInventoryPeriodAddUpdateRequest, global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellableInventoryPeriodAddUpdateResponse> __Method_SellableInventoryPeriodAddUpdate = new grpc::Method<global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellableInventoryPeriodAddUpdateRequest, global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellableInventoryPeriodAddUpdateResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SellableInventoryPeriodAddUpdate",
        __Marshaller_SellableInventoryPeriodAddUpdateRequest,
        __Marshaller_SellableInventoryPeriodAddUpdateResponse);

    static readonly grpc::Method<global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellableInventoryAddUpdateRequest, global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellableInventoryAddUpdateResponse> __Method_SellableInventoryAddUpdate = new grpc::Method<global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellableInventoryAddUpdateRequest, global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellableInventoryAddUpdateResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SellableInventoryAddUpdate",
        __Marshaller_SellableInventoryAddUpdateRequest,
        __Marshaller_SellableInventoryAddUpdateResponse);

    static readonly grpc::Method<global::Videa.SellableInventoryMartNS.Service.Proto.Types.GetRateCardsByStationRequest, global::Videa.SellableInventoryMartNS.Service.Proto.Types.GetRateCardsByStationResponse> __Method_GetRateCardsByStation = new grpc::Method<global::Videa.SellableInventoryMartNS.Service.Proto.Types.GetRateCardsByStationRequest, global::Videa.SellableInventoryMartNS.Service.Proto.Types.GetRateCardsByStationResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetRateCardsByStation",
        __Marshaller_GetRateCardsByStationRequest,
        __Marshaller_GetRateCardsByStationResponse);

    static readonly grpc::Method<global::Videa.SellableInventoryMartNS.Service.Proto.Types.GetRateCardsByDateRangeRequest, global::Videa.SellableInventoryMartNS.Service.Proto.Types.GetRateCardsByDateRangeResponse> __Method_GetRateCardsByDateRange = new grpc::Method<global::Videa.SellableInventoryMartNS.Service.Proto.Types.GetRateCardsByDateRangeRequest, global::Videa.SellableInventoryMartNS.Service.Proto.Types.GetRateCardsByDateRangeResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetRateCardsByDateRange",
        __Marshaller_GetRateCardsByDateRangeRequest,
        __Marshaller_GetRateCardsByDateRangeResponse);

    static readonly grpc::Method<global::Videa.SellableInventoryMartNS.Service.Proto.Types.GetConfirmedInventoryRequest, global::Videa.SellableInventoryMartNS.Service.Proto.Types.GetConfirmedInventoryResponse> __Method_GetConfirmedInventory = new grpc::Method<global::Videa.SellableInventoryMartNS.Service.Proto.Types.GetConfirmedInventoryRequest, global::Videa.SellableInventoryMartNS.Service.Proto.Types.GetConfirmedInventoryResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetConfirmedInventory",
        __Marshaller_GetConfirmedInventoryRequest,
        __Marshaller_GetConfirmedInventoryResponse);

    static readonly grpc::Method<global::Videa.SellableInventoryMartNS.Service.Proto.Types.BulkStoreRequest, global::Videa.SellableInventoryMartNS.Service.Proto.Types.BulkStoreResponse> __Method_BulkStore = new grpc::Method<global::Videa.SellableInventoryMartNS.Service.Proto.Types.BulkStoreRequest, global::Videa.SellableInventoryMartNS.Service.Proto.Types.BulkStoreResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "BulkStore",
        __Marshaller_BulkStoreRequest,
        __Marshaller_BulkStoreResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellableInventoryMartServiceReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of SellableInventoryMartService</summary>
    public abstract partial class SellableInventoryMartServiceBase
    {
      public virtual global::System.Threading.Tasks.Task<global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellingTitleDeleteResponse> SellingTitleDelete(global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellingTitleDeleteRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Videa.SellableInventoryMartNS.Service.Proto.Types.StationDeleteResponse> StationDelete(global::Videa.SellableInventoryMartNS.Service.Proto.Types.StationDeleteRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Videa.SellableInventoryMartNS.Service.Proto.Types.StationGroupDeleteResponse> StationGroupDelete(global::Videa.SellableInventoryMartNS.Service.Proto.Types.StationGroupDeleteRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Videa.SellableInventoryMartNS.Service.Proto.Types.RateCardDeleteResponse> RateCardDelete(global::Videa.SellableInventoryMartNS.Service.Proto.Types.RateCardDeleteRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Videa.SellableInventoryMartNS.Service.Proto.Types.RateCardDaypartDeleteResponse> RateCardDaypartDelete(global::Videa.SellableInventoryMartNS.Service.Proto.Types.RateCardDaypartDeleteRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Videa.SellableInventoryMartNS.Service.Proto.Types.RateCardTypeDeleteResponse> RateCardTypeDelete(global::Videa.SellableInventoryMartNS.Service.Proto.Types.RateCardTypeDeleteRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellingTitleTimeRangeDeleteResponse> SellingTitleTimeRangeDelete(global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellingTitleTimeRangeDeleteRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellingTitleDaysOfWeekDeleteResponse> SellingTitleDaysOfWeekDelete(global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellingTitleDaysOfWeekDeleteRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellableInventoryPeriodDeleteResponse> SellableInventoryPeriodDelete(global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellableInventoryPeriodDeleteRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellableInventoryDeleteResponse> SellableInventoryDelete(global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellableInventoryDeleteRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellingTitleAddUpdateResponse> SellingTitleAddUpdate(global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellingTitleAddUpdateRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Videa.SellableInventoryMartNS.Service.Proto.Types.StationAddUpdateResponse> StationAddUpdate(global::Videa.SellableInventoryMartNS.Service.Proto.Types.StationAddUpdateRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Videa.SellableInventoryMartNS.Service.Proto.Types.StationGroupAddUpdateResponse> StationGroupAddUpdate(global::Videa.SellableInventoryMartNS.Service.Proto.Types.StationGroupAddUpdateRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Videa.SellableInventoryMartNS.Service.Proto.Types.RateCardAddUpdateResponse> RateCardAddUpdate(global::Videa.SellableInventoryMartNS.Service.Proto.Types.RateCardAddUpdateRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Videa.SellableInventoryMartNS.Service.Proto.Types.RateCardDaypartAddUpdateResponse> RateCardDaypartAddUpdate(global::Videa.SellableInventoryMartNS.Service.Proto.Types.RateCardDaypartAddUpdateRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Videa.SellableInventoryMartNS.Service.Proto.Types.RateCardTypeAddUpdateResponse> RateCardTypeAddUpdate(global::Videa.SellableInventoryMartNS.Service.Proto.Types.RateCardTypeAddUpdateRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellingTitleTimeRangeAddUpdateResponse> SellingTitleTimeRangeAddUpdate(global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellingTitleTimeRangeAddUpdateRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellingTitleDaysOfWeekAddUpdateResponse> SellingTitleDaysOfWeekAddUpdate(global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellingTitleDaysOfWeekAddUpdateRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellableInventoryPeriodAddUpdateResponse> SellableInventoryPeriodAddUpdate(global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellableInventoryPeriodAddUpdateRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellableInventoryAddUpdateResponse> SellableInventoryAddUpdate(global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellableInventoryAddUpdateRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Videa.SellableInventoryMartNS.Service.Proto.Types.GetRateCardsByStationResponse> GetRateCardsByStation(global::Videa.SellableInventoryMartNS.Service.Proto.Types.GetRateCardsByStationRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Videa.SellableInventoryMartNS.Service.Proto.Types.GetRateCardsByDateRangeResponse> GetRateCardsByDateRange(global::Videa.SellableInventoryMartNS.Service.Proto.Types.GetRateCardsByDateRangeRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Videa.SellableInventoryMartNS.Service.Proto.Types.GetConfirmedInventoryResponse> GetConfirmedInventory(global::Videa.SellableInventoryMartNS.Service.Proto.Types.GetConfirmedInventoryRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Videa.SellableInventoryMartNS.Service.Proto.Types.BulkStoreResponse> BulkStore(global::Videa.SellableInventoryMartNS.Service.Proto.Types.BulkStoreRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for SellableInventoryMartService</summary>
    public partial class SellableInventoryMartServiceClient : grpc::ClientBase<SellableInventoryMartServiceClient>
    {
      /// <summary>Creates a new client for SellableInventoryMartService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public SellableInventoryMartServiceClient(grpc::Channel channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for SellableInventoryMartService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public SellableInventoryMartServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected SellableInventoryMartServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected SellableInventoryMartServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellingTitleDeleteResponse SellingTitleDelete(global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellingTitleDeleteRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return SellingTitleDelete(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellingTitleDeleteResponse SellingTitleDelete(global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellingTitleDeleteRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SellingTitleDelete, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellingTitleDeleteResponse> SellingTitleDeleteAsync(global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellingTitleDeleteRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return SellingTitleDeleteAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellingTitleDeleteResponse> SellingTitleDeleteAsync(global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellingTitleDeleteRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SellingTitleDelete, null, options, request);
      }
      public virtual global::Videa.SellableInventoryMartNS.Service.Proto.Types.StationDeleteResponse StationDelete(global::Videa.SellableInventoryMartNS.Service.Proto.Types.StationDeleteRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return StationDelete(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Videa.SellableInventoryMartNS.Service.Proto.Types.StationDeleteResponse StationDelete(global::Videa.SellableInventoryMartNS.Service.Proto.Types.StationDeleteRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_StationDelete, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Videa.SellableInventoryMartNS.Service.Proto.Types.StationDeleteResponse> StationDeleteAsync(global::Videa.SellableInventoryMartNS.Service.Proto.Types.StationDeleteRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return StationDeleteAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Videa.SellableInventoryMartNS.Service.Proto.Types.StationDeleteResponse> StationDeleteAsync(global::Videa.SellableInventoryMartNS.Service.Proto.Types.StationDeleteRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_StationDelete, null, options, request);
      }
      public virtual global::Videa.SellableInventoryMartNS.Service.Proto.Types.StationGroupDeleteResponse StationGroupDelete(global::Videa.SellableInventoryMartNS.Service.Proto.Types.StationGroupDeleteRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return StationGroupDelete(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Videa.SellableInventoryMartNS.Service.Proto.Types.StationGroupDeleteResponse StationGroupDelete(global::Videa.SellableInventoryMartNS.Service.Proto.Types.StationGroupDeleteRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_StationGroupDelete, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Videa.SellableInventoryMartNS.Service.Proto.Types.StationGroupDeleteResponse> StationGroupDeleteAsync(global::Videa.SellableInventoryMartNS.Service.Proto.Types.StationGroupDeleteRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return StationGroupDeleteAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Videa.SellableInventoryMartNS.Service.Proto.Types.StationGroupDeleteResponse> StationGroupDeleteAsync(global::Videa.SellableInventoryMartNS.Service.Proto.Types.StationGroupDeleteRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_StationGroupDelete, null, options, request);
      }
      public virtual global::Videa.SellableInventoryMartNS.Service.Proto.Types.RateCardDeleteResponse RateCardDelete(global::Videa.SellableInventoryMartNS.Service.Proto.Types.RateCardDeleteRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return RateCardDelete(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Videa.SellableInventoryMartNS.Service.Proto.Types.RateCardDeleteResponse RateCardDelete(global::Videa.SellableInventoryMartNS.Service.Proto.Types.RateCardDeleteRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RateCardDelete, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Videa.SellableInventoryMartNS.Service.Proto.Types.RateCardDeleteResponse> RateCardDeleteAsync(global::Videa.SellableInventoryMartNS.Service.Proto.Types.RateCardDeleteRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return RateCardDeleteAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Videa.SellableInventoryMartNS.Service.Proto.Types.RateCardDeleteResponse> RateCardDeleteAsync(global::Videa.SellableInventoryMartNS.Service.Proto.Types.RateCardDeleteRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RateCardDelete, null, options, request);
      }
      public virtual global::Videa.SellableInventoryMartNS.Service.Proto.Types.RateCardDaypartDeleteResponse RateCardDaypartDelete(global::Videa.SellableInventoryMartNS.Service.Proto.Types.RateCardDaypartDeleteRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return RateCardDaypartDelete(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Videa.SellableInventoryMartNS.Service.Proto.Types.RateCardDaypartDeleteResponse RateCardDaypartDelete(global::Videa.SellableInventoryMartNS.Service.Proto.Types.RateCardDaypartDeleteRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RateCardDaypartDelete, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Videa.SellableInventoryMartNS.Service.Proto.Types.RateCardDaypartDeleteResponse> RateCardDaypartDeleteAsync(global::Videa.SellableInventoryMartNS.Service.Proto.Types.RateCardDaypartDeleteRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return RateCardDaypartDeleteAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Videa.SellableInventoryMartNS.Service.Proto.Types.RateCardDaypartDeleteResponse> RateCardDaypartDeleteAsync(global::Videa.SellableInventoryMartNS.Service.Proto.Types.RateCardDaypartDeleteRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RateCardDaypartDelete, null, options, request);
      }
      public virtual global::Videa.SellableInventoryMartNS.Service.Proto.Types.RateCardTypeDeleteResponse RateCardTypeDelete(global::Videa.SellableInventoryMartNS.Service.Proto.Types.RateCardTypeDeleteRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return RateCardTypeDelete(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Videa.SellableInventoryMartNS.Service.Proto.Types.RateCardTypeDeleteResponse RateCardTypeDelete(global::Videa.SellableInventoryMartNS.Service.Proto.Types.RateCardTypeDeleteRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RateCardTypeDelete, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Videa.SellableInventoryMartNS.Service.Proto.Types.RateCardTypeDeleteResponse> RateCardTypeDeleteAsync(global::Videa.SellableInventoryMartNS.Service.Proto.Types.RateCardTypeDeleteRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return RateCardTypeDeleteAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Videa.SellableInventoryMartNS.Service.Proto.Types.RateCardTypeDeleteResponse> RateCardTypeDeleteAsync(global::Videa.SellableInventoryMartNS.Service.Proto.Types.RateCardTypeDeleteRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RateCardTypeDelete, null, options, request);
      }
      public virtual global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellingTitleTimeRangeDeleteResponse SellingTitleTimeRangeDelete(global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellingTitleTimeRangeDeleteRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return SellingTitleTimeRangeDelete(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellingTitleTimeRangeDeleteResponse SellingTitleTimeRangeDelete(global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellingTitleTimeRangeDeleteRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SellingTitleTimeRangeDelete, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellingTitleTimeRangeDeleteResponse> SellingTitleTimeRangeDeleteAsync(global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellingTitleTimeRangeDeleteRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return SellingTitleTimeRangeDeleteAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellingTitleTimeRangeDeleteResponse> SellingTitleTimeRangeDeleteAsync(global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellingTitleTimeRangeDeleteRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SellingTitleTimeRangeDelete, null, options, request);
      }
      public virtual global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellingTitleDaysOfWeekDeleteResponse SellingTitleDaysOfWeekDelete(global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellingTitleDaysOfWeekDeleteRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return SellingTitleDaysOfWeekDelete(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellingTitleDaysOfWeekDeleteResponse SellingTitleDaysOfWeekDelete(global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellingTitleDaysOfWeekDeleteRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SellingTitleDaysOfWeekDelete, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellingTitleDaysOfWeekDeleteResponse> SellingTitleDaysOfWeekDeleteAsync(global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellingTitleDaysOfWeekDeleteRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return SellingTitleDaysOfWeekDeleteAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellingTitleDaysOfWeekDeleteResponse> SellingTitleDaysOfWeekDeleteAsync(global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellingTitleDaysOfWeekDeleteRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SellingTitleDaysOfWeekDelete, null, options, request);
      }
      public virtual global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellableInventoryPeriodDeleteResponse SellableInventoryPeriodDelete(global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellableInventoryPeriodDeleteRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return SellableInventoryPeriodDelete(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellableInventoryPeriodDeleteResponse SellableInventoryPeriodDelete(global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellableInventoryPeriodDeleteRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SellableInventoryPeriodDelete, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellableInventoryPeriodDeleteResponse> SellableInventoryPeriodDeleteAsync(global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellableInventoryPeriodDeleteRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return SellableInventoryPeriodDeleteAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellableInventoryPeriodDeleteResponse> SellableInventoryPeriodDeleteAsync(global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellableInventoryPeriodDeleteRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SellableInventoryPeriodDelete, null, options, request);
      }
      public virtual global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellableInventoryDeleteResponse SellableInventoryDelete(global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellableInventoryDeleteRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return SellableInventoryDelete(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellableInventoryDeleteResponse SellableInventoryDelete(global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellableInventoryDeleteRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SellableInventoryDelete, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellableInventoryDeleteResponse> SellableInventoryDeleteAsync(global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellableInventoryDeleteRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return SellableInventoryDeleteAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellableInventoryDeleteResponse> SellableInventoryDeleteAsync(global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellableInventoryDeleteRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SellableInventoryDelete, null, options, request);
      }
      public virtual global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellingTitleAddUpdateResponse SellingTitleAddUpdate(global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellingTitleAddUpdateRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return SellingTitleAddUpdate(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellingTitleAddUpdateResponse SellingTitleAddUpdate(global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellingTitleAddUpdateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SellingTitleAddUpdate, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellingTitleAddUpdateResponse> SellingTitleAddUpdateAsync(global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellingTitleAddUpdateRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return SellingTitleAddUpdateAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellingTitleAddUpdateResponse> SellingTitleAddUpdateAsync(global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellingTitleAddUpdateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SellingTitleAddUpdate, null, options, request);
      }
      public virtual global::Videa.SellableInventoryMartNS.Service.Proto.Types.StationAddUpdateResponse StationAddUpdate(global::Videa.SellableInventoryMartNS.Service.Proto.Types.StationAddUpdateRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return StationAddUpdate(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Videa.SellableInventoryMartNS.Service.Proto.Types.StationAddUpdateResponse StationAddUpdate(global::Videa.SellableInventoryMartNS.Service.Proto.Types.StationAddUpdateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_StationAddUpdate, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Videa.SellableInventoryMartNS.Service.Proto.Types.StationAddUpdateResponse> StationAddUpdateAsync(global::Videa.SellableInventoryMartNS.Service.Proto.Types.StationAddUpdateRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return StationAddUpdateAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Videa.SellableInventoryMartNS.Service.Proto.Types.StationAddUpdateResponse> StationAddUpdateAsync(global::Videa.SellableInventoryMartNS.Service.Proto.Types.StationAddUpdateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_StationAddUpdate, null, options, request);
      }
      public virtual global::Videa.SellableInventoryMartNS.Service.Proto.Types.StationGroupAddUpdateResponse StationGroupAddUpdate(global::Videa.SellableInventoryMartNS.Service.Proto.Types.StationGroupAddUpdateRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return StationGroupAddUpdate(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Videa.SellableInventoryMartNS.Service.Proto.Types.StationGroupAddUpdateResponse StationGroupAddUpdate(global::Videa.SellableInventoryMartNS.Service.Proto.Types.StationGroupAddUpdateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_StationGroupAddUpdate, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Videa.SellableInventoryMartNS.Service.Proto.Types.StationGroupAddUpdateResponse> StationGroupAddUpdateAsync(global::Videa.SellableInventoryMartNS.Service.Proto.Types.StationGroupAddUpdateRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return StationGroupAddUpdateAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Videa.SellableInventoryMartNS.Service.Proto.Types.StationGroupAddUpdateResponse> StationGroupAddUpdateAsync(global::Videa.SellableInventoryMartNS.Service.Proto.Types.StationGroupAddUpdateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_StationGroupAddUpdate, null, options, request);
      }
      public virtual global::Videa.SellableInventoryMartNS.Service.Proto.Types.RateCardAddUpdateResponse RateCardAddUpdate(global::Videa.SellableInventoryMartNS.Service.Proto.Types.RateCardAddUpdateRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return RateCardAddUpdate(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Videa.SellableInventoryMartNS.Service.Proto.Types.RateCardAddUpdateResponse RateCardAddUpdate(global::Videa.SellableInventoryMartNS.Service.Proto.Types.RateCardAddUpdateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RateCardAddUpdate, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Videa.SellableInventoryMartNS.Service.Proto.Types.RateCardAddUpdateResponse> RateCardAddUpdateAsync(global::Videa.SellableInventoryMartNS.Service.Proto.Types.RateCardAddUpdateRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return RateCardAddUpdateAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Videa.SellableInventoryMartNS.Service.Proto.Types.RateCardAddUpdateResponse> RateCardAddUpdateAsync(global::Videa.SellableInventoryMartNS.Service.Proto.Types.RateCardAddUpdateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RateCardAddUpdate, null, options, request);
      }
      public virtual global::Videa.SellableInventoryMartNS.Service.Proto.Types.RateCardDaypartAddUpdateResponse RateCardDaypartAddUpdate(global::Videa.SellableInventoryMartNS.Service.Proto.Types.RateCardDaypartAddUpdateRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return RateCardDaypartAddUpdate(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Videa.SellableInventoryMartNS.Service.Proto.Types.RateCardDaypartAddUpdateResponse RateCardDaypartAddUpdate(global::Videa.SellableInventoryMartNS.Service.Proto.Types.RateCardDaypartAddUpdateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RateCardDaypartAddUpdate, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Videa.SellableInventoryMartNS.Service.Proto.Types.RateCardDaypartAddUpdateResponse> RateCardDaypartAddUpdateAsync(global::Videa.SellableInventoryMartNS.Service.Proto.Types.RateCardDaypartAddUpdateRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return RateCardDaypartAddUpdateAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Videa.SellableInventoryMartNS.Service.Proto.Types.RateCardDaypartAddUpdateResponse> RateCardDaypartAddUpdateAsync(global::Videa.SellableInventoryMartNS.Service.Proto.Types.RateCardDaypartAddUpdateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RateCardDaypartAddUpdate, null, options, request);
      }
      public virtual global::Videa.SellableInventoryMartNS.Service.Proto.Types.RateCardTypeAddUpdateResponse RateCardTypeAddUpdate(global::Videa.SellableInventoryMartNS.Service.Proto.Types.RateCardTypeAddUpdateRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return RateCardTypeAddUpdate(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Videa.SellableInventoryMartNS.Service.Proto.Types.RateCardTypeAddUpdateResponse RateCardTypeAddUpdate(global::Videa.SellableInventoryMartNS.Service.Proto.Types.RateCardTypeAddUpdateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RateCardTypeAddUpdate, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Videa.SellableInventoryMartNS.Service.Proto.Types.RateCardTypeAddUpdateResponse> RateCardTypeAddUpdateAsync(global::Videa.SellableInventoryMartNS.Service.Proto.Types.RateCardTypeAddUpdateRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return RateCardTypeAddUpdateAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Videa.SellableInventoryMartNS.Service.Proto.Types.RateCardTypeAddUpdateResponse> RateCardTypeAddUpdateAsync(global::Videa.SellableInventoryMartNS.Service.Proto.Types.RateCardTypeAddUpdateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RateCardTypeAddUpdate, null, options, request);
      }
      public virtual global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellingTitleTimeRangeAddUpdateResponse SellingTitleTimeRangeAddUpdate(global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellingTitleTimeRangeAddUpdateRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return SellingTitleTimeRangeAddUpdate(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellingTitleTimeRangeAddUpdateResponse SellingTitleTimeRangeAddUpdate(global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellingTitleTimeRangeAddUpdateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SellingTitleTimeRangeAddUpdate, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellingTitleTimeRangeAddUpdateResponse> SellingTitleTimeRangeAddUpdateAsync(global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellingTitleTimeRangeAddUpdateRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return SellingTitleTimeRangeAddUpdateAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellingTitleTimeRangeAddUpdateResponse> SellingTitleTimeRangeAddUpdateAsync(global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellingTitleTimeRangeAddUpdateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SellingTitleTimeRangeAddUpdate, null, options, request);
      }
      public virtual global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellingTitleDaysOfWeekAddUpdateResponse SellingTitleDaysOfWeekAddUpdate(global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellingTitleDaysOfWeekAddUpdateRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return SellingTitleDaysOfWeekAddUpdate(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellingTitleDaysOfWeekAddUpdateResponse SellingTitleDaysOfWeekAddUpdate(global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellingTitleDaysOfWeekAddUpdateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SellingTitleDaysOfWeekAddUpdate, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellingTitleDaysOfWeekAddUpdateResponse> SellingTitleDaysOfWeekAddUpdateAsync(global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellingTitleDaysOfWeekAddUpdateRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return SellingTitleDaysOfWeekAddUpdateAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellingTitleDaysOfWeekAddUpdateResponse> SellingTitleDaysOfWeekAddUpdateAsync(global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellingTitleDaysOfWeekAddUpdateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SellingTitleDaysOfWeekAddUpdate, null, options, request);
      }
      public virtual global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellableInventoryPeriodAddUpdateResponse SellableInventoryPeriodAddUpdate(global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellableInventoryPeriodAddUpdateRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return SellableInventoryPeriodAddUpdate(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellableInventoryPeriodAddUpdateResponse SellableInventoryPeriodAddUpdate(global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellableInventoryPeriodAddUpdateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SellableInventoryPeriodAddUpdate, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellableInventoryPeriodAddUpdateResponse> SellableInventoryPeriodAddUpdateAsync(global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellableInventoryPeriodAddUpdateRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return SellableInventoryPeriodAddUpdateAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellableInventoryPeriodAddUpdateResponse> SellableInventoryPeriodAddUpdateAsync(global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellableInventoryPeriodAddUpdateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SellableInventoryPeriodAddUpdate, null, options, request);
      }
      public virtual global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellableInventoryAddUpdateResponse SellableInventoryAddUpdate(global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellableInventoryAddUpdateRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return SellableInventoryAddUpdate(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellableInventoryAddUpdateResponse SellableInventoryAddUpdate(global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellableInventoryAddUpdateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SellableInventoryAddUpdate, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellableInventoryAddUpdateResponse> SellableInventoryAddUpdateAsync(global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellableInventoryAddUpdateRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return SellableInventoryAddUpdateAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellableInventoryAddUpdateResponse> SellableInventoryAddUpdateAsync(global::Videa.SellableInventoryMartNS.Service.Proto.Types.SellableInventoryAddUpdateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SellableInventoryAddUpdate, null, options, request);
      }
      public virtual global::Videa.SellableInventoryMartNS.Service.Proto.Types.GetRateCardsByStationResponse GetRateCardsByStation(global::Videa.SellableInventoryMartNS.Service.Proto.Types.GetRateCardsByStationRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetRateCardsByStation(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Videa.SellableInventoryMartNS.Service.Proto.Types.GetRateCardsByStationResponse GetRateCardsByStation(global::Videa.SellableInventoryMartNS.Service.Proto.Types.GetRateCardsByStationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetRateCardsByStation, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Videa.SellableInventoryMartNS.Service.Proto.Types.GetRateCardsByStationResponse> GetRateCardsByStationAsync(global::Videa.SellableInventoryMartNS.Service.Proto.Types.GetRateCardsByStationRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetRateCardsByStationAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Videa.SellableInventoryMartNS.Service.Proto.Types.GetRateCardsByStationResponse> GetRateCardsByStationAsync(global::Videa.SellableInventoryMartNS.Service.Proto.Types.GetRateCardsByStationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetRateCardsByStation, null, options, request);
      }
      public virtual global::Videa.SellableInventoryMartNS.Service.Proto.Types.GetRateCardsByDateRangeResponse GetRateCardsByDateRange(global::Videa.SellableInventoryMartNS.Service.Proto.Types.GetRateCardsByDateRangeRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetRateCardsByDateRange(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Videa.SellableInventoryMartNS.Service.Proto.Types.GetRateCardsByDateRangeResponse GetRateCardsByDateRange(global::Videa.SellableInventoryMartNS.Service.Proto.Types.GetRateCardsByDateRangeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetRateCardsByDateRange, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Videa.SellableInventoryMartNS.Service.Proto.Types.GetRateCardsByDateRangeResponse> GetRateCardsByDateRangeAsync(global::Videa.SellableInventoryMartNS.Service.Proto.Types.GetRateCardsByDateRangeRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetRateCardsByDateRangeAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Videa.SellableInventoryMartNS.Service.Proto.Types.GetRateCardsByDateRangeResponse> GetRateCardsByDateRangeAsync(global::Videa.SellableInventoryMartNS.Service.Proto.Types.GetRateCardsByDateRangeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetRateCardsByDateRange, null, options, request);
      }
      public virtual global::Videa.SellableInventoryMartNS.Service.Proto.Types.GetConfirmedInventoryResponse GetConfirmedInventory(global::Videa.SellableInventoryMartNS.Service.Proto.Types.GetConfirmedInventoryRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetConfirmedInventory(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Videa.SellableInventoryMartNS.Service.Proto.Types.GetConfirmedInventoryResponse GetConfirmedInventory(global::Videa.SellableInventoryMartNS.Service.Proto.Types.GetConfirmedInventoryRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetConfirmedInventory, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Videa.SellableInventoryMartNS.Service.Proto.Types.GetConfirmedInventoryResponse> GetConfirmedInventoryAsync(global::Videa.SellableInventoryMartNS.Service.Proto.Types.GetConfirmedInventoryRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetConfirmedInventoryAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Videa.SellableInventoryMartNS.Service.Proto.Types.GetConfirmedInventoryResponse> GetConfirmedInventoryAsync(global::Videa.SellableInventoryMartNS.Service.Proto.Types.GetConfirmedInventoryRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetConfirmedInventory, null, options, request);
      }
      public virtual global::Videa.SellableInventoryMartNS.Service.Proto.Types.BulkStoreResponse BulkStore(global::Videa.SellableInventoryMartNS.Service.Proto.Types.BulkStoreRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return BulkStore(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Videa.SellableInventoryMartNS.Service.Proto.Types.BulkStoreResponse BulkStore(global::Videa.SellableInventoryMartNS.Service.Proto.Types.BulkStoreRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_BulkStore, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Videa.SellableInventoryMartNS.Service.Proto.Types.BulkStoreResponse> BulkStoreAsync(global::Videa.SellableInventoryMartNS.Service.Proto.Types.BulkStoreRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return BulkStoreAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Videa.SellableInventoryMartNS.Service.Proto.Types.BulkStoreResponse> BulkStoreAsync(global::Videa.SellableInventoryMartNS.Service.Proto.Types.BulkStoreRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_BulkStore, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override SellableInventoryMartServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new SellableInventoryMartServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(SellableInventoryMartServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_SellingTitleDelete, serviceImpl.SellingTitleDelete)
          .AddMethod(__Method_StationDelete, serviceImpl.StationDelete)
          .AddMethod(__Method_StationGroupDelete, serviceImpl.StationGroupDelete)
          .AddMethod(__Method_RateCardDelete, serviceImpl.RateCardDelete)
          .AddMethod(__Method_RateCardDaypartDelete, serviceImpl.RateCardDaypartDelete)
          .AddMethod(__Method_RateCardTypeDelete, serviceImpl.RateCardTypeDelete)
          .AddMethod(__Method_SellingTitleTimeRangeDelete, serviceImpl.SellingTitleTimeRangeDelete)
          .AddMethod(__Method_SellingTitleDaysOfWeekDelete, serviceImpl.SellingTitleDaysOfWeekDelete)
          .AddMethod(__Method_SellableInventoryPeriodDelete, serviceImpl.SellableInventoryPeriodDelete)
          .AddMethod(__Method_SellableInventoryDelete, serviceImpl.SellableInventoryDelete)
          .AddMethod(__Method_SellingTitleAddUpdate, serviceImpl.SellingTitleAddUpdate)
          .AddMethod(__Method_StationAddUpdate, serviceImpl.StationAddUpdate)
          .AddMethod(__Method_StationGroupAddUpdate, serviceImpl.StationGroupAddUpdate)
          .AddMethod(__Method_RateCardAddUpdate, serviceImpl.RateCardAddUpdate)
          .AddMethod(__Method_RateCardDaypartAddUpdate, serviceImpl.RateCardDaypartAddUpdate)
          .AddMethod(__Method_RateCardTypeAddUpdate, serviceImpl.RateCardTypeAddUpdate)
          .AddMethod(__Method_SellingTitleTimeRangeAddUpdate, serviceImpl.SellingTitleTimeRangeAddUpdate)
          .AddMethod(__Method_SellingTitleDaysOfWeekAddUpdate, serviceImpl.SellingTitleDaysOfWeekAddUpdate)
          .AddMethod(__Method_SellableInventoryPeriodAddUpdate, serviceImpl.SellableInventoryPeriodAddUpdate)
          .AddMethod(__Method_SellableInventoryAddUpdate, serviceImpl.SellableInventoryAddUpdate)
          .AddMethod(__Method_GetRateCardsByStation, serviceImpl.GetRateCardsByStation)
          .AddMethod(__Method_GetRateCardsByDateRange, serviceImpl.GetRateCardsByDateRange)
          .AddMethod(__Method_GetConfirmedInventory, serviceImpl.GetConfirmedInventory)
          .AddMethod(__Method_BulkStore, serviceImpl.BulkStore).Build();
    }

  }
}
#endregion

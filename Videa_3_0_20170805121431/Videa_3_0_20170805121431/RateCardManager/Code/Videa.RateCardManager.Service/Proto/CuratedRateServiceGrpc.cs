// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CuratedRateService.proto
#region Designer generated code

using System;
using System.Threading;
using System.Threading.Tasks;
using grpc = global::Grpc.Core;

namespace Videa.CuratedRateNS.Service.Proto.Types {
  public static partial class CuratedRateService
  {
    static readonly string __ServiceName = "CuratedRateService";

    static readonly grpc::Marshaller<global::Videa.CuratedRateNS.Service.Proto.Types.CuratedRateDeleteRequest> __Marshaller_CuratedRateDeleteRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Videa.CuratedRateNS.Service.Proto.Types.CuratedRateDeleteRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Videa.CuratedRateNS.Service.Proto.Types.CuratedRateDeleteResponse> __Marshaller_CuratedRateDeleteResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Videa.CuratedRateNS.Service.Proto.Types.CuratedRateDeleteResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Videa.CuratedRateNS.Service.Proto.Types.RateTypeDeleteRequest> __Marshaller_RateTypeDeleteRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Videa.CuratedRateNS.Service.Proto.Types.RateTypeDeleteRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Videa.CuratedRateNS.Service.Proto.Types.RateTypeDeleteResponse> __Marshaller_RateTypeDeleteResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Videa.CuratedRateNS.Service.Proto.Types.RateTypeDeleteResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Videa.CuratedRateNS.Service.Proto.Types.CurationStatusDeleteRequest> __Marshaller_CurationStatusDeleteRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Videa.CuratedRateNS.Service.Proto.Types.CurationStatusDeleteRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Videa.CuratedRateNS.Service.Proto.Types.CurationStatusDeleteResponse> __Marshaller_CurationStatusDeleteResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Videa.CuratedRateNS.Service.Proto.Types.CurationStatusDeleteResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Videa.CuratedRateNS.Service.Proto.Types.CuratedRateAddUpdateRequest> __Marshaller_CuratedRateAddUpdateRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Videa.CuratedRateNS.Service.Proto.Types.CuratedRateAddUpdateRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Videa.CuratedRateNS.Service.Proto.Types.CuratedRateAddUpdateResponse> __Marshaller_CuratedRateAddUpdateResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Videa.CuratedRateNS.Service.Proto.Types.CuratedRateAddUpdateResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Videa.CuratedRateNS.Service.Proto.Types.RateTypeAddUpdateRequest> __Marshaller_RateTypeAddUpdateRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Videa.CuratedRateNS.Service.Proto.Types.RateTypeAddUpdateRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Videa.CuratedRateNS.Service.Proto.Types.RateTypeAddUpdateResponse> __Marshaller_RateTypeAddUpdateResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Videa.CuratedRateNS.Service.Proto.Types.RateTypeAddUpdateResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Videa.CuratedRateNS.Service.Proto.Types.CurationStatusAddUpdateRequest> __Marshaller_CurationStatusAddUpdateRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Videa.CuratedRateNS.Service.Proto.Types.CurationStatusAddUpdateRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Videa.CuratedRateNS.Service.Proto.Types.CurationStatusAddUpdateResponse> __Marshaller_CurationStatusAddUpdateResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Videa.CuratedRateNS.Service.Proto.Types.CurationStatusAddUpdateResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Videa.CuratedRateNS.Service.Proto.Types.GetConfirmedRatesRequest> __Marshaller_GetConfirmedRatesRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Videa.CuratedRateNS.Service.Proto.Types.GetConfirmedRatesRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Videa.CuratedRateNS.Service.Proto.Types.GetConfirmedRatesResponse> __Marshaller_GetConfirmedRatesResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Videa.CuratedRateNS.Service.Proto.Types.GetConfirmedRatesResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Videa.CuratedRateNS.Service.Proto.Types.BulkStoreRequest> __Marshaller_BulkStoreRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Videa.CuratedRateNS.Service.Proto.Types.BulkStoreRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Videa.CuratedRateNS.Service.Proto.Types.BulkStoreResponse> __Marshaller_BulkStoreResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Videa.CuratedRateNS.Service.Proto.Types.BulkStoreResponse.Parser.ParseFrom);

    static readonly grpc::Method<global::Videa.CuratedRateNS.Service.Proto.Types.CuratedRateDeleteRequest, global::Videa.CuratedRateNS.Service.Proto.Types.CuratedRateDeleteResponse> __Method_CuratedRateDelete = new grpc::Method<global::Videa.CuratedRateNS.Service.Proto.Types.CuratedRateDeleteRequest, global::Videa.CuratedRateNS.Service.Proto.Types.CuratedRateDeleteResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CuratedRateDelete",
        __Marshaller_CuratedRateDeleteRequest,
        __Marshaller_CuratedRateDeleteResponse);

    static readonly grpc::Method<global::Videa.CuratedRateNS.Service.Proto.Types.RateTypeDeleteRequest, global::Videa.CuratedRateNS.Service.Proto.Types.RateTypeDeleteResponse> __Method_RateTypeDelete = new grpc::Method<global::Videa.CuratedRateNS.Service.Proto.Types.RateTypeDeleteRequest, global::Videa.CuratedRateNS.Service.Proto.Types.RateTypeDeleteResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RateTypeDelete",
        __Marshaller_RateTypeDeleteRequest,
        __Marshaller_RateTypeDeleteResponse);

    static readonly grpc::Method<global::Videa.CuratedRateNS.Service.Proto.Types.CurationStatusDeleteRequest, global::Videa.CuratedRateNS.Service.Proto.Types.CurationStatusDeleteResponse> __Method_CurationStatusDelete = new grpc::Method<global::Videa.CuratedRateNS.Service.Proto.Types.CurationStatusDeleteRequest, global::Videa.CuratedRateNS.Service.Proto.Types.CurationStatusDeleteResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CurationStatusDelete",
        __Marshaller_CurationStatusDeleteRequest,
        __Marshaller_CurationStatusDeleteResponse);

    static readonly grpc::Method<global::Videa.CuratedRateNS.Service.Proto.Types.CuratedRateAddUpdateRequest, global::Videa.CuratedRateNS.Service.Proto.Types.CuratedRateAddUpdateResponse> __Method_CuratedRateAddUpdate = new grpc::Method<global::Videa.CuratedRateNS.Service.Proto.Types.CuratedRateAddUpdateRequest, global::Videa.CuratedRateNS.Service.Proto.Types.CuratedRateAddUpdateResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CuratedRateAddUpdate",
        __Marshaller_CuratedRateAddUpdateRequest,
        __Marshaller_CuratedRateAddUpdateResponse);

    static readonly grpc::Method<global::Videa.CuratedRateNS.Service.Proto.Types.RateTypeAddUpdateRequest, global::Videa.CuratedRateNS.Service.Proto.Types.RateTypeAddUpdateResponse> __Method_RateTypeAddUpdate = new grpc::Method<global::Videa.CuratedRateNS.Service.Proto.Types.RateTypeAddUpdateRequest, global::Videa.CuratedRateNS.Service.Proto.Types.RateTypeAddUpdateResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RateTypeAddUpdate",
        __Marshaller_RateTypeAddUpdateRequest,
        __Marshaller_RateTypeAddUpdateResponse);

    static readonly grpc::Method<global::Videa.CuratedRateNS.Service.Proto.Types.CurationStatusAddUpdateRequest, global::Videa.CuratedRateNS.Service.Proto.Types.CurationStatusAddUpdateResponse> __Method_CurationStatusAddUpdate = new grpc::Method<global::Videa.CuratedRateNS.Service.Proto.Types.CurationStatusAddUpdateRequest, global::Videa.CuratedRateNS.Service.Proto.Types.CurationStatusAddUpdateResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CurationStatusAddUpdate",
        __Marshaller_CurationStatusAddUpdateRequest,
        __Marshaller_CurationStatusAddUpdateResponse);

    static readonly grpc::Method<global::Videa.CuratedRateNS.Service.Proto.Types.GetConfirmedRatesRequest, global::Videa.CuratedRateNS.Service.Proto.Types.GetConfirmedRatesResponse> __Method_GetConfirmedRates = new grpc::Method<global::Videa.CuratedRateNS.Service.Proto.Types.GetConfirmedRatesRequest, global::Videa.CuratedRateNS.Service.Proto.Types.GetConfirmedRatesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetConfirmedRates",
        __Marshaller_GetConfirmedRatesRequest,
        __Marshaller_GetConfirmedRatesResponse);

    static readonly grpc::Method<global::Videa.CuratedRateNS.Service.Proto.Types.BulkStoreRequest, global::Videa.CuratedRateNS.Service.Proto.Types.BulkStoreResponse> __Method_BulkStore = new grpc::Method<global::Videa.CuratedRateNS.Service.Proto.Types.BulkStoreRequest, global::Videa.CuratedRateNS.Service.Proto.Types.BulkStoreResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "BulkStore",
        __Marshaller_BulkStoreRequest,
        __Marshaller_BulkStoreResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Videa.CuratedRateNS.Service.Proto.Types.CuratedRateServiceReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of CuratedRateService</summary>
    public abstract partial class CuratedRateServiceBase
    {
      public virtual global::System.Threading.Tasks.Task<global::Videa.CuratedRateNS.Service.Proto.Types.CuratedRateDeleteResponse> CuratedRateDelete(global::Videa.CuratedRateNS.Service.Proto.Types.CuratedRateDeleteRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Videa.CuratedRateNS.Service.Proto.Types.RateTypeDeleteResponse> RateTypeDelete(global::Videa.CuratedRateNS.Service.Proto.Types.RateTypeDeleteRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Videa.CuratedRateNS.Service.Proto.Types.CurationStatusDeleteResponse> CurationStatusDelete(global::Videa.CuratedRateNS.Service.Proto.Types.CurationStatusDeleteRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Videa.CuratedRateNS.Service.Proto.Types.CuratedRateAddUpdateResponse> CuratedRateAddUpdate(global::Videa.CuratedRateNS.Service.Proto.Types.CuratedRateAddUpdateRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Videa.CuratedRateNS.Service.Proto.Types.RateTypeAddUpdateResponse> RateTypeAddUpdate(global::Videa.CuratedRateNS.Service.Proto.Types.RateTypeAddUpdateRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Videa.CuratedRateNS.Service.Proto.Types.CurationStatusAddUpdateResponse> CurationStatusAddUpdate(global::Videa.CuratedRateNS.Service.Proto.Types.CurationStatusAddUpdateRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Videa.CuratedRateNS.Service.Proto.Types.GetConfirmedRatesResponse> GetConfirmedRates(global::Videa.CuratedRateNS.Service.Proto.Types.GetConfirmedRatesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Videa.CuratedRateNS.Service.Proto.Types.BulkStoreResponse> BulkStore(global::Videa.CuratedRateNS.Service.Proto.Types.BulkStoreRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for CuratedRateService</summary>
    public partial class CuratedRateServiceClient : grpc::ClientBase<CuratedRateServiceClient>
    {
      /// <summary>Creates a new client for CuratedRateService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public CuratedRateServiceClient(grpc::Channel channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for CuratedRateService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public CuratedRateServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected CuratedRateServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected CuratedRateServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::Videa.CuratedRateNS.Service.Proto.Types.CuratedRateDeleteResponse CuratedRateDelete(global::Videa.CuratedRateNS.Service.Proto.Types.CuratedRateDeleteRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return CuratedRateDelete(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Videa.CuratedRateNS.Service.Proto.Types.CuratedRateDeleteResponse CuratedRateDelete(global::Videa.CuratedRateNS.Service.Proto.Types.CuratedRateDeleteRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CuratedRateDelete, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Videa.CuratedRateNS.Service.Proto.Types.CuratedRateDeleteResponse> CuratedRateDeleteAsync(global::Videa.CuratedRateNS.Service.Proto.Types.CuratedRateDeleteRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return CuratedRateDeleteAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Videa.CuratedRateNS.Service.Proto.Types.CuratedRateDeleteResponse> CuratedRateDeleteAsync(global::Videa.CuratedRateNS.Service.Proto.Types.CuratedRateDeleteRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CuratedRateDelete, null, options, request);
      }
      public virtual global::Videa.CuratedRateNS.Service.Proto.Types.RateTypeDeleteResponse RateTypeDelete(global::Videa.CuratedRateNS.Service.Proto.Types.RateTypeDeleteRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return RateTypeDelete(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Videa.CuratedRateNS.Service.Proto.Types.RateTypeDeleteResponse RateTypeDelete(global::Videa.CuratedRateNS.Service.Proto.Types.RateTypeDeleteRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RateTypeDelete, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Videa.CuratedRateNS.Service.Proto.Types.RateTypeDeleteResponse> RateTypeDeleteAsync(global::Videa.CuratedRateNS.Service.Proto.Types.RateTypeDeleteRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return RateTypeDeleteAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Videa.CuratedRateNS.Service.Proto.Types.RateTypeDeleteResponse> RateTypeDeleteAsync(global::Videa.CuratedRateNS.Service.Proto.Types.RateTypeDeleteRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RateTypeDelete, null, options, request);
      }
      public virtual global::Videa.CuratedRateNS.Service.Proto.Types.CurationStatusDeleteResponse CurationStatusDelete(global::Videa.CuratedRateNS.Service.Proto.Types.CurationStatusDeleteRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return CurationStatusDelete(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Videa.CuratedRateNS.Service.Proto.Types.CurationStatusDeleteResponse CurationStatusDelete(global::Videa.CuratedRateNS.Service.Proto.Types.CurationStatusDeleteRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CurationStatusDelete, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Videa.CuratedRateNS.Service.Proto.Types.CurationStatusDeleteResponse> CurationStatusDeleteAsync(global::Videa.CuratedRateNS.Service.Proto.Types.CurationStatusDeleteRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return CurationStatusDeleteAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Videa.CuratedRateNS.Service.Proto.Types.CurationStatusDeleteResponse> CurationStatusDeleteAsync(global::Videa.CuratedRateNS.Service.Proto.Types.CurationStatusDeleteRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CurationStatusDelete, null, options, request);
      }
      public virtual global::Videa.CuratedRateNS.Service.Proto.Types.CuratedRateAddUpdateResponse CuratedRateAddUpdate(global::Videa.CuratedRateNS.Service.Proto.Types.CuratedRateAddUpdateRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return CuratedRateAddUpdate(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Videa.CuratedRateNS.Service.Proto.Types.CuratedRateAddUpdateResponse CuratedRateAddUpdate(global::Videa.CuratedRateNS.Service.Proto.Types.CuratedRateAddUpdateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CuratedRateAddUpdate, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Videa.CuratedRateNS.Service.Proto.Types.CuratedRateAddUpdateResponse> CuratedRateAddUpdateAsync(global::Videa.CuratedRateNS.Service.Proto.Types.CuratedRateAddUpdateRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return CuratedRateAddUpdateAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Videa.CuratedRateNS.Service.Proto.Types.CuratedRateAddUpdateResponse> CuratedRateAddUpdateAsync(global::Videa.CuratedRateNS.Service.Proto.Types.CuratedRateAddUpdateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CuratedRateAddUpdate, null, options, request);
      }
      public virtual global::Videa.CuratedRateNS.Service.Proto.Types.RateTypeAddUpdateResponse RateTypeAddUpdate(global::Videa.CuratedRateNS.Service.Proto.Types.RateTypeAddUpdateRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return RateTypeAddUpdate(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Videa.CuratedRateNS.Service.Proto.Types.RateTypeAddUpdateResponse RateTypeAddUpdate(global::Videa.CuratedRateNS.Service.Proto.Types.RateTypeAddUpdateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RateTypeAddUpdate, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Videa.CuratedRateNS.Service.Proto.Types.RateTypeAddUpdateResponse> RateTypeAddUpdateAsync(global::Videa.CuratedRateNS.Service.Proto.Types.RateTypeAddUpdateRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return RateTypeAddUpdateAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Videa.CuratedRateNS.Service.Proto.Types.RateTypeAddUpdateResponse> RateTypeAddUpdateAsync(global::Videa.CuratedRateNS.Service.Proto.Types.RateTypeAddUpdateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RateTypeAddUpdate, null, options, request);
      }
      public virtual global::Videa.CuratedRateNS.Service.Proto.Types.CurationStatusAddUpdateResponse CurationStatusAddUpdate(global::Videa.CuratedRateNS.Service.Proto.Types.CurationStatusAddUpdateRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return CurationStatusAddUpdate(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Videa.CuratedRateNS.Service.Proto.Types.CurationStatusAddUpdateResponse CurationStatusAddUpdate(global::Videa.CuratedRateNS.Service.Proto.Types.CurationStatusAddUpdateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CurationStatusAddUpdate, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Videa.CuratedRateNS.Service.Proto.Types.CurationStatusAddUpdateResponse> CurationStatusAddUpdateAsync(global::Videa.CuratedRateNS.Service.Proto.Types.CurationStatusAddUpdateRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return CurationStatusAddUpdateAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Videa.CuratedRateNS.Service.Proto.Types.CurationStatusAddUpdateResponse> CurationStatusAddUpdateAsync(global::Videa.CuratedRateNS.Service.Proto.Types.CurationStatusAddUpdateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CurationStatusAddUpdate, null, options, request);
      }
      public virtual global::Videa.CuratedRateNS.Service.Proto.Types.GetConfirmedRatesResponse GetConfirmedRates(global::Videa.CuratedRateNS.Service.Proto.Types.GetConfirmedRatesRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetConfirmedRates(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Videa.CuratedRateNS.Service.Proto.Types.GetConfirmedRatesResponse GetConfirmedRates(global::Videa.CuratedRateNS.Service.Proto.Types.GetConfirmedRatesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetConfirmedRates, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Videa.CuratedRateNS.Service.Proto.Types.GetConfirmedRatesResponse> GetConfirmedRatesAsync(global::Videa.CuratedRateNS.Service.Proto.Types.GetConfirmedRatesRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetConfirmedRatesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Videa.CuratedRateNS.Service.Proto.Types.GetConfirmedRatesResponse> GetConfirmedRatesAsync(global::Videa.CuratedRateNS.Service.Proto.Types.GetConfirmedRatesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetConfirmedRates, null, options, request);
      }
      public virtual global::Videa.CuratedRateNS.Service.Proto.Types.BulkStoreResponse BulkStore(global::Videa.CuratedRateNS.Service.Proto.Types.BulkStoreRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return BulkStore(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Videa.CuratedRateNS.Service.Proto.Types.BulkStoreResponse BulkStore(global::Videa.CuratedRateNS.Service.Proto.Types.BulkStoreRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_BulkStore, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Videa.CuratedRateNS.Service.Proto.Types.BulkStoreResponse> BulkStoreAsync(global::Videa.CuratedRateNS.Service.Proto.Types.BulkStoreRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return BulkStoreAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Videa.CuratedRateNS.Service.Proto.Types.BulkStoreResponse> BulkStoreAsync(global::Videa.CuratedRateNS.Service.Proto.Types.BulkStoreRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_BulkStore, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override CuratedRateServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new CuratedRateServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(CuratedRateServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_CuratedRateDelete, serviceImpl.CuratedRateDelete)
          .AddMethod(__Method_RateTypeDelete, serviceImpl.RateTypeDelete)
          .AddMethod(__Method_CurationStatusDelete, serviceImpl.CurationStatusDelete)
          .AddMethod(__Method_CuratedRateAddUpdate, serviceImpl.CuratedRateAddUpdate)
          .AddMethod(__Method_RateTypeAddUpdate, serviceImpl.RateTypeAddUpdate)
          .AddMethod(__Method_CurationStatusAddUpdate, serviceImpl.CurationStatusAddUpdate)
          .AddMethod(__Method_GetConfirmedRates, serviceImpl.GetConfirmedRates)
          .AddMethod(__Method_BulkStore, serviceImpl.BulkStore).Build();
    }

  }
}
#endregion

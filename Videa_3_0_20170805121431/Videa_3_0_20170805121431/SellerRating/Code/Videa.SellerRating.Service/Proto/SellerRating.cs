// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SellerRating.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Videa.SellerRatingNS.Service.Proto.Types {

  /// <summary>Holder for reflection information generated from SellerRating.proto</summary>
  public static partial class SellerRatingReflection {

    #region Descriptor
    /// <summary>File descriptor for SellerRating.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SellerRatingReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChJTZWxsZXJSYXRpbmcucHJvdG8aH2dvb2dsZS9wcm90b2J1Zi90aW1lc3Rh",
            "bXAucHJvdG8aHmdvb2dsZS9wcm90b2J1Zi9kdXJhdGlvbi5wcm90byJWCgpS",
            "YXRpbmdEZW1vEhkKEVJhdGluZ0RlbW9IYXNoS2V5GAEgASgJEhUKDVJhdGlu",
            "Z0RlbW9TcW4YAiABKAUSFgoOUmF0aW5nRGVtb05hbWUYAyABKAki0gEKDFJh",
            "dGluZ1BlcmlvZBIbChNSYXRpbmdQZXJpb2RIYXNoS2V5GAEgASgJEhcKD1Jh",
            "dGluZ1BlcmlvZFNxbhgCIAEoBRIYChBSYXRpbmdQZXJpb2ROYW1lGAMgASgJ",
            "EjkKFVJhdGluZ1BlcmlvZFN0YXJ0RGF0ZRgEIAEoCzIaLmdvb2dsZS5wcm90",
            "b2J1Zi5UaW1lc3RhbXASNwoTUmF0aW5nUGVyaW9kRW5kRGF0ZRgFIAEoCzIa",
            "Lmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXAilQIKF1NlbGxhYmxlSW52ZW50",
            "b3J5UmF0aW5nEiYKHlNlbGxhYmxlSW52ZW50b3J5UmF0aW5nSGFzaEtleRgB",
            "IAEoCRIgChhTZWxsYWJsZUludmVudG9yeUhhc2hLZXkYAiABKAkSIgoaU2Vs",
            "bGFibGVJbnZlbnRvcnlSYXRpbmdTcW4YAyABKAUSGQoRUmF0aW5nRGVtb0hh",
            "c2hLZXkYBCABKAkSGwoTUmF0aW5nUGVyaW9kSGFzaEtleRgFIAEoCRIkChxT",
            "ZWxsYWJsZUludmVudG9yeVJhdGluZ1ZhbHVlGAYgASgJEi4KClJvd1ZlcnNp",
            "b24YByABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wIpMBCgZSYXRp",
            "bmcSJAocU2VsbGFibGVJbnZlbnRvcnlSYXRpbmdWYWx1ZRgBIAEoCRIgChhT",
            "ZWxsYWJsZUludmVudG9yeUhhc2hLZXkYAiABKAkSJgoeU2VsbGFibGVJbnZl",
            "bnRvcnlSYXRpbmdIYXNoS2V5GAMgASgJEhkKEVJhdGluZ0RlbW9IYXNoS2V5",
            "GAQgASgJIjQKF1JhdGluZ0RlbW9EZWxldGVSZXF1ZXN0EhkKEVJhdGluZ0Rl",
            "bW9IYXNoS2V5GAEgASgJIhoKGFJhdGluZ0RlbW9EZWxldGVSZXNwb25zZSI4",
            "ChlSYXRpbmdQZXJpb2REZWxldGVSZXF1ZXN0EhsKE1JhdGluZ1BlcmlvZEhh",
            "c2hLZXkYASABKAkiHAoaUmF0aW5nUGVyaW9kRGVsZXRlUmVzcG9uc2UiTgok",
            "U2VsbGFibGVJbnZlbnRvcnlSYXRpbmdEZWxldGVSZXF1ZXN0EiYKHlNlbGxh",
            "YmxlSW52ZW50b3J5UmF0aW5nSGFzaEtleRgBIAEoCSInCiVTZWxsYWJsZUlu",
            "dmVudG9yeVJhdGluZ0RlbGV0ZVJlc3BvbnNlIj0KGlJhdGluZ0RlbW9BZGRV",
            "cGRhdGVSZXF1ZXN0Eh8KClJhdGluZ0RlbW8YASABKAsyCy5SYXRpbmdEZW1v",
            "Ih0KG1JhdGluZ0RlbW9BZGRVcGRhdGVSZXNwb25zZSJDChxSYXRpbmdQZXJp",
            "b2RBZGRVcGRhdGVSZXF1ZXN0EiMKDFJhdGluZ1BlcmlvZBgBIAEoCzINLlJh",
            "dGluZ1BlcmlvZCIfCh1SYXRpbmdQZXJpb2RBZGRVcGRhdGVSZXNwb25zZSJk",
            "CidTZWxsYWJsZUludmVudG9yeVJhdGluZ0FkZFVwZGF0ZVJlcXVlc3QSOQoX",
            "U2VsbGFibGVJbnZlbnRvcnlSYXRpbmcYASABKAsyGC5TZWxsYWJsZUludmVu",
            "dG9yeVJhdGluZyIqCihTZWxsYWJsZUludmVudG9yeVJhdGluZ0FkZFVwZGF0",
            "ZVJlc3BvbnNlIkcKJkdldFNlbGxlclJhdGluZ3NCeUludmVudG9yeUtleXNS",
            "ZXF1ZXN0Eh0KFVNlbGxhYmxlSW52ZW50b3J5TGlzdBgBIAEoCSJCCidHZXRT",
            "ZWxsZXJSYXRpbmdzQnlJbnZlbnRvcnlLZXlzUmVzcG9uc2USFwoGUmF0aW5n",
            "GAEgAygLMgcuUmF0aW5nIkoKI0dldFNlbGxlclJhdGluZ3NCeVJhdGluZ0tl",
            "eXNSZXF1ZXN0EiMKG1NlbGxhYmxlSW52ZW50b3J5UmF0aW5nTGlzdBgBIAEo",
            "CSI/CiRHZXRTZWxsZXJSYXRpbmdzQnlSYXRpbmdLZXlzUmVzcG9uc2USFwoG",
            "UmF0aW5nGAEgAygLMgcuUmF0aW5nIqwBChBCdWxrU3RvcmVSZXF1ZXN0Eh8K",
            "ClJhdGluZ0RlbW8YASADKAsyCy5SYXRpbmdEZW1vEiMKDFJhdGluZ1Blcmlv",
            "ZBgCIAMoCzINLlJhdGluZ1BlcmlvZBI5ChdTZWxsYWJsZUludmVudG9yeVJh",
            "dGluZxgDIAMoCzIYLlNlbGxhYmxlSW52ZW50b3J5UmF0aW5nEhcKBlJhdGlu",
            "ZxgEIAMoCzIHLlJhdGluZyITChFCdWxrU3RvcmVSZXNwb25zZTLpBgoTU2Vs",
            "bGVyUmF0aW5nU2VydmljZRJJChBSYXRpbmdEZW1vRGVsZXRlEhguUmF0aW5n",
            "RGVtb0RlbGV0ZVJlcXVlc3QaGS5SYXRpbmdEZW1vRGVsZXRlUmVzcG9uc2Ui",
            "ABJPChJSYXRpbmdQZXJpb2REZWxldGUSGi5SYXRpbmdQZXJpb2REZWxldGVS",
            "ZXF1ZXN0GhsuUmF0aW5nUGVyaW9kRGVsZXRlUmVzcG9uc2UiABJwCh1TZWxs",
            "YWJsZUludmVudG9yeVJhdGluZ0RlbGV0ZRIlLlNlbGxhYmxlSW52ZW50b3J5",
            "UmF0aW5nRGVsZXRlUmVxdWVzdBomLlNlbGxhYmxlSW52ZW50b3J5UmF0aW5n",
            "RGVsZXRlUmVzcG9uc2UiABJSChNSYXRpbmdEZW1vQWRkVXBkYXRlEhsuUmF0",
            "aW5nRGVtb0FkZFVwZGF0ZVJlcXVlc3QaHC5SYXRpbmdEZW1vQWRkVXBkYXRl",
            "UmVzcG9uc2UiABJYChVSYXRpbmdQZXJpb2RBZGRVcGRhdGUSHS5SYXRpbmdQ",
            "ZXJpb2RBZGRVcGRhdGVSZXF1ZXN0Gh4uUmF0aW5nUGVyaW9kQWRkVXBkYXRl",
            "UmVzcG9uc2UiABJ5CiBTZWxsYWJsZUludmVudG9yeVJhdGluZ0FkZFVwZGF0",
            "ZRIoLlNlbGxhYmxlSW52ZW50b3J5UmF0aW5nQWRkVXBkYXRlUmVxdWVzdBop",
            "LlNlbGxhYmxlSW52ZW50b3J5UmF0aW5nQWRkVXBkYXRlUmVzcG9uc2UiABJ2",
            "Ch9HZXRTZWxsZXJSYXRpbmdzQnlJbnZlbnRvcnlLZXlzEicuR2V0U2VsbGVy",
            "UmF0aW5nc0J5SW52ZW50b3J5S2V5c1JlcXVlc3QaKC5HZXRTZWxsZXJSYXRp",
            "bmdzQnlJbnZlbnRvcnlLZXlzUmVzcG9uc2UiABJtChxHZXRTZWxsZXJSYXRp",
            "bmdzQnlSYXRpbmdLZXlzEiQuR2V0U2VsbGVyUmF0aW5nc0J5UmF0aW5nS2V5",
            "c1JlcXVlc3QaJS5HZXRTZWxsZXJSYXRpbmdzQnlSYXRpbmdLZXlzUmVzcG9u",
            "c2UiABI0CglCdWxrU3RvcmUSES5CdWxrU3RvcmVSZXF1ZXN0GhIuQnVsa1N0",
            "b3JlUmVzcG9uc2UiAEIrqgIoVmlkZWEuU2VsbGVyUmF0aW5nTlMuU2Vydmlj",
            "ZS5Qcm90by5UeXBlc2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.DurationReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Videa.SellerRatingNS.Service.Proto.Types.RatingDemo), global::Videa.SellerRatingNS.Service.Proto.Types.RatingDemo.Parser, new[]{ "RatingDemoHashKey", "RatingDemoSqn", "RatingDemoName" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Videa.SellerRatingNS.Service.Proto.Types.RatingPeriod), global::Videa.SellerRatingNS.Service.Proto.Types.RatingPeriod.Parser, new[]{ "RatingPeriodHashKey", "RatingPeriodSqn", "RatingPeriodName", "RatingPeriodStartDate", "RatingPeriodEndDate" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Videa.SellerRatingNS.Service.Proto.Types.SellableInventoryRating), global::Videa.SellerRatingNS.Service.Proto.Types.SellableInventoryRating.Parser, new[]{ "SellableInventoryRatingHashKey", "SellableInventoryHashKey", "SellableInventoryRatingSqn", "RatingDemoHashKey", "RatingPeriodHashKey", "SellableInventoryRatingValue", "RowVersion" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Videa.SellerRatingNS.Service.Proto.Types.Rating), global::Videa.SellerRatingNS.Service.Proto.Types.Rating.Parser, new[]{ "SellableInventoryRatingValue", "SellableInventoryHashKey", "SellableInventoryRatingHashKey", "RatingDemoHashKey" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Videa.SellerRatingNS.Service.Proto.Types.RatingDemoDeleteRequest), global::Videa.SellerRatingNS.Service.Proto.Types.RatingDemoDeleteRequest.Parser, new[]{ "RatingDemoHashKey" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Videa.SellerRatingNS.Service.Proto.Types.RatingDemoDeleteResponse), global::Videa.SellerRatingNS.Service.Proto.Types.RatingDemoDeleteResponse.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Videa.SellerRatingNS.Service.Proto.Types.RatingPeriodDeleteRequest), global::Videa.SellerRatingNS.Service.Proto.Types.RatingPeriodDeleteRequest.Parser, new[]{ "RatingPeriodHashKey" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Videa.SellerRatingNS.Service.Proto.Types.RatingPeriodDeleteResponse), global::Videa.SellerRatingNS.Service.Proto.Types.RatingPeriodDeleteResponse.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Videa.SellerRatingNS.Service.Proto.Types.SellableInventoryRatingDeleteRequest), global::Videa.SellerRatingNS.Service.Proto.Types.SellableInventoryRatingDeleteRequest.Parser, new[]{ "SellableInventoryRatingHashKey" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Videa.SellerRatingNS.Service.Proto.Types.SellableInventoryRatingDeleteResponse), global::Videa.SellerRatingNS.Service.Proto.Types.SellableInventoryRatingDeleteResponse.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Videa.SellerRatingNS.Service.Proto.Types.RatingDemoAddUpdateRequest), global::Videa.SellerRatingNS.Service.Proto.Types.RatingDemoAddUpdateRequest.Parser, new[]{ "RatingDemo" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Videa.SellerRatingNS.Service.Proto.Types.RatingDemoAddUpdateResponse), global::Videa.SellerRatingNS.Service.Proto.Types.RatingDemoAddUpdateResponse.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Videa.SellerRatingNS.Service.Proto.Types.RatingPeriodAddUpdateRequest), global::Videa.SellerRatingNS.Service.Proto.Types.RatingPeriodAddUpdateRequest.Parser, new[]{ "RatingPeriod" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Videa.SellerRatingNS.Service.Proto.Types.RatingPeriodAddUpdateResponse), global::Videa.SellerRatingNS.Service.Proto.Types.RatingPeriodAddUpdateResponse.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Videa.SellerRatingNS.Service.Proto.Types.SellableInventoryRatingAddUpdateRequest), global::Videa.SellerRatingNS.Service.Proto.Types.SellableInventoryRatingAddUpdateRequest.Parser, new[]{ "SellableInventoryRating" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Videa.SellerRatingNS.Service.Proto.Types.SellableInventoryRatingAddUpdateResponse), global::Videa.SellerRatingNS.Service.Proto.Types.SellableInventoryRatingAddUpdateResponse.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Videa.SellerRatingNS.Service.Proto.Types.GetSellerRatingsByInventoryKeysRequest), global::Videa.SellerRatingNS.Service.Proto.Types.GetSellerRatingsByInventoryKeysRequest.Parser, new[]{ "SellableInventoryList" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Videa.SellerRatingNS.Service.Proto.Types.GetSellerRatingsByInventoryKeysResponse), global::Videa.SellerRatingNS.Service.Proto.Types.GetSellerRatingsByInventoryKeysResponse.Parser, new[]{ "Rating" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Videa.SellerRatingNS.Service.Proto.Types.GetSellerRatingsByRatingKeysRequest), global::Videa.SellerRatingNS.Service.Proto.Types.GetSellerRatingsByRatingKeysRequest.Parser, new[]{ "SellableInventoryRatingList" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Videa.SellerRatingNS.Service.Proto.Types.GetSellerRatingsByRatingKeysResponse), global::Videa.SellerRatingNS.Service.Proto.Types.GetSellerRatingsByRatingKeysResponse.Parser, new[]{ "Rating" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Videa.SellerRatingNS.Service.Proto.Types.BulkStoreRequest), global::Videa.SellerRatingNS.Service.Proto.Types.BulkStoreRequest.Parser, new[]{ "RatingDemo", "RatingPeriod", "SellableInventoryRating", "Rating" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Videa.SellerRatingNS.Service.Proto.Types.BulkStoreResponse), global::Videa.SellerRatingNS.Service.Proto.Types.BulkStoreResponse.Parser, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class RatingDemo : pb::IMessage<RatingDemo> {
    private static readonly pb::MessageParser<RatingDemo> _parser = new pb::MessageParser<RatingDemo>(() => new RatingDemo());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RatingDemo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Videa.SellerRatingNS.Service.Proto.Types.SellerRatingReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RatingDemo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RatingDemo(RatingDemo other) : this() {
      ratingDemoHashKey_ = other.ratingDemoHashKey_;
      ratingDemoSqn_ = other.ratingDemoSqn_;
      ratingDemoName_ = other.ratingDemoName_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RatingDemo Clone() {
      return new RatingDemo(this);
    }

    /// <summary>Field number for the "RatingDemoHashKey" field.</summary>
    public const int RatingDemoHashKeyFieldNumber = 1;
    private string ratingDemoHashKey_ = "";
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RatingDemoHashKey {
      get { return ratingDemoHashKey_; }
      set {
        ratingDemoHashKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "RatingDemoSqn" field.</summary>
    public const int RatingDemoSqnFieldNumber = 2;
    private int ratingDemoSqn_;
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RatingDemoSqn {
      get { return ratingDemoSqn_; }
      set {
        ratingDemoSqn_ = value;
      }
    }

    /// <summary>Field number for the "RatingDemoName" field.</summary>
    public const int RatingDemoNameFieldNumber = 3;
    private string ratingDemoName_ = "";
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RatingDemoName {
      get { return ratingDemoName_; }
      set {
        ratingDemoName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RatingDemo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RatingDemo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RatingDemoHashKey != other.RatingDemoHashKey) return false;
      if (RatingDemoSqn != other.RatingDemoSqn) return false;
      if (RatingDemoName != other.RatingDemoName) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RatingDemoHashKey.Length != 0) hash ^= RatingDemoHashKey.GetHashCode();
      if (RatingDemoSqn != 0) hash ^= RatingDemoSqn.GetHashCode();
      if (RatingDemoName.Length != 0) hash ^= RatingDemoName.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RatingDemoHashKey.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(RatingDemoHashKey);
      }
      if (RatingDemoSqn != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(RatingDemoSqn);
      }
      if (RatingDemoName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(RatingDemoName);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RatingDemoHashKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RatingDemoHashKey);
      }
      if (RatingDemoSqn != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RatingDemoSqn);
      }
      if (RatingDemoName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RatingDemoName);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RatingDemo other) {
      if (other == null) {
        return;
      }
      if (other.RatingDemoHashKey.Length != 0) {
        RatingDemoHashKey = other.RatingDemoHashKey;
      }
      if (other.RatingDemoSqn != 0) {
        RatingDemoSqn = other.RatingDemoSqn;
      }
      if (other.RatingDemoName.Length != 0) {
        RatingDemoName = other.RatingDemoName;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            RatingDemoHashKey = input.ReadString();
            break;
          }
          case 16: {
            RatingDemoSqn = input.ReadInt32();
            break;
          }
          case 26: {
            RatingDemoName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RatingPeriod : pb::IMessage<RatingPeriod> {
    private static readonly pb::MessageParser<RatingPeriod> _parser = new pb::MessageParser<RatingPeriod>(() => new RatingPeriod());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RatingPeriod> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Videa.SellerRatingNS.Service.Proto.Types.SellerRatingReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RatingPeriod() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RatingPeriod(RatingPeriod other) : this() {
      ratingPeriodHashKey_ = other.ratingPeriodHashKey_;
      ratingPeriodSqn_ = other.ratingPeriodSqn_;
      ratingPeriodName_ = other.ratingPeriodName_;
      RatingPeriodStartDate = other.ratingPeriodStartDate_ != null ? other.RatingPeriodStartDate.Clone() : null;
      RatingPeriodEndDate = other.ratingPeriodEndDate_ != null ? other.RatingPeriodEndDate.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RatingPeriod Clone() {
      return new RatingPeriod(this);
    }

    /// <summary>Field number for the "RatingPeriodHashKey" field.</summary>
    public const int RatingPeriodHashKeyFieldNumber = 1;
    private string ratingPeriodHashKey_ = "";
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RatingPeriodHashKey {
      get { return ratingPeriodHashKey_; }
      set {
        ratingPeriodHashKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "RatingPeriodSqn" field.</summary>
    public const int RatingPeriodSqnFieldNumber = 2;
    private int ratingPeriodSqn_;
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RatingPeriodSqn {
      get { return ratingPeriodSqn_; }
      set {
        ratingPeriodSqn_ = value;
      }
    }

    /// <summary>Field number for the "RatingPeriodName" field.</summary>
    public const int RatingPeriodNameFieldNumber = 3;
    private string ratingPeriodName_ = "";
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RatingPeriodName {
      get { return ratingPeriodName_; }
      set {
        ratingPeriodName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "RatingPeriodStartDate" field.</summary>
    public const int RatingPeriodStartDateFieldNumber = 4;
    private global::Google.Protobuf.WellKnownTypes.Timestamp ratingPeriodStartDate_;
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp RatingPeriodStartDate {
      get { return ratingPeriodStartDate_; }
      set {
        ratingPeriodStartDate_ = value;
      }
    }

    /// <summary>Field number for the "RatingPeriodEndDate" field.</summary>
    public const int RatingPeriodEndDateFieldNumber = 5;
    private global::Google.Protobuf.WellKnownTypes.Timestamp ratingPeriodEndDate_;
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp RatingPeriodEndDate {
      get { return ratingPeriodEndDate_; }
      set {
        ratingPeriodEndDate_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RatingPeriod);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RatingPeriod other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RatingPeriodHashKey != other.RatingPeriodHashKey) return false;
      if (RatingPeriodSqn != other.RatingPeriodSqn) return false;
      if (RatingPeriodName != other.RatingPeriodName) return false;
      if (!object.Equals(RatingPeriodStartDate, other.RatingPeriodStartDate)) return false;
      if (!object.Equals(RatingPeriodEndDate, other.RatingPeriodEndDate)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RatingPeriodHashKey.Length != 0) hash ^= RatingPeriodHashKey.GetHashCode();
      if (RatingPeriodSqn != 0) hash ^= RatingPeriodSqn.GetHashCode();
      if (RatingPeriodName.Length != 0) hash ^= RatingPeriodName.GetHashCode();
      if (ratingPeriodStartDate_ != null) hash ^= RatingPeriodStartDate.GetHashCode();
      if (ratingPeriodEndDate_ != null) hash ^= RatingPeriodEndDate.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RatingPeriodHashKey.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(RatingPeriodHashKey);
      }
      if (RatingPeriodSqn != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(RatingPeriodSqn);
      }
      if (RatingPeriodName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(RatingPeriodName);
      }
      if (ratingPeriodStartDate_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(RatingPeriodStartDate);
      }
      if (ratingPeriodEndDate_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(RatingPeriodEndDate);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RatingPeriodHashKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RatingPeriodHashKey);
      }
      if (RatingPeriodSqn != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RatingPeriodSqn);
      }
      if (RatingPeriodName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RatingPeriodName);
      }
      if (ratingPeriodStartDate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RatingPeriodStartDate);
      }
      if (ratingPeriodEndDate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RatingPeriodEndDate);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RatingPeriod other) {
      if (other == null) {
        return;
      }
      if (other.RatingPeriodHashKey.Length != 0) {
        RatingPeriodHashKey = other.RatingPeriodHashKey;
      }
      if (other.RatingPeriodSqn != 0) {
        RatingPeriodSqn = other.RatingPeriodSqn;
      }
      if (other.RatingPeriodName.Length != 0) {
        RatingPeriodName = other.RatingPeriodName;
      }
      if (other.ratingPeriodStartDate_ != null) {
        if (ratingPeriodStartDate_ == null) {
          ratingPeriodStartDate_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        RatingPeriodStartDate.MergeFrom(other.RatingPeriodStartDate);
      }
      if (other.ratingPeriodEndDate_ != null) {
        if (ratingPeriodEndDate_ == null) {
          ratingPeriodEndDate_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        RatingPeriodEndDate.MergeFrom(other.RatingPeriodEndDate);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            RatingPeriodHashKey = input.ReadString();
            break;
          }
          case 16: {
            RatingPeriodSqn = input.ReadInt32();
            break;
          }
          case 26: {
            RatingPeriodName = input.ReadString();
            break;
          }
          case 34: {
            if (ratingPeriodStartDate_ == null) {
              ratingPeriodStartDate_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(ratingPeriodStartDate_);
            break;
          }
          case 42: {
            if (ratingPeriodEndDate_ == null) {
              ratingPeriodEndDate_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(ratingPeriodEndDate_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SellableInventoryRating : pb::IMessage<SellableInventoryRating> {
    private static readonly pb::MessageParser<SellableInventoryRating> _parser = new pb::MessageParser<SellableInventoryRating>(() => new SellableInventoryRating());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SellableInventoryRating> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Videa.SellerRatingNS.Service.Proto.Types.SellerRatingReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SellableInventoryRating() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SellableInventoryRating(SellableInventoryRating other) : this() {
      sellableInventoryRatingHashKey_ = other.sellableInventoryRatingHashKey_;
      sellableInventoryHashKey_ = other.sellableInventoryHashKey_;
      sellableInventoryRatingSqn_ = other.sellableInventoryRatingSqn_;
      ratingDemoHashKey_ = other.ratingDemoHashKey_;
      ratingPeriodHashKey_ = other.ratingPeriodHashKey_;
      sellableInventoryRatingValue_ = other.sellableInventoryRatingValue_;
      RowVersion = other.rowVersion_ != null ? other.RowVersion.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SellableInventoryRating Clone() {
      return new SellableInventoryRating(this);
    }

    /// <summary>Field number for the "SellableInventoryRatingHashKey" field.</summary>
    public const int SellableInventoryRatingHashKeyFieldNumber = 1;
    private string sellableInventoryRatingHashKey_ = "";
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SellableInventoryRatingHashKey {
      get { return sellableInventoryRatingHashKey_; }
      set {
        sellableInventoryRatingHashKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "SellableInventoryHashKey" field.</summary>
    public const int SellableInventoryHashKeyFieldNumber = 2;
    private string sellableInventoryHashKey_ = "";
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SellableInventoryHashKey {
      get { return sellableInventoryHashKey_; }
      set {
        sellableInventoryHashKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "SellableInventoryRatingSqn" field.</summary>
    public const int SellableInventoryRatingSqnFieldNumber = 3;
    private int sellableInventoryRatingSqn_;
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SellableInventoryRatingSqn {
      get { return sellableInventoryRatingSqn_; }
      set {
        sellableInventoryRatingSqn_ = value;
      }
    }

    /// <summary>Field number for the "RatingDemoHashKey" field.</summary>
    public const int RatingDemoHashKeyFieldNumber = 4;
    private string ratingDemoHashKey_ = "";
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RatingDemoHashKey {
      get { return ratingDemoHashKey_; }
      set {
        ratingDemoHashKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "RatingPeriodHashKey" field.</summary>
    public const int RatingPeriodHashKeyFieldNumber = 5;
    private string ratingPeriodHashKey_ = "";
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RatingPeriodHashKey {
      get { return ratingPeriodHashKey_; }
      set {
        ratingPeriodHashKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "SellableInventoryRatingValue" field.</summary>
    public const int SellableInventoryRatingValueFieldNumber = 6;
    private string sellableInventoryRatingValue_ = "";
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SellableInventoryRatingValue {
      get { return sellableInventoryRatingValue_; }
      set {
        sellableInventoryRatingValue_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "RowVersion" field.</summary>
    public const int RowVersionFieldNumber = 7;
    private global::Google.Protobuf.WellKnownTypes.Timestamp rowVersion_;
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp RowVersion {
      get { return rowVersion_; }
      set {
        rowVersion_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SellableInventoryRating);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SellableInventoryRating other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SellableInventoryRatingHashKey != other.SellableInventoryRatingHashKey) return false;
      if (SellableInventoryHashKey != other.SellableInventoryHashKey) return false;
      if (SellableInventoryRatingSqn != other.SellableInventoryRatingSqn) return false;
      if (RatingDemoHashKey != other.RatingDemoHashKey) return false;
      if (RatingPeriodHashKey != other.RatingPeriodHashKey) return false;
      if (SellableInventoryRatingValue != other.SellableInventoryRatingValue) return false;
      if (!object.Equals(RowVersion, other.RowVersion)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SellableInventoryRatingHashKey.Length != 0) hash ^= SellableInventoryRatingHashKey.GetHashCode();
      if (SellableInventoryHashKey.Length != 0) hash ^= SellableInventoryHashKey.GetHashCode();
      if (SellableInventoryRatingSqn != 0) hash ^= SellableInventoryRatingSqn.GetHashCode();
      if (RatingDemoHashKey.Length != 0) hash ^= RatingDemoHashKey.GetHashCode();
      if (RatingPeriodHashKey.Length != 0) hash ^= RatingPeriodHashKey.GetHashCode();
      if (SellableInventoryRatingValue.Length != 0) hash ^= SellableInventoryRatingValue.GetHashCode();
      if (rowVersion_ != null) hash ^= RowVersion.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SellableInventoryRatingHashKey.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SellableInventoryRatingHashKey);
      }
      if (SellableInventoryHashKey.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SellableInventoryHashKey);
      }
      if (SellableInventoryRatingSqn != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(SellableInventoryRatingSqn);
      }
      if (RatingDemoHashKey.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(RatingDemoHashKey);
      }
      if (RatingPeriodHashKey.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(RatingPeriodHashKey);
      }
      if (SellableInventoryRatingValue.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(SellableInventoryRatingValue);
      }
      if (rowVersion_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(RowVersion);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SellableInventoryRatingHashKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SellableInventoryRatingHashKey);
      }
      if (SellableInventoryHashKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SellableInventoryHashKey);
      }
      if (SellableInventoryRatingSqn != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SellableInventoryRatingSqn);
      }
      if (RatingDemoHashKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RatingDemoHashKey);
      }
      if (RatingPeriodHashKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RatingPeriodHashKey);
      }
      if (SellableInventoryRatingValue.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SellableInventoryRatingValue);
      }
      if (rowVersion_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RowVersion);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SellableInventoryRating other) {
      if (other == null) {
        return;
      }
      if (other.SellableInventoryRatingHashKey.Length != 0) {
        SellableInventoryRatingHashKey = other.SellableInventoryRatingHashKey;
      }
      if (other.SellableInventoryHashKey.Length != 0) {
        SellableInventoryHashKey = other.SellableInventoryHashKey;
      }
      if (other.SellableInventoryRatingSqn != 0) {
        SellableInventoryRatingSqn = other.SellableInventoryRatingSqn;
      }
      if (other.RatingDemoHashKey.Length != 0) {
        RatingDemoHashKey = other.RatingDemoHashKey;
      }
      if (other.RatingPeriodHashKey.Length != 0) {
        RatingPeriodHashKey = other.RatingPeriodHashKey;
      }
      if (other.SellableInventoryRatingValue.Length != 0) {
        SellableInventoryRatingValue = other.SellableInventoryRatingValue;
      }
      if (other.rowVersion_ != null) {
        if (rowVersion_ == null) {
          rowVersion_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        RowVersion.MergeFrom(other.RowVersion);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            SellableInventoryRatingHashKey = input.ReadString();
            break;
          }
          case 18: {
            SellableInventoryHashKey = input.ReadString();
            break;
          }
          case 24: {
            SellableInventoryRatingSqn = input.ReadInt32();
            break;
          }
          case 34: {
            RatingDemoHashKey = input.ReadString();
            break;
          }
          case 42: {
            RatingPeriodHashKey = input.ReadString();
            break;
          }
          case 50: {
            SellableInventoryRatingValue = input.ReadString();
            break;
          }
          case 58: {
            if (rowVersion_ == null) {
              rowVersion_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(rowVersion_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Rating : pb::IMessage<Rating> {
    private static readonly pb::MessageParser<Rating> _parser = new pb::MessageParser<Rating>(() => new Rating());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Rating> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Videa.SellerRatingNS.Service.Proto.Types.SellerRatingReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Rating() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Rating(Rating other) : this() {
      sellableInventoryRatingValue_ = other.sellableInventoryRatingValue_;
      sellableInventoryHashKey_ = other.sellableInventoryHashKey_;
      sellableInventoryRatingHashKey_ = other.sellableInventoryRatingHashKey_;
      ratingDemoHashKey_ = other.ratingDemoHashKey_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Rating Clone() {
      return new Rating(this);
    }

    /// <summary>Field number for the "SellableInventoryRatingValue" field.</summary>
    public const int SellableInventoryRatingValueFieldNumber = 1;
    private string sellableInventoryRatingValue_ = "";
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SellableInventoryRatingValue {
      get { return sellableInventoryRatingValue_; }
      set {
        sellableInventoryRatingValue_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "SellableInventoryHashKey" field.</summary>
    public const int SellableInventoryHashKeyFieldNumber = 2;
    private string sellableInventoryHashKey_ = "";
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SellableInventoryHashKey {
      get { return sellableInventoryHashKey_; }
      set {
        sellableInventoryHashKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "SellableInventoryRatingHashKey" field.</summary>
    public const int SellableInventoryRatingHashKeyFieldNumber = 3;
    private string sellableInventoryRatingHashKey_ = "";
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SellableInventoryRatingHashKey {
      get { return sellableInventoryRatingHashKey_; }
      set {
        sellableInventoryRatingHashKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "RatingDemoHashKey" field.</summary>
    public const int RatingDemoHashKeyFieldNumber = 4;
    private string ratingDemoHashKey_ = "";
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RatingDemoHashKey {
      get { return ratingDemoHashKey_; }
      set {
        ratingDemoHashKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Rating);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Rating other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SellableInventoryRatingValue != other.SellableInventoryRatingValue) return false;
      if (SellableInventoryHashKey != other.SellableInventoryHashKey) return false;
      if (SellableInventoryRatingHashKey != other.SellableInventoryRatingHashKey) return false;
      if (RatingDemoHashKey != other.RatingDemoHashKey) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SellableInventoryRatingValue.Length != 0) hash ^= SellableInventoryRatingValue.GetHashCode();
      if (SellableInventoryHashKey.Length != 0) hash ^= SellableInventoryHashKey.GetHashCode();
      if (SellableInventoryRatingHashKey.Length != 0) hash ^= SellableInventoryRatingHashKey.GetHashCode();
      if (RatingDemoHashKey.Length != 0) hash ^= RatingDemoHashKey.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SellableInventoryRatingValue.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SellableInventoryRatingValue);
      }
      if (SellableInventoryHashKey.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SellableInventoryHashKey);
      }
      if (SellableInventoryRatingHashKey.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(SellableInventoryRatingHashKey);
      }
      if (RatingDemoHashKey.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(RatingDemoHashKey);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SellableInventoryRatingValue.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SellableInventoryRatingValue);
      }
      if (SellableInventoryHashKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SellableInventoryHashKey);
      }
      if (SellableInventoryRatingHashKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SellableInventoryRatingHashKey);
      }
      if (RatingDemoHashKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RatingDemoHashKey);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Rating other) {
      if (other == null) {
        return;
      }
      if (other.SellableInventoryRatingValue.Length != 0) {
        SellableInventoryRatingValue = other.SellableInventoryRatingValue;
      }
      if (other.SellableInventoryHashKey.Length != 0) {
        SellableInventoryHashKey = other.SellableInventoryHashKey;
      }
      if (other.SellableInventoryRatingHashKey.Length != 0) {
        SellableInventoryRatingHashKey = other.SellableInventoryRatingHashKey;
      }
      if (other.RatingDemoHashKey.Length != 0) {
        RatingDemoHashKey = other.RatingDemoHashKey;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            SellableInventoryRatingValue = input.ReadString();
            break;
          }
          case 18: {
            SellableInventoryHashKey = input.ReadString();
            break;
          }
          case 26: {
            SellableInventoryRatingHashKey = input.ReadString();
            break;
          }
          case 34: {
            RatingDemoHashKey = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RatingDemoDeleteRequest : pb::IMessage<RatingDemoDeleteRequest> {
    private static readonly pb::MessageParser<RatingDemoDeleteRequest> _parser = new pb::MessageParser<RatingDemoDeleteRequest>(() => new RatingDemoDeleteRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RatingDemoDeleteRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Videa.SellerRatingNS.Service.Proto.Types.SellerRatingReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RatingDemoDeleteRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RatingDemoDeleteRequest(RatingDemoDeleteRequest other) : this() {
      ratingDemoHashKey_ = other.ratingDemoHashKey_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RatingDemoDeleteRequest Clone() {
      return new RatingDemoDeleteRequest(this);
    }

    /// <summary>Field number for the "RatingDemoHashKey" field.</summary>
    public const int RatingDemoHashKeyFieldNumber = 1;
    private string ratingDemoHashKey_ = "";
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RatingDemoHashKey {
      get { return ratingDemoHashKey_; }
      set {
        ratingDemoHashKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RatingDemoDeleteRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RatingDemoDeleteRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RatingDemoHashKey != other.RatingDemoHashKey) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RatingDemoHashKey.Length != 0) hash ^= RatingDemoHashKey.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RatingDemoHashKey.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(RatingDemoHashKey);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RatingDemoHashKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RatingDemoHashKey);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RatingDemoDeleteRequest other) {
      if (other == null) {
        return;
      }
      if (other.RatingDemoHashKey.Length != 0) {
        RatingDemoHashKey = other.RatingDemoHashKey;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            RatingDemoHashKey = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RatingDemoDeleteResponse : pb::IMessage<RatingDemoDeleteResponse> {
    private static readonly pb::MessageParser<RatingDemoDeleteResponse> _parser = new pb::MessageParser<RatingDemoDeleteResponse>(() => new RatingDemoDeleteResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RatingDemoDeleteResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Videa.SellerRatingNS.Service.Proto.Types.SellerRatingReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RatingDemoDeleteResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RatingDemoDeleteResponse(RatingDemoDeleteResponse other) : this() {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RatingDemoDeleteResponse Clone() {
      return new RatingDemoDeleteResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RatingDemoDeleteResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RatingDemoDeleteResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RatingDemoDeleteResponse other) {
      if (other == null) {
        return;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
        }
      }
    }

  }

  public sealed partial class RatingPeriodDeleteRequest : pb::IMessage<RatingPeriodDeleteRequest> {
    private static readonly pb::MessageParser<RatingPeriodDeleteRequest> _parser = new pb::MessageParser<RatingPeriodDeleteRequest>(() => new RatingPeriodDeleteRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RatingPeriodDeleteRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Videa.SellerRatingNS.Service.Proto.Types.SellerRatingReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RatingPeriodDeleteRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RatingPeriodDeleteRequest(RatingPeriodDeleteRequest other) : this() {
      ratingPeriodHashKey_ = other.ratingPeriodHashKey_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RatingPeriodDeleteRequest Clone() {
      return new RatingPeriodDeleteRequest(this);
    }

    /// <summary>Field number for the "RatingPeriodHashKey" field.</summary>
    public const int RatingPeriodHashKeyFieldNumber = 1;
    private string ratingPeriodHashKey_ = "";
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RatingPeriodHashKey {
      get { return ratingPeriodHashKey_; }
      set {
        ratingPeriodHashKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RatingPeriodDeleteRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RatingPeriodDeleteRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RatingPeriodHashKey != other.RatingPeriodHashKey) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RatingPeriodHashKey.Length != 0) hash ^= RatingPeriodHashKey.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RatingPeriodHashKey.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(RatingPeriodHashKey);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RatingPeriodHashKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RatingPeriodHashKey);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RatingPeriodDeleteRequest other) {
      if (other == null) {
        return;
      }
      if (other.RatingPeriodHashKey.Length != 0) {
        RatingPeriodHashKey = other.RatingPeriodHashKey;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            RatingPeriodHashKey = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RatingPeriodDeleteResponse : pb::IMessage<RatingPeriodDeleteResponse> {
    private static readonly pb::MessageParser<RatingPeriodDeleteResponse> _parser = new pb::MessageParser<RatingPeriodDeleteResponse>(() => new RatingPeriodDeleteResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RatingPeriodDeleteResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Videa.SellerRatingNS.Service.Proto.Types.SellerRatingReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RatingPeriodDeleteResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RatingPeriodDeleteResponse(RatingPeriodDeleteResponse other) : this() {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RatingPeriodDeleteResponse Clone() {
      return new RatingPeriodDeleteResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RatingPeriodDeleteResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RatingPeriodDeleteResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RatingPeriodDeleteResponse other) {
      if (other == null) {
        return;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
        }
      }
    }

  }

  public sealed partial class SellableInventoryRatingDeleteRequest : pb::IMessage<SellableInventoryRatingDeleteRequest> {
    private static readonly pb::MessageParser<SellableInventoryRatingDeleteRequest> _parser = new pb::MessageParser<SellableInventoryRatingDeleteRequest>(() => new SellableInventoryRatingDeleteRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SellableInventoryRatingDeleteRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Videa.SellerRatingNS.Service.Proto.Types.SellerRatingReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SellableInventoryRatingDeleteRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SellableInventoryRatingDeleteRequest(SellableInventoryRatingDeleteRequest other) : this() {
      sellableInventoryRatingHashKey_ = other.sellableInventoryRatingHashKey_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SellableInventoryRatingDeleteRequest Clone() {
      return new SellableInventoryRatingDeleteRequest(this);
    }

    /// <summary>Field number for the "SellableInventoryRatingHashKey" field.</summary>
    public const int SellableInventoryRatingHashKeyFieldNumber = 1;
    private string sellableInventoryRatingHashKey_ = "";
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SellableInventoryRatingHashKey {
      get { return sellableInventoryRatingHashKey_; }
      set {
        sellableInventoryRatingHashKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SellableInventoryRatingDeleteRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SellableInventoryRatingDeleteRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SellableInventoryRatingHashKey != other.SellableInventoryRatingHashKey) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SellableInventoryRatingHashKey.Length != 0) hash ^= SellableInventoryRatingHashKey.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SellableInventoryRatingHashKey.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SellableInventoryRatingHashKey);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SellableInventoryRatingHashKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SellableInventoryRatingHashKey);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SellableInventoryRatingDeleteRequest other) {
      if (other == null) {
        return;
      }
      if (other.SellableInventoryRatingHashKey.Length != 0) {
        SellableInventoryRatingHashKey = other.SellableInventoryRatingHashKey;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            SellableInventoryRatingHashKey = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SellableInventoryRatingDeleteResponse : pb::IMessage<SellableInventoryRatingDeleteResponse> {
    private static readonly pb::MessageParser<SellableInventoryRatingDeleteResponse> _parser = new pb::MessageParser<SellableInventoryRatingDeleteResponse>(() => new SellableInventoryRatingDeleteResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SellableInventoryRatingDeleteResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Videa.SellerRatingNS.Service.Proto.Types.SellerRatingReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SellableInventoryRatingDeleteResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SellableInventoryRatingDeleteResponse(SellableInventoryRatingDeleteResponse other) : this() {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SellableInventoryRatingDeleteResponse Clone() {
      return new SellableInventoryRatingDeleteResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SellableInventoryRatingDeleteResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SellableInventoryRatingDeleteResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SellableInventoryRatingDeleteResponse other) {
      if (other == null) {
        return;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
        }
      }
    }

  }

  public sealed partial class RatingDemoAddUpdateRequest : pb::IMessage<RatingDemoAddUpdateRequest> {
    private static readonly pb::MessageParser<RatingDemoAddUpdateRequest> _parser = new pb::MessageParser<RatingDemoAddUpdateRequest>(() => new RatingDemoAddUpdateRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RatingDemoAddUpdateRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Videa.SellerRatingNS.Service.Proto.Types.SellerRatingReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RatingDemoAddUpdateRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RatingDemoAddUpdateRequest(RatingDemoAddUpdateRequest other) : this() {
      RatingDemo = other.ratingDemo_ != null ? other.RatingDemo.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RatingDemoAddUpdateRequest Clone() {
      return new RatingDemoAddUpdateRequest(this);
    }

    /// <summary>Field number for the "RatingDemo" field.</summary>
    public const int RatingDemoFieldNumber = 1;
    private global::Videa.SellerRatingNS.Service.Proto.Types.RatingDemo ratingDemo_;
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Videa.SellerRatingNS.Service.Proto.Types.RatingDemo RatingDemo {
      get { return ratingDemo_; }
      set {
        ratingDemo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RatingDemoAddUpdateRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RatingDemoAddUpdateRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(RatingDemo, other.RatingDemo)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ratingDemo_ != null) hash ^= RatingDemo.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ratingDemo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(RatingDemo);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ratingDemo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RatingDemo);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RatingDemoAddUpdateRequest other) {
      if (other == null) {
        return;
      }
      if (other.ratingDemo_ != null) {
        if (ratingDemo_ == null) {
          ratingDemo_ = new global::Videa.SellerRatingNS.Service.Proto.Types.RatingDemo();
        }
        RatingDemo.MergeFrom(other.RatingDemo);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (ratingDemo_ == null) {
              ratingDemo_ = new global::Videa.SellerRatingNS.Service.Proto.Types.RatingDemo();
            }
            input.ReadMessage(ratingDemo_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class RatingDemoAddUpdateResponse : pb::IMessage<RatingDemoAddUpdateResponse> {
    private static readonly pb::MessageParser<RatingDemoAddUpdateResponse> _parser = new pb::MessageParser<RatingDemoAddUpdateResponse>(() => new RatingDemoAddUpdateResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RatingDemoAddUpdateResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Videa.SellerRatingNS.Service.Proto.Types.SellerRatingReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RatingDemoAddUpdateResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RatingDemoAddUpdateResponse(RatingDemoAddUpdateResponse other) : this() {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RatingDemoAddUpdateResponse Clone() {
      return new RatingDemoAddUpdateResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RatingDemoAddUpdateResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RatingDemoAddUpdateResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RatingDemoAddUpdateResponse other) {
      if (other == null) {
        return;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
        }
      }
    }

  }

  public sealed partial class RatingPeriodAddUpdateRequest : pb::IMessage<RatingPeriodAddUpdateRequest> {
    private static readonly pb::MessageParser<RatingPeriodAddUpdateRequest> _parser = new pb::MessageParser<RatingPeriodAddUpdateRequest>(() => new RatingPeriodAddUpdateRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RatingPeriodAddUpdateRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Videa.SellerRatingNS.Service.Proto.Types.SellerRatingReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RatingPeriodAddUpdateRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RatingPeriodAddUpdateRequest(RatingPeriodAddUpdateRequest other) : this() {
      RatingPeriod = other.ratingPeriod_ != null ? other.RatingPeriod.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RatingPeriodAddUpdateRequest Clone() {
      return new RatingPeriodAddUpdateRequest(this);
    }

    /// <summary>Field number for the "RatingPeriod" field.</summary>
    public const int RatingPeriodFieldNumber = 1;
    private global::Videa.SellerRatingNS.Service.Proto.Types.RatingPeriod ratingPeriod_;
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Videa.SellerRatingNS.Service.Proto.Types.RatingPeriod RatingPeriod {
      get { return ratingPeriod_; }
      set {
        ratingPeriod_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RatingPeriodAddUpdateRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RatingPeriodAddUpdateRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(RatingPeriod, other.RatingPeriod)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ratingPeriod_ != null) hash ^= RatingPeriod.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ratingPeriod_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(RatingPeriod);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ratingPeriod_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RatingPeriod);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RatingPeriodAddUpdateRequest other) {
      if (other == null) {
        return;
      }
      if (other.ratingPeriod_ != null) {
        if (ratingPeriod_ == null) {
          ratingPeriod_ = new global::Videa.SellerRatingNS.Service.Proto.Types.RatingPeriod();
        }
        RatingPeriod.MergeFrom(other.RatingPeriod);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (ratingPeriod_ == null) {
              ratingPeriod_ = new global::Videa.SellerRatingNS.Service.Proto.Types.RatingPeriod();
            }
            input.ReadMessage(ratingPeriod_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class RatingPeriodAddUpdateResponse : pb::IMessage<RatingPeriodAddUpdateResponse> {
    private static readonly pb::MessageParser<RatingPeriodAddUpdateResponse> _parser = new pb::MessageParser<RatingPeriodAddUpdateResponse>(() => new RatingPeriodAddUpdateResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RatingPeriodAddUpdateResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Videa.SellerRatingNS.Service.Proto.Types.SellerRatingReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RatingPeriodAddUpdateResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RatingPeriodAddUpdateResponse(RatingPeriodAddUpdateResponse other) : this() {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RatingPeriodAddUpdateResponse Clone() {
      return new RatingPeriodAddUpdateResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RatingPeriodAddUpdateResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RatingPeriodAddUpdateResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RatingPeriodAddUpdateResponse other) {
      if (other == null) {
        return;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
        }
      }
    }

  }

  public sealed partial class SellableInventoryRatingAddUpdateRequest : pb::IMessage<SellableInventoryRatingAddUpdateRequest> {
    private static readonly pb::MessageParser<SellableInventoryRatingAddUpdateRequest> _parser = new pb::MessageParser<SellableInventoryRatingAddUpdateRequest>(() => new SellableInventoryRatingAddUpdateRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SellableInventoryRatingAddUpdateRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Videa.SellerRatingNS.Service.Proto.Types.SellerRatingReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SellableInventoryRatingAddUpdateRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SellableInventoryRatingAddUpdateRequest(SellableInventoryRatingAddUpdateRequest other) : this() {
      SellableInventoryRating = other.sellableInventoryRating_ != null ? other.SellableInventoryRating.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SellableInventoryRatingAddUpdateRequest Clone() {
      return new SellableInventoryRatingAddUpdateRequest(this);
    }

    /// <summary>Field number for the "SellableInventoryRating" field.</summary>
    public const int SellableInventoryRatingFieldNumber = 1;
    private global::Videa.SellerRatingNS.Service.Proto.Types.SellableInventoryRating sellableInventoryRating_;
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Videa.SellerRatingNS.Service.Proto.Types.SellableInventoryRating SellableInventoryRating {
      get { return sellableInventoryRating_; }
      set {
        sellableInventoryRating_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SellableInventoryRatingAddUpdateRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SellableInventoryRatingAddUpdateRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(SellableInventoryRating, other.SellableInventoryRating)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (sellableInventoryRating_ != null) hash ^= SellableInventoryRating.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (sellableInventoryRating_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(SellableInventoryRating);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (sellableInventoryRating_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SellableInventoryRating);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SellableInventoryRatingAddUpdateRequest other) {
      if (other == null) {
        return;
      }
      if (other.sellableInventoryRating_ != null) {
        if (sellableInventoryRating_ == null) {
          sellableInventoryRating_ = new global::Videa.SellerRatingNS.Service.Proto.Types.SellableInventoryRating();
        }
        SellableInventoryRating.MergeFrom(other.SellableInventoryRating);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (sellableInventoryRating_ == null) {
              sellableInventoryRating_ = new global::Videa.SellerRatingNS.Service.Proto.Types.SellableInventoryRating();
            }
            input.ReadMessage(sellableInventoryRating_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SellableInventoryRatingAddUpdateResponse : pb::IMessage<SellableInventoryRatingAddUpdateResponse> {
    private static readonly pb::MessageParser<SellableInventoryRatingAddUpdateResponse> _parser = new pb::MessageParser<SellableInventoryRatingAddUpdateResponse>(() => new SellableInventoryRatingAddUpdateResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SellableInventoryRatingAddUpdateResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Videa.SellerRatingNS.Service.Proto.Types.SellerRatingReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SellableInventoryRatingAddUpdateResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SellableInventoryRatingAddUpdateResponse(SellableInventoryRatingAddUpdateResponse other) : this() {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SellableInventoryRatingAddUpdateResponse Clone() {
      return new SellableInventoryRatingAddUpdateResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SellableInventoryRatingAddUpdateResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SellableInventoryRatingAddUpdateResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SellableInventoryRatingAddUpdateResponse other) {
      if (other == null) {
        return;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
        }
      }
    }

  }

  public sealed partial class GetSellerRatingsByInventoryKeysRequest : pb::IMessage<GetSellerRatingsByInventoryKeysRequest> {
    private static readonly pb::MessageParser<GetSellerRatingsByInventoryKeysRequest> _parser = new pb::MessageParser<GetSellerRatingsByInventoryKeysRequest>(() => new GetSellerRatingsByInventoryKeysRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetSellerRatingsByInventoryKeysRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Videa.SellerRatingNS.Service.Proto.Types.SellerRatingReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetSellerRatingsByInventoryKeysRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetSellerRatingsByInventoryKeysRequest(GetSellerRatingsByInventoryKeysRequest other) : this() {
      sellableInventoryList_ = other.sellableInventoryList_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetSellerRatingsByInventoryKeysRequest Clone() {
      return new GetSellerRatingsByInventoryKeysRequest(this);
    }

    /// <summary>Field number for the "SellableInventoryList" field.</summary>
    public const int SellableInventoryListFieldNumber = 1;
    private string sellableInventoryList_ = "";
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SellableInventoryList {
      get { return sellableInventoryList_; }
      set {
        sellableInventoryList_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetSellerRatingsByInventoryKeysRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetSellerRatingsByInventoryKeysRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SellableInventoryList != other.SellableInventoryList) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SellableInventoryList.Length != 0) hash ^= SellableInventoryList.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SellableInventoryList.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SellableInventoryList);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SellableInventoryList.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SellableInventoryList);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetSellerRatingsByInventoryKeysRequest other) {
      if (other == null) {
        return;
      }
      if (other.SellableInventoryList.Length != 0) {
        SellableInventoryList = other.SellableInventoryList;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            SellableInventoryList = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetSellerRatingsByInventoryKeysResponse : pb::IMessage<GetSellerRatingsByInventoryKeysResponse> {
    private static readonly pb::MessageParser<GetSellerRatingsByInventoryKeysResponse> _parser = new pb::MessageParser<GetSellerRatingsByInventoryKeysResponse>(() => new GetSellerRatingsByInventoryKeysResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetSellerRatingsByInventoryKeysResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Videa.SellerRatingNS.Service.Proto.Types.SellerRatingReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetSellerRatingsByInventoryKeysResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetSellerRatingsByInventoryKeysResponse(GetSellerRatingsByInventoryKeysResponse other) : this() {
      rating_ = other.rating_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetSellerRatingsByInventoryKeysResponse Clone() {
      return new GetSellerRatingsByInventoryKeysResponse(this);
    }

    /// <summary>Field number for the "Rating" field.</summary>
    public const int RatingFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Videa.SellerRatingNS.Service.Proto.Types.Rating> _repeated_rating_codec
        = pb::FieldCodec.ForMessage(10, global::Videa.SellerRatingNS.Service.Proto.Types.Rating.Parser);
    private readonly pbc::RepeatedField<global::Videa.SellerRatingNS.Service.Proto.Types.Rating> rating_ = new pbc::RepeatedField<global::Videa.SellerRatingNS.Service.Proto.Types.Rating>();
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Videa.SellerRatingNS.Service.Proto.Types.Rating> Rating {
      get { return rating_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetSellerRatingsByInventoryKeysResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetSellerRatingsByInventoryKeysResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!rating_.Equals(other.rating_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= rating_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      rating_.WriteTo(output, _repeated_rating_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += rating_.CalculateSize(_repeated_rating_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetSellerRatingsByInventoryKeysResponse other) {
      if (other == null) {
        return;
      }
      rating_.Add(other.rating_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            rating_.AddEntriesFrom(input, _repeated_rating_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetSellerRatingsByRatingKeysRequest : pb::IMessage<GetSellerRatingsByRatingKeysRequest> {
    private static readonly pb::MessageParser<GetSellerRatingsByRatingKeysRequest> _parser = new pb::MessageParser<GetSellerRatingsByRatingKeysRequest>(() => new GetSellerRatingsByRatingKeysRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetSellerRatingsByRatingKeysRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Videa.SellerRatingNS.Service.Proto.Types.SellerRatingReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetSellerRatingsByRatingKeysRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetSellerRatingsByRatingKeysRequest(GetSellerRatingsByRatingKeysRequest other) : this() {
      sellableInventoryRatingList_ = other.sellableInventoryRatingList_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetSellerRatingsByRatingKeysRequest Clone() {
      return new GetSellerRatingsByRatingKeysRequest(this);
    }

    /// <summary>Field number for the "SellableInventoryRatingList" field.</summary>
    public const int SellableInventoryRatingListFieldNumber = 1;
    private string sellableInventoryRatingList_ = "";
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SellableInventoryRatingList {
      get { return sellableInventoryRatingList_; }
      set {
        sellableInventoryRatingList_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetSellerRatingsByRatingKeysRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetSellerRatingsByRatingKeysRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SellableInventoryRatingList != other.SellableInventoryRatingList) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SellableInventoryRatingList.Length != 0) hash ^= SellableInventoryRatingList.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SellableInventoryRatingList.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SellableInventoryRatingList);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SellableInventoryRatingList.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SellableInventoryRatingList);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetSellerRatingsByRatingKeysRequest other) {
      if (other == null) {
        return;
      }
      if (other.SellableInventoryRatingList.Length != 0) {
        SellableInventoryRatingList = other.SellableInventoryRatingList;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            SellableInventoryRatingList = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetSellerRatingsByRatingKeysResponse : pb::IMessage<GetSellerRatingsByRatingKeysResponse> {
    private static readonly pb::MessageParser<GetSellerRatingsByRatingKeysResponse> _parser = new pb::MessageParser<GetSellerRatingsByRatingKeysResponse>(() => new GetSellerRatingsByRatingKeysResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetSellerRatingsByRatingKeysResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Videa.SellerRatingNS.Service.Proto.Types.SellerRatingReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetSellerRatingsByRatingKeysResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetSellerRatingsByRatingKeysResponse(GetSellerRatingsByRatingKeysResponse other) : this() {
      rating_ = other.rating_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetSellerRatingsByRatingKeysResponse Clone() {
      return new GetSellerRatingsByRatingKeysResponse(this);
    }

    /// <summary>Field number for the "Rating" field.</summary>
    public const int RatingFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Videa.SellerRatingNS.Service.Proto.Types.Rating> _repeated_rating_codec
        = pb::FieldCodec.ForMessage(10, global::Videa.SellerRatingNS.Service.Proto.Types.Rating.Parser);
    private readonly pbc::RepeatedField<global::Videa.SellerRatingNS.Service.Proto.Types.Rating> rating_ = new pbc::RepeatedField<global::Videa.SellerRatingNS.Service.Proto.Types.Rating>();
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Videa.SellerRatingNS.Service.Proto.Types.Rating> Rating {
      get { return rating_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetSellerRatingsByRatingKeysResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetSellerRatingsByRatingKeysResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!rating_.Equals(other.rating_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= rating_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      rating_.WriteTo(output, _repeated_rating_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += rating_.CalculateSize(_repeated_rating_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetSellerRatingsByRatingKeysResponse other) {
      if (other == null) {
        return;
      }
      rating_.Add(other.rating_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            rating_.AddEntriesFrom(input, _repeated_rating_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class BulkStoreRequest : pb::IMessage<BulkStoreRequest> {
    private static readonly pb::MessageParser<BulkStoreRequest> _parser = new pb::MessageParser<BulkStoreRequest>(() => new BulkStoreRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BulkStoreRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Videa.SellerRatingNS.Service.Proto.Types.SellerRatingReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BulkStoreRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BulkStoreRequest(BulkStoreRequest other) : this() {
      ratingDemo_ = other.ratingDemo_.Clone();
      ratingPeriod_ = other.ratingPeriod_.Clone();
      sellableInventoryRating_ = other.sellableInventoryRating_.Clone();
      rating_ = other.rating_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BulkStoreRequest Clone() {
      return new BulkStoreRequest(this);
    }

    /// <summary>Field number for the "RatingDemo" field.</summary>
    public const int RatingDemoFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Videa.SellerRatingNS.Service.Proto.Types.RatingDemo> _repeated_ratingDemo_codec
        = pb::FieldCodec.ForMessage(10, global::Videa.SellerRatingNS.Service.Proto.Types.RatingDemo.Parser);
    private readonly pbc::RepeatedField<global::Videa.SellerRatingNS.Service.Proto.Types.RatingDemo> ratingDemo_ = new pbc::RepeatedField<global::Videa.SellerRatingNS.Service.Proto.Types.RatingDemo>();
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Videa.SellerRatingNS.Service.Proto.Types.RatingDemo> RatingDemo {
      get { return ratingDemo_; }
    }

    /// <summary>Field number for the "RatingPeriod" field.</summary>
    public const int RatingPeriodFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Videa.SellerRatingNS.Service.Proto.Types.RatingPeriod> _repeated_ratingPeriod_codec
        = pb::FieldCodec.ForMessage(18, global::Videa.SellerRatingNS.Service.Proto.Types.RatingPeriod.Parser);
    private readonly pbc::RepeatedField<global::Videa.SellerRatingNS.Service.Proto.Types.RatingPeriod> ratingPeriod_ = new pbc::RepeatedField<global::Videa.SellerRatingNS.Service.Proto.Types.RatingPeriod>();
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Videa.SellerRatingNS.Service.Proto.Types.RatingPeriod> RatingPeriod {
      get { return ratingPeriod_; }
    }

    /// <summary>Field number for the "SellableInventoryRating" field.</summary>
    public const int SellableInventoryRatingFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Videa.SellerRatingNS.Service.Proto.Types.SellableInventoryRating> _repeated_sellableInventoryRating_codec
        = pb::FieldCodec.ForMessage(26, global::Videa.SellerRatingNS.Service.Proto.Types.SellableInventoryRating.Parser);
    private readonly pbc::RepeatedField<global::Videa.SellerRatingNS.Service.Proto.Types.SellableInventoryRating> sellableInventoryRating_ = new pbc::RepeatedField<global::Videa.SellerRatingNS.Service.Proto.Types.SellableInventoryRating>();
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Videa.SellerRatingNS.Service.Proto.Types.SellableInventoryRating> SellableInventoryRating {
      get { return sellableInventoryRating_; }
    }

    /// <summary>Field number for the "Rating" field.</summary>
    public const int RatingFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Videa.SellerRatingNS.Service.Proto.Types.Rating> _repeated_rating_codec
        = pb::FieldCodec.ForMessage(34, global::Videa.SellerRatingNS.Service.Proto.Types.Rating.Parser);
    private readonly pbc::RepeatedField<global::Videa.SellerRatingNS.Service.Proto.Types.Rating> rating_ = new pbc::RepeatedField<global::Videa.SellerRatingNS.Service.Proto.Types.Rating>();
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Videa.SellerRatingNS.Service.Proto.Types.Rating> Rating {
      get { return rating_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BulkStoreRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BulkStoreRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!ratingDemo_.Equals(other.ratingDemo_)) return false;
      if(!ratingPeriod_.Equals(other.ratingPeriod_)) return false;
      if(!sellableInventoryRating_.Equals(other.sellableInventoryRating_)) return false;
      if(!rating_.Equals(other.rating_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= ratingDemo_.GetHashCode();
      hash ^= ratingPeriod_.GetHashCode();
      hash ^= sellableInventoryRating_.GetHashCode();
      hash ^= rating_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      ratingDemo_.WriteTo(output, _repeated_ratingDemo_codec);
      ratingPeriod_.WriteTo(output, _repeated_ratingPeriod_codec);
      sellableInventoryRating_.WriteTo(output, _repeated_sellableInventoryRating_codec);
      rating_.WriteTo(output, _repeated_rating_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += ratingDemo_.CalculateSize(_repeated_ratingDemo_codec);
      size += ratingPeriod_.CalculateSize(_repeated_ratingPeriod_codec);
      size += sellableInventoryRating_.CalculateSize(_repeated_sellableInventoryRating_codec);
      size += rating_.CalculateSize(_repeated_rating_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BulkStoreRequest other) {
      if (other == null) {
        return;
      }
      ratingDemo_.Add(other.ratingDemo_);
      ratingPeriod_.Add(other.ratingPeriod_);
      sellableInventoryRating_.Add(other.sellableInventoryRating_);
      rating_.Add(other.rating_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            ratingDemo_.AddEntriesFrom(input, _repeated_ratingDemo_codec);
            break;
          }
          case 18: {
            ratingPeriod_.AddEntriesFrom(input, _repeated_ratingPeriod_codec);
            break;
          }
          case 26: {
            sellableInventoryRating_.AddEntriesFrom(input, _repeated_sellableInventoryRating_codec);
            break;
          }
          case 34: {
            rating_.AddEntriesFrom(input, _repeated_rating_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class BulkStoreResponse : pb::IMessage<BulkStoreResponse> {
    private static readonly pb::MessageParser<BulkStoreResponse> _parser = new pb::MessageParser<BulkStoreResponse>(() => new BulkStoreResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BulkStoreResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Videa.SellerRatingNS.Service.Proto.Types.SellerRatingReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BulkStoreResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BulkStoreResponse(BulkStoreResponse other) : this() {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BulkStoreResponse Clone() {
      return new BulkStoreResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BulkStoreResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BulkStoreResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BulkStoreResponse other) {
      if (other == null) {
        return;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code

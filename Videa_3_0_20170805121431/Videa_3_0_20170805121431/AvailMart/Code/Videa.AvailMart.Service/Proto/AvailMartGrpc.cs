// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: AvailMart.proto
#region Designer generated code

using System;
using System.Threading;
using System.Threading.Tasks;
using grpc = global::Grpc.Core;

namespace Videa.AvailMartNS.Service.Proto.Types {
  public static partial class AvailMartService
  {
    static readonly string __ServiceName = "AvailMartService";

    static readonly grpc::Marshaller<global::Videa.AvailMartNS.Service.Proto.Types.AvailMartDeleteRequest> __Marshaller_AvailMartDeleteRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Videa.AvailMartNS.Service.Proto.Types.AvailMartDeleteRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Videa.AvailMartNS.Service.Proto.Types.AvailMartDeleteResponse> __Marshaller_AvailMartDeleteResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Videa.AvailMartNS.Service.Proto.Types.AvailMartDeleteResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Videa.AvailMartNS.Service.Proto.Types.AvailListDeleteRequest> __Marshaller_AvailListDeleteRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Videa.AvailMartNS.Service.Proto.Types.AvailListDeleteRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Videa.AvailMartNS.Service.Proto.Types.AvailListDeleteResponse> __Marshaller_AvailListDeleteResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Videa.AvailMartNS.Service.Proto.Types.AvailListDeleteResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Videa.AvailMartNS.Service.Proto.Types.AvailLineWithDetailedPeriodsDeleteRequest> __Marshaller_AvailLineWithDetailedPeriodsDeleteRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Videa.AvailMartNS.Service.Proto.Types.AvailLineWithDetailedPeriodsDeleteRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Videa.AvailMartNS.Service.Proto.Types.AvailLineWithDetailedPeriodsDeleteResponse> __Marshaller_AvailLineWithDetailedPeriodsDeleteResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Videa.AvailMartNS.Service.Proto.Types.AvailLineWithDetailedPeriodsDeleteResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Videa.AvailMartNS.Service.Proto.Types.DetailedPeriodDeleteRequest> __Marshaller_DetailedPeriodDeleteRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Videa.AvailMartNS.Service.Proto.Types.DetailedPeriodDeleteRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Videa.AvailMartNS.Service.Proto.Types.DetailedPeriodDeleteResponse> __Marshaller_DetailedPeriodDeleteResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Videa.AvailMartNS.Service.Proto.Types.DetailedPeriodDeleteResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Videa.AvailMartNS.Service.Proto.Types.AvailMartAddUpdateRequest> __Marshaller_AvailMartAddUpdateRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Videa.AvailMartNS.Service.Proto.Types.AvailMartAddUpdateRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Videa.AvailMartNS.Service.Proto.Types.AvailMartAddUpdateResponse> __Marshaller_AvailMartAddUpdateResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Videa.AvailMartNS.Service.Proto.Types.AvailMartAddUpdateResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Videa.AvailMartNS.Service.Proto.Types.AvailListAddUpdateRequest> __Marshaller_AvailListAddUpdateRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Videa.AvailMartNS.Service.Proto.Types.AvailListAddUpdateRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Videa.AvailMartNS.Service.Proto.Types.AvailListAddUpdateResponse> __Marshaller_AvailListAddUpdateResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Videa.AvailMartNS.Service.Proto.Types.AvailListAddUpdateResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Videa.AvailMartNS.Service.Proto.Types.AvailLineWithDetailedPeriodsAddUpdateRequest> __Marshaller_AvailLineWithDetailedPeriodsAddUpdateRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Videa.AvailMartNS.Service.Proto.Types.AvailLineWithDetailedPeriodsAddUpdateRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Videa.AvailMartNS.Service.Proto.Types.AvailLineWithDetailedPeriodsAddUpdateResponse> __Marshaller_AvailLineWithDetailedPeriodsAddUpdateResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Videa.AvailMartNS.Service.Proto.Types.AvailLineWithDetailedPeriodsAddUpdateResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Videa.AvailMartNS.Service.Proto.Types.DetailedPeriodAddUpdateRequest> __Marshaller_DetailedPeriodAddUpdateRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Videa.AvailMartNS.Service.Proto.Types.DetailedPeriodAddUpdateRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Videa.AvailMartNS.Service.Proto.Types.DetailedPeriodAddUpdateResponse> __Marshaller_DetailedPeriodAddUpdateResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Videa.AvailMartNS.Service.Proto.Types.DetailedPeriodAddUpdateResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Videa.AvailMartNS.Service.Proto.Types.GetAvailMartRequest> __Marshaller_GetAvailMartRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Videa.AvailMartNS.Service.Proto.Types.GetAvailMartRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Videa.AvailMartNS.Service.Proto.Types.GetAvailMartResponse> __Marshaller_GetAvailMartResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Videa.AvailMartNS.Service.Proto.Types.GetAvailMartResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Videa.AvailMartNS.Service.Proto.Types.BulkStoreRequest> __Marshaller_BulkStoreRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Videa.AvailMartNS.Service.Proto.Types.BulkStoreRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Videa.AvailMartNS.Service.Proto.Types.BulkStoreResponse> __Marshaller_BulkStoreResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Videa.AvailMartNS.Service.Proto.Types.BulkStoreResponse.Parser.ParseFrom);

    static readonly grpc::Method<global::Videa.AvailMartNS.Service.Proto.Types.AvailMartDeleteRequest, global::Videa.AvailMartNS.Service.Proto.Types.AvailMartDeleteResponse> __Method_AvailMartDelete = new grpc::Method<global::Videa.AvailMartNS.Service.Proto.Types.AvailMartDeleteRequest, global::Videa.AvailMartNS.Service.Proto.Types.AvailMartDeleteResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AvailMartDelete",
        __Marshaller_AvailMartDeleteRequest,
        __Marshaller_AvailMartDeleteResponse);

    static readonly grpc::Method<global::Videa.AvailMartNS.Service.Proto.Types.AvailListDeleteRequest, global::Videa.AvailMartNS.Service.Proto.Types.AvailListDeleteResponse> __Method_AvailListDelete = new grpc::Method<global::Videa.AvailMartNS.Service.Proto.Types.AvailListDeleteRequest, global::Videa.AvailMartNS.Service.Proto.Types.AvailListDeleteResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AvailListDelete",
        __Marshaller_AvailListDeleteRequest,
        __Marshaller_AvailListDeleteResponse);

    static readonly grpc::Method<global::Videa.AvailMartNS.Service.Proto.Types.AvailLineWithDetailedPeriodsDeleteRequest, global::Videa.AvailMartNS.Service.Proto.Types.AvailLineWithDetailedPeriodsDeleteResponse> __Method_AvailLineWithDetailedPeriodsDelete = new grpc::Method<global::Videa.AvailMartNS.Service.Proto.Types.AvailLineWithDetailedPeriodsDeleteRequest, global::Videa.AvailMartNS.Service.Proto.Types.AvailLineWithDetailedPeriodsDeleteResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AvailLineWithDetailedPeriodsDelete",
        __Marshaller_AvailLineWithDetailedPeriodsDeleteRequest,
        __Marshaller_AvailLineWithDetailedPeriodsDeleteResponse);

    static readonly grpc::Method<global::Videa.AvailMartNS.Service.Proto.Types.DetailedPeriodDeleteRequest, global::Videa.AvailMartNS.Service.Proto.Types.DetailedPeriodDeleteResponse> __Method_DetailedPeriodDelete = new grpc::Method<global::Videa.AvailMartNS.Service.Proto.Types.DetailedPeriodDeleteRequest, global::Videa.AvailMartNS.Service.Proto.Types.DetailedPeriodDeleteResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DetailedPeriodDelete",
        __Marshaller_DetailedPeriodDeleteRequest,
        __Marshaller_DetailedPeriodDeleteResponse);

    static readonly grpc::Method<global::Videa.AvailMartNS.Service.Proto.Types.AvailMartAddUpdateRequest, global::Videa.AvailMartNS.Service.Proto.Types.AvailMartAddUpdateResponse> __Method_AvailMartAddUpdate = new grpc::Method<global::Videa.AvailMartNS.Service.Proto.Types.AvailMartAddUpdateRequest, global::Videa.AvailMartNS.Service.Proto.Types.AvailMartAddUpdateResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AvailMartAddUpdate",
        __Marshaller_AvailMartAddUpdateRequest,
        __Marshaller_AvailMartAddUpdateResponse);

    static readonly grpc::Method<global::Videa.AvailMartNS.Service.Proto.Types.AvailListAddUpdateRequest, global::Videa.AvailMartNS.Service.Proto.Types.AvailListAddUpdateResponse> __Method_AvailListAddUpdate = new grpc::Method<global::Videa.AvailMartNS.Service.Proto.Types.AvailListAddUpdateRequest, global::Videa.AvailMartNS.Service.Proto.Types.AvailListAddUpdateResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AvailListAddUpdate",
        __Marshaller_AvailListAddUpdateRequest,
        __Marshaller_AvailListAddUpdateResponse);

    static readonly grpc::Method<global::Videa.AvailMartNS.Service.Proto.Types.AvailLineWithDetailedPeriodsAddUpdateRequest, global::Videa.AvailMartNS.Service.Proto.Types.AvailLineWithDetailedPeriodsAddUpdateResponse> __Method_AvailLineWithDetailedPeriodsAddUpdate = new grpc::Method<global::Videa.AvailMartNS.Service.Proto.Types.AvailLineWithDetailedPeriodsAddUpdateRequest, global::Videa.AvailMartNS.Service.Proto.Types.AvailLineWithDetailedPeriodsAddUpdateResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AvailLineWithDetailedPeriodsAddUpdate",
        __Marshaller_AvailLineWithDetailedPeriodsAddUpdateRequest,
        __Marshaller_AvailLineWithDetailedPeriodsAddUpdateResponse);

    static readonly grpc::Method<global::Videa.AvailMartNS.Service.Proto.Types.DetailedPeriodAddUpdateRequest, global::Videa.AvailMartNS.Service.Proto.Types.DetailedPeriodAddUpdateResponse> __Method_DetailedPeriodAddUpdate = new grpc::Method<global::Videa.AvailMartNS.Service.Proto.Types.DetailedPeriodAddUpdateRequest, global::Videa.AvailMartNS.Service.Proto.Types.DetailedPeriodAddUpdateResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DetailedPeriodAddUpdate",
        __Marshaller_DetailedPeriodAddUpdateRequest,
        __Marshaller_DetailedPeriodAddUpdateResponse);

    static readonly grpc::Method<global::Videa.AvailMartNS.Service.Proto.Types.GetAvailMartRequest, global::Videa.AvailMartNS.Service.Proto.Types.GetAvailMartResponse> __Method_GetAvailMart = new grpc::Method<global::Videa.AvailMartNS.Service.Proto.Types.GetAvailMartRequest, global::Videa.AvailMartNS.Service.Proto.Types.GetAvailMartResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAvailMart",
        __Marshaller_GetAvailMartRequest,
        __Marshaller_GetAvailMartResponse);

    static readonly grpc::Method<global::Videa.AvailMartNS.Service.Proto.Types.BulkStoreRequest, global::Videa.AvailMartNS.Service.Proto.Types.BulkStoreResponse> __Method_BulkStore = new grpc::Method<global::Videa.AvailMartNS.Service.Proto.Types.BulkStoreRequest, global::Videa.AvailMartNS.Service.Proto.Types.BulkStoreResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "BulkStore",
        __Marshaller_BulkStoreRequest,
        __Marshaller_BulkStoreResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Videa.AvailMartNS.Service.Proto.Types.AvailMartReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of AvailMartService</summary>
    public abstract partial class AvailMartServiceBase
    {
      public virtual global::System.Threading.Tasks.Task<global::Videa.AvailMartNS.Service.Proto.Types.AvailMartDeleteResponse> AvailMartDelete(global::Videa.AvailMartNS.Service.Proto.Types.AvailMartDeleteRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Videa.AvailMartNS.Service.Proto.Types.AvailListDeleteResponse> AvailListDelete(global::Videa.AvailMartNS.Service.Proto.Types.AvailListDeleteRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Videa.AvailMartNS.Service.Proto.Types.AvailLineWithDetailedPeriodsDeleteResponse> AvailLineWithDetailedPeriodsDelete(global::Videa.AvailMartNS.Service.Proto.Types.AvailLineWithDetailedPeriodsDeleteRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Videa.AvailMartNS.Service.Proto.Types.DetailedPeriodDeleteResponse> DetailedPeriodDelete(global::Videa.AvailMartNS.Service.Proto.Types.DetailedPeriodDeleteRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Videa.AvailMartNS.Service.Proto.Types.AvailMartAddUpdateResponse> AvailMartAddUpdate(global::Videa.AvailMartNS.Service.Proto.Types.AvailMartAddUpdateRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Videa.AvailMartNS.Service.Proto.Types.AvailListAddUpdateResponse> AvailListAddUpdate(global::Videa.AvailMartNS.Service.Proto.Types.AvailListAddUpdateRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Videa.AvailMartNS.Service.Proto.Types.AvailLineWithDetailedPeriodsAddUpdateResponse> AvailLineWithDetailedPeriodsAddUpdate(global::Videa.AvailMartNS.Service.Proto.Types.AvailLineWithDetailedPeriodsAddUpdateRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Videa.AvailMartNS.Service.Proto.Types.DetailedPeriodAddUpdateResponse> DetailedPeriodAddUpdate(global::Videa.AvailMartNS.Service.Proto.Types.DetailedPeriodAddUpdateRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Videa.AvailMartNS.Service.Proto.Types.GetAvailMartResponse> GetAvailMart(global::Videa.AvailMartNS.Service.Proto.Types.GetAvailMartRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Videa.AvailMartNS.Service.Proto.Types.BulkStoreResponse> BulkStore(global::Videa.AvailMartNS.Service.Proto.Types.BulkStoreRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for AvailMartService</summary>
    public partial class AvailMartServiceClient : grpc::ClientBase<AvailMartServiceClient>
    {
      /// <summary>Creates a new client for AvailMartService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public AvailMartServiceClient(grpc::Channel channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for AvailMartService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public AvailMartServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected AvailMartServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected AvailMartServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::Videa.AvailMartNS.Service.Proto.Types.AvailMartDeleteResponse AvailMartDelete(global::Videa.AvailMartNS.Service.Proto.Types.AvailMartDeleteRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return AvailMartDelete(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Videa.AvailMartNS.Service.Proto.Types.AvailMartDeleteResponse AvailMartDelete(global::Videa.AvailMartNS.Service.Proto.Types.AvailMartDeleteRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AvailMartDelete, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Videa.AvailMartNS.Service.Proto.Types.AvailMartDeleteResponse> AvailMartDeleteAsync(global::Videa.AvailMartNS.Service.Proto.Types.AvailMartDeleteRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return AvailMartDeleteAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Videa.AvailMartNS.Service.Proto.Types.AvailMartDeleteResponse> AvailMartDeleteAsync(global::Videa.AvailMartNS.Service.Proto.Types.AvailMartDeleteRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AvailMartDelete, null, options, request);
      }
      public virtual global::Videa.AvailMartNS.Service.Proto.Types.AvailListDeleteResponse AvailListDelete(global::Videa.AvailMartNS.Service.Proto.Types.AvailListDeleteRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return AvailListDelete(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Videa.AvailMartNS.Service.Proto.Types.AvailListDeleteResponse AvailListDelete(global::Videa.AvailMartNS.Service.Proto.Types.AvailListDeleteRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AvailListDelete, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Videa.AvailMartNS.Service.Proto.Types.AvailListDeleteResponse> AvailListDeleteAsync(global::Videa.AvailMartNS.Service.Proto.Types.AvailListDeleteRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return AvailListDeleteAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Videa.AvailMartNS.Service.Proto.Types.AvailListDeleteResponse> AvailListDeleteAsync(global::Videa.AvailMartNS.Service.Proto.Types.AvailListDeleteRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AvailListDelete, null, options, request);
      }
      public virtual global::Videa.AvailMartNS.Service.Proto.Types.AvailLineWithDetailedPeriodsDeleteResponse AvailLineWithDetailedPeriodsDelete(global::Videa.AvailMartNS.Service.Proto.Types.AvailLineWithDetailedPeriodsDeleteRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return AvailLineWithDetailedPeriodsDelete(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Videa.AvailMartNS.Service.Proto.Types.AvailLineWithDetailedPeriodsDeleteResponse AvailLineWithDetailedPeriodsDelete(global::Videa.AvailMartNS.Service.Proto.Types.AvailLineWithDetailedPeriodsDeleteRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AvailLineWithDetailedPeriodsDelete, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Videa.AvailMartNS.Service.Proto.Types.AvailLineWithDetailedPeriodsDeleteResponse> AvailLineWithDetailedPeriodsDeleteAsync(global::Videa.AvailMartNS.Service.Proto.Types.AvailLineWithDetailedPeriodsDeleteRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return AvailLineWithDetailedPeriodsDeleteAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Videa.AvailMartNS.Service.Proto.Types.AvailLineWithDetailedPeriodsDeleteResponse> AvailLineWithDetailedPeriodsDeleteAsync(global::Videa.AvailMartNS.Service.Proto.Types.AvailLineWithDetailedPeriodsDeleteRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AvailLineWithDetailedPeriodsDelete, null, options, request);
      }
      public virtual global::Videa.AvailMartNS.Service.Proto.Types.DetailedPeriodDeleteResponse DetailedPeriodDelete(global::Videa.AvailMartNS.Service.Proto.Types.DetailedPeriodDeleteRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return DetailedPeriodDelete(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Videa.AvailMartNS.Service.Proto.Types.DetailedPeriodDeleteResponse DetailedPeriodDelete(global::Videa.AvailMartNS.Service.Proto.Types.DetailedPeriodDeleteRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DetailedPeriodDelete, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Videa.AvailMartNS.Service.Proto.Types.DetailedPeriodDeleteResponse> DetailedPeriodDeleteAsync(global::Videa.AvailMartNS.Service.Proto.Types.DetailedPeriodDeleteRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return DetailedPeriodDeleteAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Videa.AvailMartNS.Service.Proto.Types.DetailedPeriodDeleteResponse> DetailedPeriodDeleteAsync(global::Videa.AvailMartNS.Service.Proto.Types.DetailedPeriodDeleteRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DetailedPeriodDelete, null, options, request);
      }
      public virtual global::Videa.AvailMartNS.Service.Proto.Types.AvailMartAddUpdateResponse AvailMartAddUpdate(global::Videa.AvailMartNS.Service.Proto.Types.AvailMartAddUpdateRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return AvailMartAddUpdate(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Videa.AvailMartNS.Service.Proto.Types.AvailMartAddUpdateResponse AvailMartAddUpdate(global::Videa.AvailMartNS.Service.Proto.Types.AvailMartAddUpdateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AvailMartAddUpdate, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Videa.AvailMartNS.Service.Proto.Types.AvailMartAddUpdateResponse> AvailMartAddUpdateAsync(global::Videa.AvailMartNS.Service.Proto.Types.AvailMartAddUpdateRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return AvailMartAddUpdateAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Videa.AvailMartNS.Service.Proto.Types.AvailMartAddUpdateResponse> AvailMartAddUpdateAsync(global::Videa.AvailMartNS.Service.Proto.Types.AvailMartAddUpdateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AvailMartAddUpdate, null, options, request);
      }
      public virtual global::Videa.AvailMartNS.Service.Proto.Types.AvailListAddUpdateResponse AvailListAddUpdate(global::Videa.AvailMartNS.Service.Proto.Types.AvailListAddUpdateRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return AvailListAddUpdate(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Videa.AvailMartNS.Service.Proto.Types.AvailListAddUpdateResponse AvailListAddUpdate(global::Videa.AvailMartNS.Service.Proto.Types.AvailListAddUpdateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AvailListAddUpdate, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Videa.AvailMartNS.Service.Proto.Types.AvailListAddUpdateResponse> AvailListAddUpdateAsync(global::Videa.AvailMartNS.Service.Proto.Types.AvailListAddUpdateRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return AvailListAddUpdateAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Videa.AvailMartNS.Service.Proto.Types.AvailListAddUpdateResponse> AvailListAddUpdateAsync(global::Videa.AvailMartNS.Service.Proto.Types.AvailListAddUpdateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AvailListAddUpdate, null, options, request);
      }
      public virtual global::Videa.AvailMartNS.Service.Proto.Types.AvailLineWithDetailedPeriodsAddUpdateResponse AvailLineWithDetailedPeriodsAddUpdate(global::Videa.AvailMartNS.Service.Proto.Types.AvailLineWithDetailedPeriodsAddUpdateRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return AvailLineWithDetailedPeriodsAddUpdate(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Videa.AvailMartNS.Service.Proto.Types.AvailLineWithDetailedPeriodsAddUpdateResponse AvailLineWithDetailedPeriodsAddUpdate(global::Videa.AvailMartNS.Service.Proto.Types.AvailLineWithDetailedPeriodsAddUpdateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AvailLineWithDetailedPeriodsAddUpdate, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Videa.AvailMartNS.Service.Proto.Types.AvailLineWithDetailedPeriodsAddUpdateResponse> AvailLineWithDetailedPeriodsAddUpdateAsync(global::Videa.AvailMartNS.Service.Proto.Types.AvailLineWithDetailedPeriodsAddUpdateRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return AvailLineWithDetailedPeriodsAddUpdateAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Videa.AvailMartNS.Service.Proto.Types.AvailLineWithDetailedPeriodsAddUpdateResponse> AvailLineWithDetailedPeriodsAddUpdateAsync(global::Videa.AvailMartNS.Service.Proto.Types.AvailLineWithDetailedPeriodsAddUpdateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AvailLineWithDetailedPeriodsAddUpdate, null, options, request);
      }
      public virtual global::Videa.AvailMartNS.Service.Proto.Types.DetailedPeriodAddUpdateResponse DetailedPeriodAddUpdate(global::Videa.AvailMartNS.Service.Proto.Types.DetailedPeriodAddUpdateRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return DetailedPeriodAddUpdate(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Videa.AvailMartNS.Service.Proto.Types.DetailedPeriodAddUpdateResponse DetailedPeriodAddUpdate(global::Videa.AvailMartNS.Service.Proto.Types.DetailedPeriodAddUpdateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DetailedPeriodAddUpdate, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Videa.AvailMartNS.Service.Proto.Types.DetailedPeriodAddUpdateResponse> DetailedPeriodAddUpdateAsync(global::Videa.AvailMartNS.Service.Proto.Types.DetailedPeriodAddUpdateRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return DetailedPeriodAddUpdateAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Videa.AvailMartNS.Service.Proto.Types.DetailedPeriodAddUpdateResponse> DetailedPeriodAddUpdateAsync(global::Videa.AvailMartNS.Service.Proto.Types.DetailedPeriodAddUpdateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DetailedPeriodAddUpdate, null, options, request);
      }
      public virtual global::Videa.AvailMartNS.Service.Proto.Types.GetAvailMartResponse GetAvailMart(global::Videa.AvailMartNS.Service.Proto.Types.GetAvailMartRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetAvailMart(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Videa.AvailMartNS.Service.Proto.Types.GetAvailMartResponse GetAvailMart(global::Videa.AvailMartNS.Service.Proto.Types.GetAvailMartRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetAvailMart, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Videa.AvailMartNS.Service.Proto.Types.GetAvailMartResponse> GetAvailMartAsync(global::Videa.AvailMartNS.Service.Proto.Types.GetAvailMartRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetAvailMartAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Videa.AvailMartNS.Service.Proto.Types.GetAvailMartResponse> GetAvailMartAsync(global::Videa.AvailMartNS.Service.Proto.Types.GetAvailMartRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetAvailMart, null, options, request);
      }
      public virtual global::Videa.AvailMartNS.Service.Proto.Types.BulkStoreResponse BulkStore(global::Videa.AvailMartNS.Service.Proto.Types.BulkStoreRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return BulkStore(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Videa.AvailMartNS.Service.Proto.Types.BulkStoreResponse BulkStore(global::Videa.AvailMartNS.Service.Proto.Types.BulkStoreRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_BulkStore, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Videa.AvailMartNS.Service.Proto.Types.BulkStoreResponse> BulkStoreAsync(global::Videa.AvailMartNS.Service.Proto.Types.BulkStoreRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return BulkStoreAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Videa.AvailMartNS.Service.Proto.Types.BulkStoreResponse> BulkStoreAsync(global::Videa.AvailMartNS.Service.Proto.Types.BulkStoreRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_BulkStore, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override AvailMartServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new AvailMartServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(AvailMartServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_AvailMartDelete, serviceImpl.AvailMartDelete)
          .AddMethod(__Method_AvailListDelete, serviceImpl.AvailListDelete)
          .AddMethod(__Method_AvailLineWithDetailedPeriodsDelete, serviceImpl.AvailLineWithDetailedPeriodsDelete)
          .AddMethod(__Method_DetailedPeriodDelete, serviceImpl.DetailedPeriodDelete)
          .AddMethod(__Method_AvailMartAddUpdate, serviceImpl.AvailMartAddUpdate)
          .AddMethod(__Method_AvailListAddUpdate, serviceImpl.AvailListAddUpdate)
          .AddMethod(__Method_AvailLineWithDetailedPeriodsAddUpdate, serviceImpl.AvailLineWithDetailedPeriodsAddUpdate)
          .AddMethod(__Method_DetailedPeriodAddUpdate, serviceImpl.DetailedPeriodAddUpdate)
          .AddMethod(__Method_GetAvailMart, serviceImpl.GetAvailMart)
          .AddMethod(__Method_BulkStore, serviceImpl.BulkStore).Build();
    }

  }
}
#endregion

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: RateCuration.proto
#region Designer generated code

using System;
using System.Threading;
using System.Threading.Tasks;
using grpc = global::Grpc.Core;

namespace Videa.RateCuration.Service.Proto.Types {
  public static partial class RateCurationService
  {
    static readonly string __ServiceName = "RateCurationService";

    static readonly grpc::Marshaller<global::Videa.RateCuration.Service.Proto.Types.CurateSellerRatesRequest> __Marshaller_CurateSellerRatesRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Videa.RateCuration.Service.Proto.Types.CurateSellerRatesRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Videa.RateCuration.Service.Proto.Types.CurateSellerRatesResponse> __Marshaller_CurateSellerRatesResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Videa.RateCuration.Service.Proto.Types.CurateSellerRatesResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Videa.RateCuration.Service.Proto.Types.CuratePricingEngineRatesRequest> __Marshaller_CuratePricingEngineRatesRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Videa.RateCuration.Service.Proto.Types.CuratePricingEngineRatesRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Videa.RateCuration.Service.Proto.Types.CuratePricingEngineRatesResponse> __Marshaller_CuratePricingEngineRatesResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Videa.RateCuration.Service.Proto.Types.CuratePricingEngineRatesResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Videa.RateCuration.Service.Proto.Types.CurateSharebuilderRatesRequest> __Marshaller_CurateSharebuilderRatesRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Videa.RateCuration.Service.Proto.Types.CurateSharebuilderRatesRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Videa.RateCuration.Service.Proto.Types.CurateSharebuilderRatesResponse> __Marshaller_CurateSharebuilderRatesResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Videa.RateCuration.Service.Proto.Types.CurateSharebuilderRatesResponse.Parser.ParseFrom);

    static readonly grpc::Method<global::Videa.RateCuration.Service.Proto.Types.CurateSellerRatesRequest, global::Videa.RateCuration.Service.Proto.Types.CurateSellerRatesResponse> __Method_CurateSellerRates = new grpc::Method<global::Videa.RateCuration.Service.Proto.Types.CurateSellerRatesRequest, global::Videa.RateCuration.Service.Proto.Types.CurateSellerRatesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CurateSellerRates",
        __Marshaller_CurateSellerRatesRequest,
        __Marshaller_CurateSellerRatesResponse);

    static readonly grpc::Method<global::Videa.RateCuration.Service.Proto.Types.CuratePricingEngineRatesRequest, global::Videa.RateCuration.Service.Proto.Types.CuratePricingEngineRatesResponse> __Method_CuratePricingEngineRates = new grpc::Method<global::Videa.RateCuration.Service.Proto.Types.CuratePricingEngineRatesRequest, global::Videa.RateCuration.Service.Proto.Types.CuratePricingEngineRatesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CuratePricingEngineRates",
        __Marshaller_CuratePricingEngineRatesRequest,
        __Marshaller_CuratePricingEngineRatesResponse);

    static readonly grpc::Method<global::Videa.RateCuration.Service.Proto.Types.CurateSharebuilderRatesRequest, global::Videa.RateCuration.Service.Proto.Types.CurateSharebuilderRatesResponse> __Method_CurateSharebuilderRates = new grpc::Method<global::Videa.RateCuration.Service.Proto.Types.CurateSharebuilderRatesRequest, global::Videa.RateCuration.Service.Proto.Types.CurateSharebuilderRatesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CurateSharebuilderRates",
        __Marshaller_CurateSharebuilderRatesRequest,
        __Marshaller_CurateSharebuilderRatesResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Videa.RateCuration.Service.Proto.Types.RateCurationReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of RateCurationService</summary>
    public abstract partial class RateCurationServiceBase
    {
      public virtual global::System.Threading.Tasks.Task<global::Videa.RateCuration.Service.Proto.Types.CurateSellerRatesResponse> CurateSellerRates(global::Videa.RateCuration.Service.Proto.Types.CurateSellerRatesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Videa.RateCuration.Service.Proto.Types.CuratePricingEngineRatesResponse> CuratePricingEngineRates(global::Videa.RateCuration.Service.Proto.Types.CuratePricingEngineRatesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Videa.RateCuration.Service.Proto.Types.CurateSharebuilderRatesResponse> CurateSharebuilderRates(global::Videa.RateCuration.Service.Proto.Types.CurateSharebuilderRatesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for RateCurationService</summary>
    public partial class RateCurationServiceClient : grpc::ClientBase<RateCurationServiceClient>
    {
      /// <summary>Creates a new client for RateCurationService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public RateCurationServiceClient(grpc::Channel channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for RateCurationService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public RateCurationServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected RateCurationServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected RateCurationServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::Videa.RateCuration.Service.Proto.Types.CurateSellerRatesResponse CurateSellerRates(global::Videa.RateCuration.Service.Proto.Types.CurateSellerRatesRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return CurateSellerRates(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Videa.RateCuration.Service.Proto.Types.CurateSellerRatesResponse CurateSellerRates(global::Videa.RateCuration.Service.Proto.Types.CurateSellerRatesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CurateSellerRates, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Videa.RateCuration.Service.Proto.Types.CurateSellerRatesResponse> CurateSellerRatesAsync(global::Videa.RateCuration.Service.Proto.Types.CurateSellerRatesRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return CurateSellerRatesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Videa.RateCuration.Service.Proto.Types.CurateSellerRatesResponse> CurateSellerRatesAsync(global::Videa.RateCuration.Service.Proto.Types.CurateSellerRatesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CurateSellerRates, null, options, request);
      }
      public virtual global::Videa.RateCuration.Service.Proto.Types.CuratePricingEngineRatesResponse CuratePricingEngineRates(global::Videa.RateCuration.Service.Proto.Types.CuratePricingEngineRatesRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return CuratePricingEngineRates(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Videa.RateCuration.Service.Proto.Types.CuratePricingEngineRatesResponse CuratePricingEngineRates(global::Videa.RateCuration.Service.Proto.Types.CuratePricingEngineRatesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CuratePricingEngineRates, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Videa.RateCuration.Service.Proto.Types.CuratePricingEngineRatesResponse> CuratePricingEngineRatesAsync(global::Videa.RateCuration.Service.Proto.Types.CuratePricingEngineRatesRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return CuratePricingEngineRatesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Videa.RateCuration.Service.Proto.Types.CuratePricingEngineRatesResponse> CuratePricingEngineRatesAsync(global::Videa.RateCuration.Service.Proto.Types.CuratePricingEngineRatesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CuratePricingEngineRates, null, options, request);
      }
      public virtual global::Videa.RateCuration.Service.Proto.Types.CurateSharebuilderRatesResponse CurateSharebuilderRates(global::Videa.RateCuration.Service.Proto.Types.CurateSharebuilderRatesRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return CurateSharebuilderRates(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Videa.RateCuration.Service.Proto.Types.CurateSharebuilderRatesResponse CurateSharebuilderRates(global::Videa.RateCuration.Service.Proto.Types.CurateSharebuilderRatesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CurateSharebuilderRates, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Videa.RateCuration.Service.Proto.Types.CurateSharebuilderRatesResponse> CurateSharebuilderRatesAsync(global::Videa.RateCuration.Service.Proto.Types.CurateSharebuilderRatesRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return CurateSharebuilderRatesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Videa.RateCuration.Service.Proto.Types.CurateSharebuilderRatesResponse> CurateSharebuilderRatesAsync(global::Videa.RateCuration.Service.Proto.Types.CurateSharebuilderRatesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CurateSharebuilderRates, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override RateCurationServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new RateCurationServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(RateCurationServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_CurateSellerRates, serviceImpl.CurateSellerRates)
          .AddMethod(__Method_CuratePricingEngineRates, serviceImpl.CuratePricingEngineRates)
          .AddMethod(__Method_CurateSharebuilderRates, serviceImpl.CurateSharebuilderRates).Build();
    }

  }
}
#endregion

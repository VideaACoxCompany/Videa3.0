// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CuratedRateService.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Videa.CuratedRateNS.Service.Proto.Types {

  /// <summary>Holder for reflection information generated from CuratedRateService.proto</summary>
  public static partial class CuratedRateServiceReflection {

    #region Descriptor
    /// <summary>File descriptor for CuratedRateService.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CuratedRateServiceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChhDdXJhdGVkUmF0ZVNlcnZpY2UucHJvdG8aH2dvb2dsZS9wcm90b2J1Zi90",
            "aW1lc3RhbXAucHJvdG8aHmdvb2dsZS9wcm90b2J1Zi9kdXJhdGlvbi5wcm90",
            "byKmAgoLQ3VyYXRlZFJhdGUSFQoNQ3VyYXRlZFJhdGVJZBgBIAEoAxIgChhT",
            "ZWxsYWJsZUludmVudG9yeUhhc2hLZXkYAiABKAkSEwoLUmF0ZUhhc2hLZXkY",
            "AyABKAkSEwoLUmF0ZVZlcnNpb24YBCABKAUSGAoQQ3VyYXRlZFJhdGVWYWx1",
            "ZRgFIAEoCRIVCg1Jc0R5bmFtaWNSYXRlGAYgASgIEhIKClJhdGVUeXBlSWQY",
            "ByABKAUSGAoQQ3VyYXRpb25TdGF0dXNJZBgIIAEoBRIRCglDcmVhdGVkQnkY",
            "CSABKAkSEgoKTW9kaWZpZWRCeRgKIAEoCRIuCgpSb3dWZXJzaW9uGAsgASgL",
            "MhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcCJRCghSYXRlVHlwZRISCgpS",
            "YXRlVHlwZUlkGAEgASgFEhQKDFJhdGVUeXBlTmFtZRgCIAEoCRIbChNSYXRl",
            "VHlwZURlc2NyaXB0aW9uGAMgASgJImkKDkN1cmF0aW9uU3RhdHVzEhgKEEN1",
            "cmF0aW9uU3RhdHVzSWQYASABKAUSGgoSQ3VyYXRpb25TdGF0dXNOYW1lGAIg",
            "ASgJEiEKGUN1cmF0aW9uU3RhdHVzRGVzY3JpcHRpb24YAyABKAkiFAoEUmF0",
            "ZRIMCgR0b2RvGAEgASgFIjEKGEN1cmF0ZWRSYXRlRGVsZXRlUmVxdWVzdBIV",
            "Cg1DdXJhdGVkUmF0ZUlkGAEgASgDIhsKGUN1cmF0ZWRSYXRlRGVsZXRlUmVz",
            "cG9uc2UiKwoVUmF0ZVR5cGVEZWxldGVSZXF1ZXN0EhIKClJhdGVUeXBlSWQY",
            "ASABKAUiGAoWUmF0ZVR5cGVEZWxldGVSZXNwb25zZSI3ChtDdXJhdGlvblN0",
            "YXR1c0RlbGV0ZVJlcXVlc3QSGAoQQ3VyYXRpb25TdGF0dXNJZBgBIAEoBSIe",
            "ChxDdXJhdGlvblN0YXR1c0RlbGV0ZVJlc3BvbnNlIkAKG0N1cmF0ZWRSYXRl",
            "QWRkVXBkYXRlUmVxdWVzdBIhCgtDdXJhdGVkUmF0ZRgBIAEoCzIMLkN1cmF0",
            "ZWRSYXRlIh4KHEN1cmF0ZWRSYXRlQWRkVXBkYXRlUmVzcG9uc2UiNwoYUmF0",
            "ZVR5cGVBZGRVcGRhdGVSZXF1ZXN0EhsKCFJhdGVUeXBlGAEgASgLMgkuUmF0",
            "ZVR5cGUiGwoZUmF0ZVR5cGVBZGRVcGRhdGVSZXNwb25zZSJJCh5DdXJhdGlv",
            "blN0YXR1c0FkZFVwZGF0ZVJlcXVlc3QSJwoOQ3VyYXRpb25TdGF0dXMYASAB",
            "KAsyDy5DdXJhdGlvblN0YXR1cyIhCh9DdXJhdGlvblN0YXR1c0FkZFVwZGF0",
            "ZVJlc3BvbnNlIjkKGEdldENvbmZpcm1lZFJhdGVzUmVxdWVzdBIdChVTZWxs",
            "YWJsZUludmVudG9yeUxpc3QYASABKAkiMAoZR2V0Q29uZmlybWVkUmF0ZXNS",
            "ZXNwb25zZRITCgRSYXRlGAEgAygLMgUuUmF0ZSKQAQoQQnVsa1N0b3JlUmVx",
            "dWVzdBIhCgtDdXJhdGVkUmF0ZRgBIAMoCzIMLkN1cmF0ZWRSYXRlEhsKCFJh",
            "dGVUeXBlGAIgAygLMgkuUmF0ZVR5cGUSJwoOQ3VyYXRpb25TdGF0dXMYAyAD",
            "KAsyDy5DdXJhdGlvblN0YXR1cxITCgRSYXRlGAQgAygLMgUuUmF0ZSITChFC",
            "dWxrU3RvcmVSZXNwb25zZTKHBQoSQ3VyYXRlZFJhdGVTZXJ2aWNlEkwKEUN1",
            "cmF0ZWRSYXRlRGVsZXRlEhkuQ3VyYXRlZFJhdGVEZWxldGVSZXF1ZXN0Ghou",
            "Q3VyYXRlZFJhdGVEZWxldGVSZXNwb25zZSIAEkMKDlJhdGVUeXBlRGVsZXRl",
            "EhYuUmF0ZVR5cGVEZWxldGVSZXF1ZXN0GhcuUmF0ZVR5cGVEZWxldGVSZXNw",
            "b25zZSIAElUKFEN1cmF0aW9uU3RhdHVzRGVsZXRlEhwuQ3VyYXRpb25TdGF0",
            "dXNEZWxldGVSZXF1ZXN0Gh0uQ3VyYXRpb25TdGF0dXNEZWxldGVSZXNwb25z",
            "ZSIAElUKFEN1cmF0ZWRSYXRlQWRkVXBkYXRlEhwuQ3VyYXRlZFJhdGVBZGRV",
            "cGRhdGVSZXF1ZXN0Gh0uQ3VyYXRlZFJhdGVBZGRVcGRhdGVSZXNwb25zZSIA",
            "EkwKEVJhdGVUeXBlQWRkVXBkYXRlEhkuUmF0ZVR5cGVBZGRVcGRhdGVSZXF1",
            "ZXN0GhouUmF0ZVR5cGVBZGRVcGRhdGVSZXNwb25zZSIAEl4KF0N1cmF0aW9u",
            "U3RhdHVzQWRkVXBkYXRlEh8uQ3VyYXRpb25TdGF0dXNBZGRVcGRhdGVSZXF1",
            "ZXN0GiAuQ3VyYXRpb25TdGF0dXNBZGRVcGRhdGVSZXNwb25zZSIAEkwKEUdl",
            "dENvbmZpcm1lZFJhdGVzEhkuR2V0Q29uZmlybWVkUmF0ZXNSZXF1ZXN0Ghou",
            "R2V0Q29uZmlybWVkUmF0ZXNSZXNwb25zZSIAEjQKCUJ1bGtTdG9yZRIRLkJ1",
            "bGtTdG9yZVJlcXVlc3QaEi5CdWxrU3RvcmVSZXNwb25zZSIAQiqqAidWaWRl",
            "YS5DdXJhdGVkUmF0ZU5TLlNlcnZpY2UuUHJvdG8uVHlwZXNiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.DurationReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Videa.CuratedRateNS.Service.Proto.Types.CuratedRate), global::Videa.CuratedRateNS.Service.Proto.Types.CuratedRate.Parser, new[]{ "CuratedRateId", "SellableInventoryHashKey", "RateHashKey", "RateVersion", "CuratedRateValue", "IsDynamicRate", "RateTypeId", "CurationStatusId", "CreatedBy", "ModifiedBy", "RowVersion" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Videa.CuratedRateNS.Service.Proto.Types.RateType), global::Videa.CuratedRateNS.Service.Proto.Types.RateType.Parser, new[]{ "RateTypeId", "RateTypeName", "RateTypeDescription" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Videa.CuratedRateNS.Service.Proto.Types.CurationStatus), global::Videa.CuratedRateNS.Service.Proto.Types.CurationStatus.Parser, new[]{ "CurationStatusId", "CurationStatusName", "CurationStatusDescription" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Videa.CuratedRateNS.Service.Proto.Types.Rate), global::Videa.CuratedRateNS.Service.Proto.Types.Rate.Parser, new[]{ "Todo" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Videa.CuratedRateNS.Service.Proto.Types.CuratedRateDeleteRequest), global::Videa.CuratedRateNS.Service.Proto.Types.CuratedRateDeleteRequest.Parser, new[]{ "CuratedRateId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Videa.CuratedRateNS.Service.Proto.Types.CuratedRateDeleteResponse), global::Videa.CuratedRateNS.Service.Proto.Types.CuratedRateDeleteResponse.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Videa.CuratedRateNS.Service.Proto.Types.RateTypeDeleteRequest), global::Videa.CuratedRateNS.Service.Proto.Types.RateTypeDeleteRequest.Parser, new[]{ "RateTypeId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Videa.CuratedRateNS.Service.Proto.Types.RateTypeDeleteResponse), global::Videa.CuratedRateNS.Service.Proto.Types.RateTypeDeleteResponse.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Videa.CuratedRateNS.Service.Proto.Types.CurationStatusDeleteRequest), global::Videa.CuratedRateNS.Service.Proto.Types.CurationStatusDeleteRequest.Parser, new[]{ "CurationStatusId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Videa.CuratedRateNS.Service.Proto.Types.CurationStatusDeleteResponse), global::Videa.CuratedRateNS.Service.Proto.Types.CurationStatusDeleteResponse.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Videa.CuratedRateNS.Service.Proto.Types.CuratedRateAddUpdateRequest), global::Videa.CuratedRateNS.Service.Proto.Types.CuratedRateAddUpdateRequest.Parser, new[]{ "CuratedRate" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Videa.CuratedRateNS.Service.Proto.Types.CuratedRateAddUpdateResponse), global::Videa.CuratedRateNS.Service.Proto.Types.CuratedRateAddUpdateResponse.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Videa.CuratedRateNS.Service.Proto.Types.RateTypeAddUpdateRequest), global::Videa.CuratedRateNS.Service.Proto.Types.RateTypeAddUpdateRequest.Parser, new[]{ "RateType" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Videa.CuratedRateNS.Service.Proto.Types.RateTypeAddUpdateResponse), global::Videa.CuratedRateNS.Service.Proto.Types.RateTypeAddUpdateResponse.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Videa.CuratedRateNS.Service.Proto.Types.CurationStatusAddUpdateRequest), global::Videa.CuratedRateNS.Service.Proto.Types.CurationStatusAddUpdateRequest.Parser, new[]{ "CurationStatus" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Videa.CuratedRateNS.Service.Proto.Types.CurationStatusAddUpdateResponse), global::Videa.CuratedRateNS.Service.Proto.Types.CurationStatusAddUpdateResponse.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Videa.CuratedRateNS.Service.Proto.Types.GetConfirmedRatesRequest), global::Videa.CuratedRateNS.Service.Proto.Types.GetConfirmedRatesRequest.Parser, new[]{ "SellableInventoryList" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Videa.CuratedRateNS.Service.Proto.Types.GetConfirmedRatesResponse), global::Videa.CuratedRateNS.Service.Proto.Types.GetConfirmedRatesResponse.Parser, new[]{ "Rate" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Videa.CuratedRateNS.Service.Proto.Types.BulkStoreRequest), global::Videa.CuratedRateNS.Service.Proto.Types.BulkStoreRequest.Parser, new[]{ "CuratedRate", "RateType", "CurationStatus", "Rate" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Videa.CuratedRateNS.Service.Proto.Types.BulkStoreResponse), global::Videa.CuratedRateNS.Service.Proto.Types.BulkStoreResponse.Parser, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class CuratedRate : pb::IMessage<CuratedRate> {
    private static readonly pb::MessageParser<CuratedRate> _parser = new pb::MessageParser<CuratedRate>(() => new CuratedRate());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CuratedRate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Videa.CuratedRateNS.Service.Proto.Types.CuratedRateServiceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CuratedRate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CuratedRate(CuratedRate other) : this() {
      curatedRateId_ = other.curatedRateId_;
      sellableInventoryHashKey_ = other.sellableInventoryHashKey_;
      rateHashKey_ = other.rateHashKey_;
      rateVersion_ = other.rateVersion_;
      curatedRateValue_ = other.curatedRateValue_;
      isDynamicRate_ = other.isDynamicRate_;
      rateTypeId_ = other.rateTypeId_;
      curationStatusId_ = other.curationStatusId_;
      createdBy_ = other.createdBy_;
      modifiedBy_ = other.modifiedBy_;
      RowVersion = other.rowVersion_ != null ? other.RowVersion.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CuratedRate Clone() {
      return new CuratedRate(this);
    }

    /// <summary>Field number for the "CuratedRateId" field.</summary>
    public const int CuratedRateIdFieldNumber = 1;
    private long curatedRateId_;
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CuratedRateId {
      get { return curatedRateId_; }
      set {
        curatedRateId_ = value;
      }
    }

    /// <summary>Field number for the "SellableInventoryHashKey" field.</summary>
    public const int SellableInventoryHashKeyFieldNumber = 2;
    private string sellableInventoryHashKey_ = "";
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SellableInventoryHashKey {
      get { return sellableInventoryHashKey_; }
      set {
        sellableInventoryHashKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "RateHashKey" field.</summary>
    public const int RateHashKeyFieldNumber = 3;
    private string rateHashKey_ = "";
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RateHashKey {
      get { return rateHashKey_; }
      set {
        rateHashKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "RateVersion" field.</summary>
    public const int RateVersionFieldNumber = 4;
    private int rateVersion_;
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RateVersion {
      get { return rateVersion_; }
      set {
        rateVersion_ = value;
      }
    }

    /// <summary>Field number for the "CuratedRateValue" field.</summary>
    public const int CuratedRateValueFieldNumber = 5;
    private string curatedRateValue_ = "";
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CuratedRateValue {
      get { return curatedRateValue_; }
      set {
        curatedRateValue_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "IsDynamicRate" field.</summary>
    public const int IsDynamicRateFieldNumber = 6;
    private bool isDynamicRate_;
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsDynamicRate {
      get { return isDynamicRate_; }
      set {
        isDynamicRate_ = value;
      }
    }

    /// <summary>Field number for the "RateTypeId" field.</summary>
    public const int RateTypeIdFieldNumber = 7;
    private int rateTypeId_;
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RateTypeId {
      get { return rateTypeId_; }
      set {
        rateTypeId_ = value;
      }
    }

    /// <summary>Field number for the "CurationStatusId" field.</summary>
    public const int CurationStatusIdFieldNumber = 8;
    private int curationStatusId_;
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CurationStatusId {
      get { return curationStatusId_; }
      set {
        curationStatusId_ = value;
      }
    }

    /// <summary>Field number for the "CreatedBy" field.</summary>
    public const int CreatedByFieldNumber = 9;
    private string createdBy_ = "";
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedBy {
      get { return createdBy_; }
      set {
        createdBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModifiedBy" field.</summary>
    public const int ModifiedByFieldNumber = 10;
    private string modifiedBy_ = "";
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModifiedBy {
      get { return modifiedBy_; }
      set {
        modifiedBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "RowVersion" field.</summary>
    public const int RowVersionFieldNumber = 11;
    private global::Google.Protobuf.WellKnownTypes.Timestamp rowVersion_;
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp RowVersion {
      get { return rowVersion_; }
      set {
        rowVersion_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CuratedRate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CuratedRate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CuratedRateId != other.CuratedRateId) return false;
      if (SellableInventoryHashKey != other.SellableInventoryHashKey) return false;
      if (RateHashKey != other.RateHashKey) return false;
      if (RateVersion != other.RateVersion) return false;
      if (CuratedRateValue != other.CuratedRateValue) return false;
      if (IsDynamicRate != other.IsDynamicRate) return false;
      if (RateTypeId != other.RateTypeId) return false;
      if (CurationStatusId != other.CurationStatusId) return false;
      if (CreatedBy != other.CreatedBy) return false;
      if (ModifiedBy != other.ModifiedBy) return false;
      if (!object.Equals(RowVersion, other.RowVersion)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CuratedRateId != 0L) hash ^= CuratedRateId.GetHashCode();
      if (SellableInventoryHashKey.Length != 0) hash ^= SellableInventoryHashKey.GetHashCode();
      if (RateHashKey.Length != 0) hash ^= RateHashKey.GetHashCode();
      if (RateVersion != 0) hash ^= RateVersion.GetHashCode();
      if (CuratedRateValue.Length != 0) hash ^= CuratedRateValue.GetHashCode();
      if (IsDynamicRate != false) hash ^= IsDynamicRate.GetHashCode();
      if (RateTypeId != 0) hash ^= RateTypeId.GetHashCode();
      if (CurationStatusId != 0) hash ^= CurationStatusId.GetHashCode();
      if (CreatedBy.Length != 0) hash ^= CreatedBy.GetHashCode();
      if (ModifiedBy.Length != 0) hash ^= ModifiedBy.GetHashCode();
      if (rowVersion_ != null) hash ^= RowVersion.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CuratedRateId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(CuratedRateId);
      }
      if (SellableInventoryHashKey.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SellableInventoryHashKey);
      }
      if (RateHashKey.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(RateHashKey);
      }
      if (RateVersion != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(RateVersion);
      }
      if (CuratedRateValue.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(CuratedRateValue);
      }
      if (IsDynamicRate != false) {
        output.WriteRawTag(48);
        output.WriteBool(IsDynamicRate);
      }
      if (RateTypeId != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(RateTypeId);
      }
      if (CurationStatusId != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(CurationStatusId);
      }
      if (CreatedBy.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(CreatedBy);
      }
      if (ModifiedBy.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(ModifiedBy);
      }
      if (rowVersion_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(RowVersion);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CuratedRateId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CuratedRateId);
      }
      if (SellableInventoryHashKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SellableInventoryHashKey);
      }
      if (RateHashKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RateHashKey);
      }
      if (RateVersion != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RateVersion);
      }
      if (CuratedRateValue.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CuratedRateValue);
      }
      if (IsDynamicRate != false) {
        size += 1 + 1;
      }
      if (RateTypeId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RateTypeId);
      }
      if (CurationStatusId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CurationStatusId);
      }
      if (CreatedBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedBy);
      }
      if (ModifiedBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModifiedBy);
      }
      if (rowVersion_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RowVersion);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CuratedRate other) {
      if (other == null) {
        return;
      }
      if (other.CuratedRateId != 0L) {
        CuratedRateId = other.CuratedRateId;
      }
      if (other.SellableInventoryHashKey.Length != 0) {
        SellableInventoryHashKey = other.SellableInventoryHashKey;
      }
      if (other.RateHashKey.Length != 0) {
        RateHashKey = other.RateHashKey;
      }
      if (other.RateVersion != 0) {
        RateVersion = other.RateVersion;
      }
      if (other.CuratedRateValue.Length != 0) {
        CuratedRateValue = other.CuratedRateValue;
      }
      if (other.IsDynamicRate != false) {
        IsDynamicRate = other.IsDynamicRate;
      }
      if (other.RateTypeId != 0) {
        RateTypeId = other.RateTypeId;
      }
      if (other.CurationStatusId != 0) {
        CurationStatusId = other.CurationStatusId;
      }
      if (other.CreatedBy.Length != 0) {
        CreatedBy = other.CreatedBy;
      }
      if (other.ModifiedBy.Length != 0) {
        ModifiedBy = other.ModifiedBy;
      }
      if (other.rowVersion_ != null) {
        if (rowVersion_ == null) {
          rowVersion_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        RowVersion.MergeFrom(other.RowVersion);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            CuratedRateId = input.ReadInt64();
            break;
          }
          case 18: {
            SellableInventoryHashKey = input.ReadString();
            break;
          }
          case 26: {
            RateHashKey = input.ReadString();
            break;
          }
          case 32: {
            RateVersion = input.ReadInt32();
            break;
          }
          case 42: {
            CuratedRateValue = input.ReadString();
            break;
          }
          case 48: {
            IsDynamicRate = input.ReadBool();
            break;
          }
          case 56: {
            RateTypeId = input.ReadInt32();
            break;
          }
          case 64: {
            CurationStatusId = input.ReadInt32();
            break;
          }
          case 74: {
            CreatedBy = input.ReadString();
            break;
          }
          case 82: {
            ModifiedBy = input.ReadString();
            break;
          }
          case 90: {
            if (rowVersion_ == null) {
              rowVersion_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(rowVersion_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class RateType : pb::IMessage<RateType> {
    private static readonly pb::MessageParser<RateType> _parser = new pb::MessageParser<RateType>(() => new RateType());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RateType> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Videa.CuratedRateNS.Service.Proto.Types.CuratedRateServiceReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RateType() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RateType(RateType other) : this() {
      rateTypeId_ = other.rateTypeId_;
      rateTypeName_ = other.rateTypeName_;
      rateTypeDescription_ = other.rateTypeDescription_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RateType Clone() {
      return new RateType(this);
    }

    /// <summary>Field number for the "RateTypeId" field.</summary>
    public const int RateTypeIdFieldNumber = 1;
    private int rateTypeId_;
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RateTypeId {
      get { return rateTypeId_; }
      set {
        rateTypeId_ = value;
      }
    }

    /// <summary>Field number for the "RateTypeName" field.</summary>
    public const int RateTypeNameFieldNumber = 2;
    private string rateTypeName_ = "";
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RateTypeName {
      get { return rateTypeName_; }
      set {
        rateTypeName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "RateTypeDescription" field.</summary>
    public const int RateTypeDescriptionFieldNumber = 3;
    private string rateTypeDescription_ = "";
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RateTypeDescription {
      get { return rateTypeDescription_; }
      set {
        rateTypeDescription_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RateType);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RateType other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RateTypeId != other.RateTypeId) return false;
      if (RateTypeName != other.RateTypeName) return false;
      if (RateTypeDescription != other.RateTypeDescription) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RateTypeId != 0) hash ^= RateTypeId.GetHashCode();
      if (RateTypeName.Length != 0) hash ^= RateTypeName.GetHashCode();
      if (RateTypeDescription.Length != 0) hash ^= RateTypeDescription.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RateTypeId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(RateTypeId);
      }
      if (RateTypeName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(RateTypeName);
      }
      if (RateTypeDescription.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(RateTypeDescription);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RateTypeId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RateTypeId);
      }
      if (RateTypeName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RateTypeName);
      }
      if (RateTypeDescription.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RateTypeDescription);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RateType other) {
      if (other == null) {
        return;
      }
      if (other.RateTypeId != 0) {
        RateTypeId = other.RateTypeId;
      }
      if (other.RateTypeName.Length != 0) {
        RateTypeName = other.RateTypeName;
      }
      if (other.RateTypeDescription.Length != 0) {
        RateTypeDescription = other.RateTypeDescription;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            RateTypeId = input.ReadInt32();
            break;
          }
          case 18: {
            RateTypeName = input.ReadString();
            break;
          }
          case 26: {
            RateTypeDescription = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CurationStatus : pb::IMessage<CurationStatus> {
    private static readonly pb::MessageParser<CurationStatus> _parser = new pb::MessageParser<CurationStatus>(() => new CurationStatus());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CurationStatus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Videa.CuratedRateNS.Service.Proto.Types.CuratedRateServiceReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CurationStatus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CurationStatus(CurationStatus other) : this() {
      curationStatusId_ = other.curationStatusId_;
      curationStatusName_ = other.curationStatusName_;
      curationStatusDescription_ = other.curationStatusDescription_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CurationStatus Clone() {
      return new CurationStatus(this);
    }

    /// <summary>Field number for the "CurationStatusId" field.</summary>
    public const int CurationStatusIdFieldNumber = 1;
    private int curationStatusId_;
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CurationStatusId {
      get { return curationStatusId_; }
      set {
        curationStatusId_ = value;
      }
    }

    /// <summary>Field number for the "CurationStatusName" field.</summary>
    public const int CurationStatusNameFieldNumber = 2;
    private string curationStatusName_ = "";
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CurationStatusName {
      get { return curationStatusName_; }
      set {
        curationStatusName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CurationStatusDescription" field.</summary>
    public const int CurationStatusDescriptionFieldNumber = 3;
    private string curationStatusDescription_ = "";
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CurationStatusDescription {
      get { return curationStatusDescription_; }
      set {
        curationStatusDescription_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CurationStatus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CurationStatus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CurationStatusId != other.CurationStatusId) return false;
      if (CurationStatusName != other.CurationStatusName) return false;
      if (CurationStatusDescription != other.CurationStatusDescription) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CurationStatusId != 0) hash ^= CurationStatusId.GetHashCode();
      if (CurationStatusName.Length != 0) hash ^= CurationStatusName.GetHashCode();
      if (CurationStatusDescription.Length != 0) hash ^= CurationStatusDescription.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CurationStatusId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(CurationStatusId);
      }
      if (CurationStatusName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(CurationStatusName);
      }
      if (CurationStatusDescription.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(CurationStatusDescription);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CurationStatusId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CurationStatusId);
      }
      if (CurationStatusName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CurationStatusName);
      }
      if (CurationStatusDescription.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CurationStatusDescription);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CurationStatus other) {
      if (other == null) {
        return;
      }
      if (other.CurationStatusId != 0) {
        CurationStatusId = other.CurationStatusId;
      }
      if (other.CurationStatusName.Length != 0) {
        CurationStatusName = other.CurationStatusName;
      }
      if (other.CurationStatusDescription.Length != 0) {
        CurationStatusDescription = other.CurationStatusDescription;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            CurationStatusId = input.ReadInt32();
            break;
          }
          case 18: {
            CurationStatusName = input.ReadString();
            break;
          }
          case 26: {
            CurationStatusDescription = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Rate : pb::IMessage<Rate> {
    private static readonly pb::MessageParser<Rate> _parser = new pb::MessageParser<Rate>(() => new Rate());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Rate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Videa.CuratedRateNS.Service.Proto.Types.CuratedRateServiceReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Rate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Rate(Rate other) : this() {
      todo_ = other.todo_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Rate Clone() {
      return new Rate(this);
    }

    /// <summary>Field number for the "todo" field.</summary>
    public const int TodoFieldNumber = 1;
    private int todo_;
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Todo {
      get { return todo_; }
      set {
        todo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Rate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Rate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Todo != other.Todo) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Todo != 0) hash ^= Todo.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Todo != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Todo);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Todo != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Todo);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Rate other) {
      if (other == null) {
        return;
      }
      if (other.Todo != 0) {
        Todo = other.Todo;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Todo = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CuratedRateDeleteRequest : pb::IMessage<CuratedRateDeleteRequest> {
    private static readonly pb::MessageParser<CuratedRateDeleteRequest> _parser = new pb::MessageParser<CuratedRateDeleteRequest>(() => new CuratedRateDeleteRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CuratedRateDeleteRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Videa.CuratedRateNS.Service.Proto.Types.CuratedRateServiceReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CuratedRateDeleteRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CuratedRateDeleteRequest(CuratedRateDeleteRequest other) : this() {
      curatedRateId_ = other.curatedRateId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CuratedRateDeleteRequest Clone() {
      return new CuratedRateDeleteRequest(this);
    }

    /// <summary>Field number for the "CuratedRateId" field.</summary>
    public const int CuratedRateIdFieldNumber = 1;
    private long curatedRateId_;
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CuratedRateId {
      get { return curatedRateId_; }
      set {
        curatedRateId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CuratedRateDeleteRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CuratedRateDeleteRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CuratedRateId != other.CuratedRateId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CuratedRateId != 0L) hash ^= CuratedRateId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CuratedRateId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(CuratedRateId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CuratedRateId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CuratedRateId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CuratedRateDeleteRequest other) {
      if (other == null) {
        return;
      }
      if (other.CuratedRateId != 0L) {
        CuratedRateId = other.CuratedRateId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            CuratedRateId = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CuratedRateDeleteResponse : pb::IMessage<CuratedRateDeleteResponse> {
    private static readonly pb::MessageParser<CuratedRateDeleteResponse> _parser = new pb::MessageParser<CuratedRateDeleteResponse>(() => new CuratedRateDeleteResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CuratedRateDeleteResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Videa.CuratedRateNS.Service.Proto.Types.CuratedRateServiceReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CuratedRateDeleteResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CuratedRateDeleteResponse(CuratedRateDeleteResponse other) : this() {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CuratedRateDeleteResponse Clone() {
      return new CuratedRateDeleteResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CuratedRateDeleteResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CuratedRateDeleteResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CuratedRateDeleteResponse other) {
      if (other == null) {
        return;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
        }
      }
    }

  }

  public sealed partial class RateTypeDeleteRequest : pb::IMessage<RateTypeDeleteRequest> {
    private static readonly pb::MessageParser<RateTypeDeleteRequest> _parser = new pb::MessageParser<RateTypeDeleteRequest>(() => new RateTypeDeleteRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RateTypeDeleteRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Videa.CuratedRateNS.Service.Proto.Types.CuratedRateServiceReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RateTypeDeleteRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RateTypeDeleteRequest(RateTypeDeleteRequest other) : this() {
      rateTypeId_ = other.rateTypeId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RateTypeDeleteRequest Clone() {
      return new RateTypeDeleteRequest(this);
    }

    /// <summary>Field number for the "RateTypeId" field.</summary>
    public const int RateTypeIdFieldNumber = 1;
    private int rateTypeId_;
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RateTypeId {
      get { return rateTypeId_; }
      set {
        rateTypeId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RateTypeDeleteRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RateTypeDeleteRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RateTypeId != other.RateTypeId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RateTypeId != 0) hash ^= RateTypeId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RateTypeId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(RateTypeId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RateTypeId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RateTypeId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RateTypeDeleteRequest other) {
      if (other == null) {
        return;
      }
      if (other.RateTypeId != 0) {
        RateTypeId = other.RateTypeId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            RateTypeId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RateTypeDeleteResponse : pb::IMessage<RateTypeDeleteResponse> {
    private static readonly pb::MessageParser<RateTypeDeleteResponse> _parser = new pb::MessageParser<RateTypeDeleteResponse>(() => new RateTypeDeleteResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RateTypeDeleteResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Videa.CuratedRateNS.Service.Proto.Types.CuratedRateServiceReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RateTypeDeleteResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RateTypeDeleteResponse(RateTypeDeleteResponse other) : this() {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RateTypeDeleteResponse Clone() {
      return new RateTypeDeleteResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RateTypeDeleteResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RateTypeDeleteResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RateTypeDeleteResponse other) {
      if (other == null) {
        return;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
        }
      }
    }

  }

  public sealed partial class CurationStatusDeleteRequest : pb::IMessage<CurationStatusDeleteRequest> {
    private static readonly pb::MessageParser<CurationStatusDeleteRequest> _parser = new pb::MessageParser<CurationStatusDeleteRequest>(() => new CurationStatusDeleteRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CurationStatusDeleteRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Videa.CuratedRateNS.Service.Proto.Types.CuratedRateServiceReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CurationStatusDeleteRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CurationStatusDeleteRequest(CurationStatusDeleteRequest other) : this() {
      curationStatusId_ = other.curationStatusId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CurationStatusDeleteRequest Clone() {
      return new CurationStatusDeleteRequest(this);
    }

    /// <summary>Field number for the "CurationStatusId" field.</summary>
    public const int CurationStatusIdFieldNumber = 1;
    private int curationStatusId_;
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CurationStatusId {
      get { return curationStatusId_; }
      set {
        curationStatusId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CurationStatusDeleteRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CurationStatusDeleteRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CurationStatusId != other.CurationStatusId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CurationStatusId != 0) hash ^= CurationStatusId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CurationStatusId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(CurationStatusId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CurationStatusId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CurationStatusId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CurationStatusDeleteRequest other) {
      if (other == null) {
        return;
      }
      if (other.CurationStatusId != 0) {
        CurationStatusId = other.CurationStatusId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            CurationStatusId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CurationStatusDeleteResponse : pb::IMessage<CurationStatusDeleteResponse> {
    private static readonly pb::MessageParser<CurationStatusDeleteResponse> _parser = new pb::MessageParser<CurationStatusDeleteResponse>(() => new CurationStatusDeleteResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CurationStatusDeleteResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Videa.CuratedRateNS.Service.Proto.Types.CuratedRateServiceReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CurationStatusDeleteResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CurationStatusDeleteResponse(CurationStatusDeleteResponse other) : this() {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CurationStatusDeleteResponse Clone() {
      return new CurationStatusDeleteResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CurationStatusDeleteResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CurationStatusDeleteResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CurationStatusDeleteResponse other) {
      if (other == null) {
        return;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
        }
      }
    }

  }

  public sealed partial class CuratedRateAddUpdateRequest : pb::IMessage<CuratedRateAddUpdateRequest> {
    private static readonly pb::MessageParser<CuratedRateAddUpdateRequest> _parser = new pb::MessageParser<CuratedRateAddUpdateRequest>(() => new CuratedRateAddUpdateRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CuratedRateAddUpdateRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Videa.CuratedRateNS.Service.Proto.Types.CuratedRateServiceReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CuratedRateAddUpdateRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CuratedRateAddUpdateRequest(CuratedRateAddUpdateRequest other) : this() {
      CuratedRate = other.curatedRate_ != null ? other.CuratedRate.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CuratedRateAddUpdateRequest Clone() {
      return new CuratedRateAddUpdateRequest(this);
    }

    /// <summary>Field number for the "CuratedRate" field.</summary>
    public const int CuratedRateFieldNumber = 1;
    private global::Videa.CuratedRateNS.Service.Proto.Types.CuratedRate curatedRate_;
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Videa.CuratedRateNS.Service.Proto.Types.CuratedRate CuratedRate {
      get { return curatedRate_; }
      set {
        curatedRate_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CuratedRateAddUpdateRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CuratedRateAddUpdateRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(CuratedRate, other.CuratedRate)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (curatedRate_ != null) hash ^= CuratedRate.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (curatedRate_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(CuratedRate);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (curatedRate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CuratedRate);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CuratedRateAddUpdateRequest other) {
      if (other == null) {
        return;
      }
      if (other.curatedRate_ != null) {
        if (curatedRate_ == null) {
          curatedRate_ = new global::Videa.CuratedRateNS.Service.Proto.Types.CuratedRate();
        }
        CuratedRate.MergeFrom(other.CuratedRate);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (curatedRate_ == null) {
              curatedRate_ = new global::Videa.CuratedRateNS.Service.Proto.Types.CuratedRate();
            }
            input.ReadMessage(curatedRate_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CuratedRateAddUpdateResponse : pb::IMessage<CuratedRateAddUpdateResponse> {
    private static readonly pb::MessageParser<CuratedRateAddUpdateResponse> _parser = new pb::MessageParser<CuratedRateAddUpdateResponse>(() => new CuratedRateAddUpdateResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CuratedRateAddUpdateResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Videa.CuratedRateNS.Service.Proto.Types.CuratedRateServiceReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CuratedRateAddUpdateResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CuratedRateAddUpdateResponse(CuratedRateAddUpdateResponse other) : this() {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CuratedRateAddUpdateResponse Clone() {
      return new CuratedRateAddUpdateResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CuratedRateAddUpdateResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CuratedRateAddUpdateResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CuratedRateAddUpdateResponse other) {
      if (other == null) {
        return;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
        }
      }
    }

  }

  public sealed partial class RateTypeAddUpdateRequest : pb::IMessage<RateTypeAddUpdateRequest> {
    private static readonly pb::MessageParser<RateTypeAddUpdateRequest> _parser = new pb::MessageParser<RateTypeAddUpdateRequest>(() => new RateTypeAddUpdateRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RateTypeAddUpdateRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Videa.CuratedRateNS.Service.Proto.Types.CuratedRateServiceReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RateTypeAddUpdateRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RateTypeAddUpdateRequest(RateTypeAddUpdateRequest other) : this() {
      RateType = other.rateType_ != null ? other.RateType.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RateTypeAddUpdateRequest Clone() {
      return new RateTypeAddUpdateRequest(this);
    }

    /// <summary>Field number for the "RateType" field.</summary>
    public const int RateTypeFieldNumber = 1;
    private global::Videa.CuratedRateNS.Service.Proto.Types.RateType rateType_;
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Videa.CuratedRateNS.Service.Proto.Types.RateType RateType {
      get { return rateType_; }
      set {
        rateType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RateTypeAddUpdateRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RateTypeAddUpdateRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(RateType, other.RateType)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (rateType_ != null) hash ^= RateType.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (rateType_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(RateType);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (rateType_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RateType);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RateTypeAddUpdateRequest other) {
      if (other == null) {
        return;
      }
      if (other.rateType_ != null) {
        if (rateType_ == null) {
          rateType_ = new global::Videa.CuratedRateNS.Service.Proto.Types.RateType();
        }
        RateType.MergeFrom(other.RateType);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (rateType_ == null) {
              rateType_ = new global::Videa.CuratedRateNS.Service.Proto.Types.RateType();
            }
            input.ReadMessage(rateType_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class RateTypeAddUpdateResponse : pb::IMessage<RateTypeAddUpdateResponse> {
    private static readonly pb::MessageParser<RateTypeAddUpdateResponse> _parser = new pb::MessageParser<RateTypeAddUpdateResponse>(() => new RateTypeAddUpdateResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RateTypeAddUpdateResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Videa.CuratedRateNS.Service.Proto.Types.CuratedRateServiceReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RateTypeAddUpdateResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RateTypeAddUpdateResponse(RateTypeAddUpdateResponse other) : this() {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RateTypeAddUpdateResponse Clone() {
      return new RateTypeAddUpdateResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RateTypeAddUpdateResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RateTypeAddUpdateResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RateTypeAddUpdateResponse other) {
      if (other == null) {
        return;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
        }
      }
    }

  }

  public sealed partial class CurationStatusAddUpdateRequest : pb::IMessage<CurationStatusAddUpdateRequest> {
    private static readonly pb::MessageParser<CurationStatusAddUpdateRequest> _parser = new pb::MessageParser<CurationStatusAddUpdateRequest>(() => new CurationStatusAddUpdateRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CurationStatusAddUpdateRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Videa.CuratedRateNS.Service.Proto.Types.CuratedRateServiceReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CurationStatusAddUpdateRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CurationStatusAddUpdateRequest(CurationStatusAddUpdateRequest other) : this() {
      CurationStatus = other.curationStatus_ != null ? other.CurationStatus.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CurationStatusAddUpdateRequest Clone() {
      return new CurationStatusAddUpdateRequest(this);
    }

    /// <summary>Field number for the "CurationStatus" field.</summary>
    public const int CurationStatusFieldNumber = 1;
    private global::Videa.CuratedRateNS.Service.Proto.Types.CurationStatus curationStatus_;
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Videa.CuratedRateNS.Service.Proto.Types.CurationStatus CurationStatus {
      get { return curationStatus_; }
      set {
        curationStatus_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CurationStatusAddUpdateRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CurationStatusAddUpdateRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(CurationStatus, other.CurationStatus)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (curationStatus_ != null) hash ^= CurationStatus.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (curationStatus_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(CurationStatus);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (curationStatus_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CurationStatus);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CurationStatusAddUpdateRequest other) {
      if (other == null) {
        return;
      }
      if (other.curationStatus_ != null) {
        if (curationStatus_ == null) {
          curationStatus_ = new global::Videa.CuratedRateNS.Service.Proto.Types.CurationStatus();
        }
        CurationStatus.MergeFrom(other.CurationStatus);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (curationStatus_ == null) {
              curationStatus_ = new global::Videa.CuratedRateNS.Service.Proto.Types.CurationStatus();
            }
            input.ReadMessage(curationStatus_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CurationStatusAddUpdateResponse : pb::IMessage<CurationStatusAddUpdateResponse> {
    private static readonly pb::MessageParser<CurationStatusAddUpdateResponse> _parser = new pb::MessageParser<CurationStatusAddUpdateResponse>(() => new CurationStatusAddUpdateResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CurationStatusAddUpdateResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Videa.CuratedRateNS.Service.Proto.Types.CuratedRateServiceReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CurationStatusAddUpdateResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CurationStatusAddUpdateResponse(CurationStatusAddUpdateResponse other) : this() {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CurationStatusAddUpdateResponse Clone() {
      return new CurationStatusAddUpdateResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CurationStatusAddUpdateResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CurationStatusAddUpdateResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CurationStatusAddUpdateResponse other) {
      if (other == null) {
        return;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
        }
      }
    }

  }

  public sealed partial class GetConfirmedRatesRequest : pb::IMessage<GetConfirmedRatesRequest> {
    private static readonly pb::MessageParser<GetConfirmedRatesRequest> _parser = new pb::MessageParser<GetConfirmedRatesRequest>(() => new GetConfirmedRatesRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetConfirmedRatesRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Videa.CuratedRateNS.Service.Proto.Types.CuratedRateServiceReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetConfirmedRatesRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetConfirmedRatesRequest(GetConfirmedRatesRequest other) : this() {
      sellableInventoryList_ = other.sellableInventoryList_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetConfirmedRatesRequest Clone() {
      return new GetConfirmedRatesRequest(this);
    }

    /// <summary>Field number for the "SellableInventoryList" field.</summary>
    public const int SellableInventoryListFieldNumber = 1;
    private string sellableInventoryList_ = "";
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SellableInventoryList {
      get { return sellableInventoryList_; }
      set {
        sellableInventoryList_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetConfirmedRatesRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetConfirmedRatesRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SellableInventoryList != other.SellableInventoryList) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SellableInventoryList.Length != 0) hash ^= SellableInventoryList.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SellableInventoryList.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SellableInventoryList);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SellableInventoryList.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SellableInventoryList);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetConfirmedRatesRequest other) {
      if (other == null) {
        return;
      }
      if (other.SellableInventoryList.Length != 0) {
        SellableInventoryList = other.SellableInventoryList;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            SellableInventoryList = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetConfirmedRatesResponse : pb::IMessage<GetConfirmedRatesResponse> {
    private static readonly pb::MessageParser<GetConfirmedRatesResponse> _parser = new pb::MessageParser<GetConfirmedRatesResponse>(() => new GetConfirmedRatesResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetConfirmedRatesResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Videa.CuratedRateNS.Service.Proto.Types.CuratedRateServiceReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetConfirmedRatesResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetConfirmedRatesResponse(GetConfirmedRatesResponse other) : this() {
      rate_ = other.rate_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetConfirmedRatesResponse Clone() {
      return new GetConfirmedRatesResponse(this);
    }

    /// <summary>Field number for the "Rate" field.</summary>
    public const int RateFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Videa.CuratedRateNS.Service.Proto.Types.Rate> _repeated_rate_codec
        = pb::FieldCodec.ForMessage(10, global::Videa.CuratedRateNS.Service.Proto.Types.Rate.Parser);
    private readonly pbc::RepeatedField<global::Videa.CuratedRateNS.Service.Proto.Types.Rate> rate_ = new pbc::RepeatedField<global::Videa.CuratedRateNS.Service.Proto.Types.Rate>();
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Videa.CuratedRateNS.Service.Proto.Types.Rate> Rate {
      get { return rate_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetConfirmedRatesResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetConfirmedRatesResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!rate_.Equals(other.rate_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= rate_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      rate_.WriteTo(output, _repeated_rate_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += rate_.CalculateSize(_repeated_rate_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetConfirmedRatesResponse other) {
      if (other == null) {
        return;
      }
      rate_.Add(other.rate_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            rate_.AddEntriesFrom(input, _repeated_rate_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class BulkStoreRequest : pb::IMessage<BulkStoreRequest> {
    private static readonly pb::MessageParser<BulkStoreRequest> _parser = new pb::MessageParser<BulkStoreRequest>(() => new BulkStoreRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BulkStoreRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Videa.CuratedRateNS.Service.Proto.Types.CuratedRateServiceReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BulkStoreRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BulkStoreRequest(BulkStoreRequest other) : this() {
      curatedRate_ = other.curatedRate_.Clone();
      rateType_ = other.rateType_.Clone();
      curationStatus_ = other.curationStatus_.Clone();
      rate_ = other.rate_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BulkStoreRequest Clone() {
      return new BulkStoreRequest(this);
    }

    /// <summary>Field number for the "CuratedRate" field.</summary>
    public const int CuratedRateFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Videa.CuratedRateNS.Service.Proto.Types.CuratedRate> _repeated_curatedRate_codec
        = pb::FieldCodec.ForMessage(10, global::Videa.CuratedRateNS.Service.Proto.Types.CuratedRate.Parser);
    private readonly pbc::RepeatedField<global::Videa.CuratedRateNS.Service.Proto.Types.CuratedRate> curatedRate_ = new pbc::RepeatedField<global::Videa.CuratedRateNS.Service.Proto.Types.CuratedRate>();
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Videa.CuratedRateNS.Service.Proto.Types.CuratedRate> CuratedRate {
      get { return curatedRate_; }
    }

    /// <summary>Field number for the "RateType" field.</summary>
    public const int RateTypeFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Videa.CuratedRateNS.Service.Proto.Types.RateType> _repeated_rateType_codec
        = pb::FieldCodec.ForMessage(18, global::Videa.CuratedRateNS.Service.Proto.Types.RateType.Parser);
    private readonly pbc::RepeatedField<global::Videa.CuratedRateNS.Service.Proto.Types.RateType> rateType_ = new pbc::RepeatedField<global::Videa.CuratedRateNS.Service.Proto.Types.RateType>();
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Videa.CuratedRateNS.Service.Proto.Types.RateType> RateType {
      get { return rateType_; }
    }

    /// <summary>Field number for the "CurationStatus" field.</summary>
    public const int CurationStatusFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Videa.CuratedRateNS.Service.Proto.Types.CurationStatus> _repeated_curationStatus_codec
        = pb::FieldCodec.ForMessage(26, global::Videa.CuratedRateNS.Service.Proto.Types.CurationStatus.Parser);
    private readonly pbc::RepeatedField<global::Videa.CuratedRateNS.Service.Proto.Types.CurationStatus> curationStatus_ = new pbc::RepeatedField<global::Videa.CuratedRateNS.Service.Proto.Types.CurationStatus>();
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Videa.CuratedRateNS.Service.Proto.Types.CurationStatus> CurationStatus {
      get { return curationStatus_; }
    }

    /// <summary>Field number for the "Rate" field.</summary>
    public const int RateFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Videa.CuratedRateNS.Service.Proto.Types.Rate> _repeated_rate_codec
        = pb::FieldCodec.ForMessage(34, global::Videa.CuratedRateNS.Service.Proto.Types.Rate.Parser);
    private readonly pbc::RepeatedField<global::Videa.CuratedRateNS.Service.Proto.Types.Rate> rate_ = new pbc::RepeatedField<global::Videa.CuratedRateNS.Service.Proto.Types.Rate>();
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Videa.CuratedRateNS.Service.Proto.Types.Rate> Rate {
      get { return rate_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BulkStoreRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BulkStoreRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!curatedRate_.Equals(other.curatedRate_)) return false;
      if(!rateType_.Equals(other.rateType_)) return false;
      if(!curationStatus_.Equals(other.curationStatus_)) return false;
      if(!rate_.Equals(other.rate_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= curatedRate_.GetHashCode();
      hash ^= rateType_.GetHashCode();
      hash ^= curationStatus_.GetHashCode();
      hash ^= rate_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      curatedRate_.WriteTo(output, _repeated_curatedRate_codec);
      rateType_.WriteTo(output, _repeated_rateType_codec);
      curationStatus_.WriteTo(output, _repeated_curationStatus_codec);
      rate_.WriteTo(output, _repeated_rate_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += curatedRate_.CalculateSize(_repeated_curatedRate_codec);
      size += rateType_.CalculateSize(_repeated_rateType_codec);
      size += curationStatus_.CalculateSize(_repeated_curationStatus_codec);
      size += rate_.CalculateSize(_repeated_rate_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BulkStoreRequest other) {
      if (other == null) {
        return;
      }
      curatedRate_.Add(other.curatedRate_);
      rateType_.Add(other.rateType_);
      curationStatus_.Add(other.curationStatus_);
      rate_.Add(other.rate_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            curatedRate_.AddEntriesFrom(input, _repeated_curatedRate_codec);
            break;
          }
          case 18: {
            rateType_.AddEntriesFrom(input, _repeated_rateType_codec);
            break;
          }
          case 26: {
            curationStatus_.AddEntriesFrom(input, _repeated_curationStatus_codec);
            break;
          }
          case 34: {
            rate_.AddEntriesFrom(input, _repeated_rate_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class BulkStoreResponse : pb::IMessage<BulkStoreResponse> {
    private static readonly pb::MessageParser<BulkStoreResponse> _parser = new pb::MessageParser<BulkStoreResponse>(() => new BulkStoreResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BulkStoreResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Videa.CuratedRateNS.Service.Proto.Types.CuratedRateServiceReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BulkStoreResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BulkStoreResponse(BulkStoreResponse other) : this() {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BulkStoreResponse Clone() {
      return new BulkStoreResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BulkStoreResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BulkStoreResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BulkStoreResponse other) {
      if (other == null) {
        return;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code

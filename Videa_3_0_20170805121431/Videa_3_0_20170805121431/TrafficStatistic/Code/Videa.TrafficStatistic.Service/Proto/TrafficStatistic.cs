// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: TrafficStatistic.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Videa.TrafficStatisticNS.Service.Proto.Types {

  /// <summary>Holder for reflection information generated from TrafficStatistic.proto</summary>
  public static partial class TrafficStatisticReflection {

    #region Descriptor
    /// <summary>File descriptor for TrafficStatistic.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static TrafficStatisticReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChZUcmFmZmljU3RhdGlzdGljLnByb3RvGh9nb29nbGUvcHJvdG9idWYvdGlt",
            "ZXN0YW1wLnByb3RvGh5nb29nbGUvcHJvdG9idWYvZHVyYXRpb24ucHJvdG8i",
            "xgEKClJhdGVQZXJpb2QSGQoRUmF0ZVBlcmlvZEhhc2hLZXkYASABKAkSFQoN",
            "UmF0ZVBlcmlvZFNxbhgCIAEoBRIWCg5SYXRlUGVyaW9kTmFtZRgDIAEoCRI3",
            "ChNSYXRlUGVyaW9kU3RhcnREYXRlGAQgASgLMhouZ29vZ2xlLnByb3RvYnVm",
            "LlRpbWVzdGFtcBI1ChFSYXRlUGVyaW9kRW5kRGF0ZRgFIAEoCzIaLmdvb2ds",
            "ZS5wcm90b2J1Zi5UaW1lc3RhbXAi+QEKIlNlbGxhYmxlSW52ZW50b3J5VHJh",
            "ZmZpY1N0YXRpc3RpY3MSMAooU2VsbGFibGVJbnZlbnRvcnlUcmFmZmljU3Rh",
            "dGlzdGljSGFzaEtleRgBIAEoCRIgChhTZWxsYWJsZUludmVudG9yeUhhc2hL",
            "ZXkYAiABKAkSLAokU2VsbGFibGVJbnZlbnRvcnlUcmFmZmljU3RhdGlzdGlj",
            "U3FuGAMgASgFEiEKGVNlbGxhYmxlSW52ZW50b3J5QVVSVmFsdWUYBCABKAkS",
            "LgoKUm93VmVyc2lvbhgFIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3Rh",
            "bXAiIAoQVHJhZmZpY1N0YXRpc3RpYxIMCgR0b2RvGAEgASgFIjQKF1JhdGVQ",
            "ZXJpb2REZWxldGVSZXF1ZXN0EhkKEVJhdGVQZXJpb2RIYXNoS2V5GAEgASgJ",
            "IhoKGFJhdGVQZXJpb2REZWxldGVSZXNwb25zZSJjCi9TZWxsYWJsZUludmVu",
            "dG9yeVRyYWZmaWNTdGF0aXN0aWNzRGVsZXRlUmVxdWVzdBIwCihTZWxsYWJs",
            "ZUludmVudG9yeVRyYWZmaWNTdGF0aXN0aWNIYXNoS2V5GAEgASgJIjIKMFNl",
            "bGxhYmxlSW52ZW50b3J5VHJhZmZpY1N0YXRpc3RpY3NEZWxldGVSZXNwb25z",
            "ZSI9ChpSYXRlUGVyaW9kQWRkVXBkYXRlUmVxdWVzdBIfCgpSYXRlUGVyaW9k",
            "GAEgASgLMgsuUmF0ZVBlcmlvZCIdChtSYXRlUGVyaW9kQWRkVXBkYXRlUmVz",
            "cG9uc2UihQEKMlNlbGxhYmxlSW52ZW50b3J5VHJhZmZpY1N0YXRpc3RpY3NB",
            "ZGRVcGRhdGVSZXF1ZXN0Ek8KIlNlbGxhYmxlSW52ZW50b3J5VHJhZmZpY1N0",
            "YXRpc3RpY3MYASABKAsyIy5TZWxsYWJsZUludmVudG9yeVRyYWZmaWNTdGF0",
            "aXN0aWNzIjUKM1NlbGxhYmxlSW52ZW50b3J5VHJhZmZpY1N0YXRpc3RpY3NB",
            "ZGRVcGRhdGVSZXNwb25zZSI8ChtHZXRUcmFmZmljU3RhdGlzdGljc1JlcXVl",
            "c3QSHQoVU2VsbGFibGVJbnZlbnRvcnlMaXN0GAEgASgJIksKHEdldFRyYWZm",
            "aWNTdGF0aXN0aWNzUmVzcG9uc2USKwoQVHJhZmZpY1N0YXRpc3RpYxgBIAMo",
            "CzIRLlRyYWZmaWNTdGF0aXN0aWMisQEKEEJ1bGtTdG9yZVJlcXVlc3QSHwoK",
            "UmF0ZVBlcmlvZBgBIAMoCzILLlJhdGVQZXJpb2QSTwoiU2VsbGFibGVJbnZl",
            "bnRvcnlUcmFmZmljU3RhdGlzdGljcxgCIAMoCzIjLlNlbGxhYmxlSW52ZW50",
            "b3J5VHJhZmZpY1N0YXRpc3RpY3MSKwoQVHJhZmZpY1N0YXRpc3RpYxgDIAMo",
            "CzIRLlRyYWZmaWNTdGF0aXN0aWMiEwoRQnVsa1N0b3JlUmVzcG9uc2Uy9gQK",
            "F1RyYWZmaWNTdGF0aXN0aWNTZXJ2aWNlEkkKEFJhdGVQZXJpb2REZWxldGUS",
            "GC5SYXRlUGVyaW9kRGVsZXRlUmVxdWVzdBoZLlJhdGVQZXJpb2REZWxldGVS",
            "ZXNwb25zZSIAEpEBCihTZWxsYWJsZUludmVudG9yeVRyYWZmaWNTdGF0aXN0",
            "aWNzRGVsZXRlEjAuU2VsbGFibGVJbnZlbnRvcnlUcmFmZmljU3RhdGlzdGlj",
            "c0RlbGV0ZVJlcXVlc3QaMS5TZWxsYWJsZUludmVudG9yeVRyYWZmaWNTdGF0",
            "aXN0aWNzRGVsZXRlUmVzcG9uc2UiABJSChNSYXRlUGVyaW9kQWRkVXBkYXRl",
            "EhsuUmF0ZVBlcmlvZEFkZFVwZGF0ZVJlcXVlc3QaHC5SYXRlUGVyaW9kQWRk",
            "VXBkYXRlUmVzcG9uc2UiABKaAQorU2VsbGFibGVJbnZlbnRvcnlUcmFmZmlj",
            "U3RhdGlzdGljc0FkZFVwZGF0ZRIzLlNlbGxhYmxlSW52ZW50b3J5VHJhZmZp",
            "Y1N0YXRpc3RpY3NBZGRVcGRhdGVSZXF1ZXN0GjQuU2VsbGFibGVJbnZlbnRv",
            "cnlUcmFmZmljU3RhdGlzdGljc0FkZFVwZGF0ZVJlc3BvbnNlIgASVQoUR2V0",
            "VHJhZmZpY1N0YXRpc3RpY3MSHC5HZXRUcmFmZmljU3RhdGlzdGljc1JlcXVl",
            "c3QaHS5HZXRUcmFmZmljU3RhdGlzdGljc1Jlc3BvbnNlIgASNAoJQnVsa1N0",
            "b3JlEhEuQnVsa1N0b3JlUmVxdWVzdBoSLkJ1bGtTdG9yZVJlc3BvbnNlIgBC",
            "L6oCLFZpZGVhLlRyYWZmaWNTdGF0aXN0aWNOUy5TZXJ2aWNlLlByb3RvLlR5",
            "cGVzYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.DurationReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Videa.TrafficStatisticNS.Service.Proto.Types.RatePeriod), global::Videa.TrafficStatisticNS.Service.Proto.Types.RatePeriod.Parser, new[]{ "RatePeriodHashKey", "RatePeriodSqn", "RatePeriodName", "RatePeriodStartDate", "RatePeriodEndDate" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Videa.TrafficStatisticNS.Service.Proto.Types.SellableInventoryTrafficStatistics), global::Videa.TrafficStatisticNS.Service.Proto.Types.SellableInventoryTrafficStatistics.Parser, new[]{ "SellableInventoryTrafficStatisticHashKey", "SellableInventoryHashKey", "SellableInventoryTrafficStatisticSqn", "SellableInventoryAURValue", "RowVersion" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Videa.TrafficStatisticNS.Service.Proto.Types.TrafficStatistic), global::Videa.TrafficStatisticNS.Service.Proto.Types.TrafficStatistic.Parser, new[]{ "Todo" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Videa.TrafficStatisticNS.Service.Proto.Types.RatePeriodDeleteRequest), global::Videa.TrafficStatisticNS.Service.Proto.Types.RatePeriodDeleteRequest.Parser, new[]{ "RatePeriodHashKey" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Videa.TrafficStatisticNS.Service.Proto.Types.RatePeriodDeleteResponse), global::Videa.TrafficStatisticNS.Service.Proto.Types.RatePeriodDeleteResponse.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Videa.TrafficStatisticNS.Service.Proto.Types.SellableInventoryTrafficStatisticsDeleteRequest), global::Videa.TrafficStatisticNS.Service.Proto.Types.SellableInventoryTrafficStatisticsDeleteRequest.Parser, new[]{ "SellableInventoryTrafficStatisticHashKey" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Videa.TrafficStatisticNS.Service.Proto.Types.SellableInventoryTrafficStatisticsDeleteResponse), global::Videa.TrafficStatisticNS.Service.Proto.Types.SellableInventoryTrafficStatisticsDeleteResponse.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Videa.TrafficStatisticNS.Service.Proto.Types.RatePeriodAddUpdateRequest), global::Videa.TrafficStatisticNS.Service.Proto.Types.RatePeriodAddUpdateRequest.Parser, new[]{ "RatePeriod" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Videa.TrafficStatisticNS.Service.Proto.Types.RatePeriodAddUpdateResponse), global::Videa.TrafficStatisticNS.Service.Proto.Types.RatePeriodAddUpdateResponse.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Videa.TrafficStatisticNS.Service.Proto.Types.SellableInventoryTrafficStatisticsAddUpdateRequest), global::Videa.TrafficStatisticNS.Service.Proto.Types.SellableInventoryTrafficStatisticsAddUpdateRequest.Parser, new[]{ "SellableInventoryTrafficStatistics" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Videa.TrafficStatisticNS.Service.Proto.Types.SellableInventoryTrafficStatisticsAddUpdateResponse), global::Videa.TrafficStatisticNS.Service.Proto.Types.SellableInventoryTrafficStatisticsAddUpdateResponse.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Videa.TrafficStatisticNS.Service.Proto.Types.GetTrafficStatisticsRequest), global::Videa.TrafficStatisticNS.Service.Proto.Types.GetTrafficStatisticsRequest.Parser, new[]{ "SellableInventoryList" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Videa.TrafficStatisticNS.Service.Proto.Types.GetTrafficStatisticsResponse), global::Videa.TrafficStatisticNS.Service.Proto.Types.GetTrafficStatisticsResponse.Parser, new[]{ "TrafficStatistic" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Videa.TrafficStatisticNS.Service.Proto.Types.BulkStoreRequest), global::Videa.TrafficStatisticNS.Service.Proto.Types.BulkStoreRequest.Parser, new[]{ "RatePeriod", "SellableInventoryTrafficStatistics", "TrafficStatistic" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Videa.TrafficStatisticNS.Service.Proto.Types.BulkStoreResponse), global::Videa.TrafficStatisticNS.Service.Proto.Types.BulkStoreResponse.Parser, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class RatePeriod : pb::IMessage<RatePeriod> {
    private static readonly pb::MessageParser<RatePeriod> _parser = new pb::MessageParser<RatePeriod>(() => new RatePeriod());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RatePeriod> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Videa.TrafficStatisticNS.Service.Proto.Types.TrafficStatisticReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RatePeriod() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RatePeriod(RatePeriod other) : this() {
      ratePeriodHashKey_ = other.ratePeriodHashKey_;
      ratePeriodSqn_ = other.ratePeriodSqn_;
      ratePeriodName_ = other.ratePeriodName_;
      RatePeriodStartDate = other.ratePeriodStartDate_ != null ? other.RatePeriodStartDate.Clone() : null;
      RatePeriodEndDate = other.ratePeriodEndDate_ != null ? other.RatePeriodEndDate.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RatePeriod Clone() {
      return new RatePeriod(this);
    }

    /// <summary>Field number for the "RatePeriodHashKey" field.</summary>
    public const int RatePeriodHashKeyFieldNumber = 1;
    private string ratePeriodHashKey_ = "";
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RatePeriodHashKey {
      get { return ratePeriodHashKey_; }
      set {
        ratePeriodHashKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "RatePeriodSqn" field.</summary>
    public const int RatePeriodSqnFieldNumber = 2;
    private int ratePeriodSqn_;
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RatePeriodSqn {
      get { return ratePeriodSqn_; }
      set {
        ratePeriodSqn_ = value;
      }
    }

    /// <summary>Field number for the "RatePeriodName" field.</summary>
    public const int RatePeriodNameFieldNumber = 3;
    private string ratePeriodName_ = "";
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RatePeriodName {
      get { return ratePeriodName_; }
      set {
        ratePeriodName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "RatePeriodStartDate" field.</summary>
    public const int RatePeriodStartDateFieldNumber = 4;
    private global::Google.Protobuf.WellKnownTypes.Timestamp ratePeriodStartDate_;
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp RatePeriodStartDate {
      get { return ratePeriodStartDate_; }
      set {
        ratePeriodStartDate_ = value;
      }
    }

    /// <summary>Field number for the "RatePeriodEndDate" field.</summary>
    public const int RatePeriodEndDateFieldNumber = 5;
    private global::Google.Protobuf.WellKnownTypes.Timestamp ratePeriodEndDate_;
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp RatePeriodEndDate {
      get { return ratePeriodEndDate_; }
      set {
        ratePeriodEndDate_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RatePeriod);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RatePeriod other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RatePeriodHashKey != other.RatePeriodHashKey) return false;
      if (RatePeriodSqn != other.RatePeriodSqn) return false;
      if (RatePeriodName != other.RatePeriodName) return false;
      if (!object.Equals(RatePeriodStartDate, other.RatePeriodStartDate)) return false;
      if (!object.Equals(RatePeriodEndDate, other.RatePeriodEndDate)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RatePeriodHashKey.Length != 0) hash ^= RatePeriodHashKey.GetHashCode();
      if (RatePeriodSqn != 0) hash ^= RatePeriodSqn.GetHashCode();
      if (RatePeriodName.Length != 0) hash ^= RatePeriodName.GetHashCode();
      if (ratePeriodStartDate_ != null) hash ^= RatePeriodStartDate.GetHashCode();
      if (ratePeriodEndDate_ != null) hash ^= RatePeriodEndDate.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RatePeriodHashKey.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(RatePeriodHashKey);
      }
      if (RatePeriodSqn != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(RatePeriodSqn);
      }
      if (RatePeriodName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(RatePeriodName);
      }
      if (ratePeriodStartDate_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(RatePeriodStartDate);
      }
      if (ratePeriodEndDate_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(RatePeriodEndDate);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RatePeriodHashKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RatePeriodHashKey);
      }
      if (RatePeriodSqn != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RatePeriodSqn);
      }
      if (RatePeriodName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RatePeriodName);
      }
      if (ratePeriodStartDate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RatePeriodStartDate);
      }
      if (ratePeriodEndDate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RatePeriodEndDate);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RatePeriod other) {
      if (other == null) {
        return;
      }
      if (other.RatePeriodHashKey.Length != 0) {
        RatePeriodHashKey = other.RatePeriodHashKey;
      }
      if (other.RatePeriodSqn != 0) {
        RatePeriodSqn = other.RatePeriodSqn;
      }
      if (other.RatePeriodName.Length != 0) {
        RatePeriodName = other.RatePeriodName;
      }
      if (other.ratePeriodStartDate_ != null) {
        if (ratePeriodStartDate_ == null) {
          ratePeriodStartDate_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        RatePeriodStartDate.MergeFrom(other.RatePeriodStartDate);
      }
      if (other.ratePeriodEndDate_ != null) {
        if (ratePeriodEndDate_ == null) {
          ratePeriodEndDate_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        RatePeriodEndDate.MergeFrom(other.RatePeriodEndDate);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            RatePeriodHashKey = input.ReadString();
            break;
          }
          case 16: {
            RatePeriodSqn = input.ReadInt32();
            break;
          }
          case 26: {
            RatePeriodName = input.ReadString();
            break;
          }
          case 34: {
            if (ratePeriodStartDate_ == null) {
              ratePeriodStartDate_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(ratePeriodStartDate_);
            break;
          }
          case 42: {
            if (ratePeriodEndDate_ == null) {
              ratePeriodEndDate_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(ratePeriodEndDate_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SellableInventoryTrafficStatistics : pb::IMessage<SellableInventoryTrafficStatistics> {
    private static readonly pb::MessageParser<SellableInventoryTrafficStatistics> _parser = new pb::MessageParser<SellableInventoryTrafficStatistics>(() => new SellableInventoryTrafficStatistics());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SellableInventoryTrafficStatistics> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Videa.TrafficStatisticNS.Service.Proto.Types.TrafficStatisticReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SellableInventoryTrafficStatistics() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SellableInventoryTrafficStatistics(SellableInventoryTrafficStatistics other) : this() {
      sellableInventoryTrafficStatisticHashKey_ = other.sellableInventoryTrafficStatisticHashKey_;
      sellableInventoryHashKey_ = other.sellableInventoryHashKey_;
      sellableInventoryTrafficStatisticSqn_ = other.sellableInventoryTrafficStatisticSqn_;
      sellableInventoryAURValue_ = other.sellableInventoryAURValue_;
      RowVersion = other.rowVersion_ != null ? other.RowVersion.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SellableInventoryTrafficStatistics Clone() {
      return new SellableInventoryTrafficStatistics(this);
    }

    /// <summary>Field number for the "SellableInventoryTrafficStatisticHashKey" field.</summary>
    public const int SellableInventoryTrafficStatisticHashKeyFieldNumber = 1;
    private string sellableInventoryTrafficStatisticHashKey_ = "";
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SellableInventoryTrafficStatisticHashKey {
      get { return sellableInventoryTrafficStatisticHashKey_; }
      set {
        sellableInventoryTrafficStatisticHashKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "SellableInventoryHashKey" field.</summary>
    public const int SellableInventoryHashKeyFieldNumber = 2;
    private string sellableInventoryHashKey_ = "";
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SellableInventoryHashKey {
      get { return sellableInventoryHashKey_; }
      set {
        sellableInventoryHashKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "SellableInventoryTrafficStatisticSqn" field.</summary>
    public const int SellableInventoryTrafficStatisticSqnFieldNumber = 3;
    private int sellableInventoryTrafficStatisticSqn_;
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SellableInventoryTrafficStatisticSqn {
      get { return sellableInventoryTrafficStatisticSqn_; }
      set {
        sellableInventoryTrafficStatisticSqn_ = value;
      }
    }

    /// <summary>Field number for the "SellableInventoryAURValue" field.</summary>
    public const int SellableInventoryAURValueFieldNumber = 4;
    private string sellableInventoryAURValue_ = "";
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SellableInventoryAURValue {
      get { return sellableInventoryAURValue_; }
      set {
        sellableInventoryAURValue_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "RowVersion" field.</summary>
    public const int RowVersionFieldNumber = 5;
    private global::Google.Protobuf.WellKnownTypes.Timestamp rowVersion_;
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp RowVersion {
      get { return rowVersion_; }
      set {
        rowVersion_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SellableInventoryTrafficStatistics);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SellableInventoryTrafficStatistics other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SellableInventoryTrafficStatisticHashKey != other.SellableInventoryTrafficStatisticHashKey) return false;
      if (SellableInventoryHashKey != other.SellableInventoryHashKey) return false;
      if (SellableInventoryTrafficStatisticSqn != other.SellableInventoryTrafficStatisticSqn) return false;
      if (SellableInventoryAURValue != other.SellableInventoryAURValue) return false;
      if (!object.Equals(RowVersion, other.RowVersion)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SellableInventoryTrafficStatisticHashKey.Length != 0) hash ^= SellableInventoryTrafficStatisticHashKey.GetHashCode();
      if (SellableInventoryHashKey.Length != 0) hash ^= SellableInventoryHashKey.GetHashCode();
      if (SellableInventoryTrafficStatisticSqn != 0) hash ^= SellableInventoryTrafficStatisticSqn.GetHashCode();
      if (SellableInventoryAURValue.Length != 0) hash ^= SellableInventoryAURValue.GetHashCode();
      if (rowVersion_ != null) hash ^= RowVersion.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SellableInventoryTrafficStatisticHashKey.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SellableInventoryTrafficStatisticHashKey);
      }
      if (SellableInventoryHashKey.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SellableInventoryHashKey);
      }
      if (SellableInventoryTrafficStatisticSqn != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(SellableInventoryTrafficStatisticSqn);
      }
      if (SellableInventoryAURValue.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(SellableInventoryAURValue);
      }
      if (rowVersion_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(RowVersion);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SellableInventoryTrafficStatisticHashKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SellableInventoryTrafficStatisticHashKey);
      }
      if (SellableInventoryHashKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SellableInventoryHashKey);
      }
      if (SellableInventoryTrafficStatisticSqn != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SellableInventoryTrafficStatisticSqn);
      }
      if (SellableInventoryAURValue.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SellableInventoryAURValue);
      }
      if (rowVersion_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RowVersion);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SellableInventoryTrafficStatistics other) {
      if (other == null) {
        return;
      }
      if (other.SellableInventoryTrafficStatisticHashKey.Length != 0) {
        SellableInventoryTrafficStatisticHashKey = other.SellableInventoryTrafficStatisticHashKey;
      }
      if (other.SellableInventoryHashKey.Length != 0) {
        SellableInventoryHashKey = other.SellableInventoryHashKey;
      }
      if (other.SellableInventoryTrafficStatisticSqn != 0) {
        SellableInventoryTrafficStatisticSqn = other.SellableInventoryTrafficStatisticSqn;
      }
      if (other.SellableInventoryAURValue.Length != 0) {
        SellableInventoryAURValue = other.SellableInventoryAURValue;
      }
      if (other.rowVersion_ != null) {
        if (rowVersion_ == null) {
          rowVersion_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        RowVersion.MergeFrom(other.RowVersion);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            SellableInventoryTrafficStatisticHashKey = input.ReadString();
            break;
          }
          case 18: {
            SellableInventoryHashKey = input.ReadString();
            break;
          }
          case 24: {
            SellableInventoryTrafficStatisticSqn = input.ReadInt32();
            break;
          }
          case 34: {
            SellableInventoryAURValue = input.ReadString();
            break;
          }
          case 42: {
            if (rowVersion_ == null) {
              rowVersion_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(rowVersion_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class TrafficStatistic : pb::IMessage<TrafficStatistic> {
    private static readonly pb::MessageParser<TrafficStatistic> _parser = new pb::MessageParser<TrafficStatistic>(() => new TrafficStatistic());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TrafficStatistic> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Videa.TrafficStatisticNS.Service.Proto.Types.TrafficStatisticReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TrafficStatistic() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TrafficStatistic(TrafficStatistic other) : this() {
      todo_ = other.todo_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TrafficStatistic Clone() {
      return new TrafficStatistic(this);
    }

    /// <summary>Field number for the "todo" field.</summary>
    public const int TodoFieldNumber = 1;
    private int todo_;
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Todo {
      get { return todo_; }
      set {
        todo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TrafficStatistic);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TrafficStatistic other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Todo != other.Todo) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Todo != 0) hash ^= Todo.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Todo != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Todo);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Todo != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Todo);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TrafficStatistic other) {
      if (other == null) {
        return;
      }
      if (other.Todo != 0) {
        Todo = other.Todo;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Todo = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RatePeriodDeleteRequest : pb::IMessage<RatePeriodDeleteRequest> {
    private static readonly pb::MessageParser<RatePeriodDeleteRequest> _parser = new pb::MessageParser<RatePeriodDeleteRequest>(() => new RatePeriodDeleteRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RatePeriodDeleteRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Videa.TrafficStatisticNS.Service.Proto.Types.TrafficStatisticReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RatePeriodDeleteRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RatePeriodDeleteRequest(RatePeriodDeleteRequest other) : this() {
      ratePeriodHashKey_ = other.ratePeriodHashKey_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RatePeriodDeleteRequest Clone() {
      return new RatePeriodDeleteRequest(this);
    }

    /// <summary>Field number for the "RatePeriodHashKey" field.</summary>
    public const int RatePeriodHashKeyFieldNumber = 1;
    private string ratePeriodHashKey_ = "";
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RatePeriodHashKey {
      get { return ratePeriodHashKey_; }
      set {
        ratePeriodHashKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RatePeriodDeleteRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RatePeriodDeleteRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RatePeriodHashKey != other.RatePeriodHashKey) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RatePeriodHashKey.Length != 0) hash ^= RatePeriodHashKey.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RatePeriodHashKey.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(RatePeriodHashKey);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RatePeriodHashKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RatePeriodHashKey);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RatePeriodDeleteRequest other) {
      if (other == null) {
        return;
      }
      if (other.RatePeriodHashKey.Length != 0) {
        RatePeriodHashKey = other.RatePeriodHashKey;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            RatePeriodHashKey = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RatePeriodDeleteResponse : pb::IMessage<RatePeriodDeleteResponse> {
    private static readonly pb::MessageParser<RatePeriodDeleteResponse> _parser = new pb::MessageParser<RatePeriodDeleteResponse>(() => new RatePeriodDeleteResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RatePeriodDeleteResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Videa.TrafficStatisticNS.Service.Proto.Types.TrafficStatisticReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RatePeriodDeleteResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RatePeriodDeleteResponse(RatePeriodDeleteResponse other) : this() {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RatePeriodDeleteResponse Clone() {
      return new RatePeriodDeleteResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RatePeriodDeleteResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RatePeriodDeleteResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RatePeriodDeleteResponse other) {
      if (other == null) {
        return;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
        }
      }
    }

  }

  public sealed partial class SellableInventoryTrafficStatisticsDeleteRequest : pb::IMessage<SellableInventoryTrafficStatisticsDeleteRequest> {
    private static readonly pb::MessageParser<SellableInventoryTrafficStatisticsDeleteRequest> _parser = new pb::MessageParser<SellableInventoryTrafficStatisticsDeleteRequest>(() => new SellableInventoryTrafficStatisticsDeleteRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SellableInventoryTrafficStatisticsDeleteRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Videa.TrafficStatisticNS.Service.Proto.Types.TrafficStatisticReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SellableInventoryTrafficStatisticsDeleteRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SellableInventoryTrafficStatisticsDeleteRequest(SellableInventoryTrafficStatisticsDeleteRequest other) : this() {
      sellableInventoryTrafficStatisticHashKey_ = other.sellableInventoryTrafficStatisticHashKey_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SellableInventoryTrafficStatisticsDeleteRequest Clone() {
      return new SellableInventoryTrafficStatisticsDeleteRequest(this);
    }

    /// <summary>Field number for the "SellableInventoryTrafficStatisticHashKey" field.</summary>
    public const int SellableInventoryTrafficStatisticHashKeyFieldNumber = 1;
    private string sellableInventoryTrafficStatisticHashKey_ = "";
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SellableInventoryTrafficStatisticHashKey {
      get { return sellableInventoryTrafficStatisticHashKey_; }
      set {
        sellableInventoryTrafficStatisticHashKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SellableInventoryTrafficStatisticsDeleteRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SellableInventoryTrafficStatisticsDeleteRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SellableInventoryTrafficStatisticHashKey != other.SellableInventoryTrafficStatisticHashKey) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SellableInventoryTrafficStatisticHashKey.Length != 0) hash ^= SellableInventoryTrafficStatisticHashKey.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SellableInventoryTrafficStatisticHashKey.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SellableInventoryTrafficStatisticHashKey);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SellableInventoryTrafficStatisticHashKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SellableInventoryTrafficStatisticHashKey);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SellableInventoryTrafficStatisticsDeleteRequest other) {
      if (other == null) {
        return;
      }
      if (other.SellableInventoryTrafficStatisticHashKey.Length != 0) {
        SellableInventoryTrafficStatisticHashKey = other.SellableInventoryTrafficStatisticHashKey;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            SellableInventoryTrafficStatisticHashKey = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SellableInventoryTrafficStatisticsDeleteResponse : pb::IMessage<SellableInventoryTrafficStatisticsDeleteResponse> {
    private static readonly pb::MessageParser<SellableInventoryTrafficStatisticsDeleteResponse> _parser = new pb::MessageParser<SellableInventoryTrafficStatisticsDeleteResponse>(() => new SellableInventoryTrafficStatisticsDeleteResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SellableInventoryTrafficStatisticsDeleteResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Videa.TrafficStatisticNS.Service.Proto.Types.TrafficStatisticReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SellableInventoryTrafficStatisticsDeleteResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SellableInventoryTrafficStatisticsDeleteResponse(SellableInventoryTrafficStatisticsDeleteResponse other) : this() {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SellableInventoryTrafficStatisticsDeleteResponse Clone() {
      return new SellableInventoryTrafficStatisticsDeleteResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SellableInventoryTrafficStatisticsDeleteResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SellableInventoryTrafficStatisticsDeleteResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SellableInventoryTrafficStatisticsDeleteResponse other) {
      if (other == null) {
        return;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
        }
      }
    }

  }

  public sealed partial class RatePeriodAddUpdateRequest : pb::IMessage<RatePeriodAddUpdateRequest> {
    private static readonly pb::MessageParser<RatePeriodAddUpdateRequest> _parser = new pb::MessageParser<RatePeriodAddUpdateRequest>(() => new RatePeriodAddUpdateRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RatePeriodAddUpdateRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Videa.TrafficStatisticNS.Service.Proto.Types.TrafficStatisticReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RatePeriodAddUpdateRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RatePeriodAddUpdateRequest(RatePeriodAddUpdateRequest other) : this() {
      RatePeriod = other.ratePeriod_ != null ? other.RatePeriod.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RatePeriodAddUpdateRequest Clone() {
      return new RatePeriodAddUpdateRequest(this);
    }

    /// <summary>Field number for the "RatePeriod" field.</summary>
    public const int RatePeriodFieldNumber = 1;
    private global::Videa.TrafficStatisticNS.Service.Proto.Types.RatePeriod ratePeriod_;
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Videa.TrafficStatisticNS.Service.Proto.Types.RatePeriod RatePeriod {
      get { return ratePeriod_; }
      set {
        ratePeriod_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RatePeriodAddUpdateRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RatePeriodAddUpdateRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(RatePeriod, other.RatePeriod)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ratePeriod_ != null) hash ^= RatePeriod.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ratePeriod_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(RatePeriod);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ratePeriod_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RatePeriod);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RatePeriodAddUpdateRequest other) {
      if (other == null) {
        return;
      }
      if (other.ratePeriod_ != null) {
        if (ratePeriod_ == null) {
          ratePeriod_ = new global::Videa.TrafficStatisticNS.Service.Proto.Types.RatePeriod();
        }
        RatePeriod.MergeFrom(other.RatePeriod);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (ratePeriod_ == null) {
              ratePeriod_ = new global::Videa.TrafficStatisticNS.Service.Proto.Types.RatePeriod();
            }
            input.ReadMessage(ratePeriod_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class RatePeriodAddUpdateResponse : pb::IMessage<RatePeriodAddUpdateResponse> {
    private static readonly pb::MessageParser<RatePeriodAddUpdateResponse> _parser = new pb::MessageParser<RatePeriodAddUpdateResponse>(() => new RatePeriodAddUpdateResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RatePeriodAddUpdateResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Videa.TrafficStatisticNS.Service.Proto.Types.TrafficStatisticReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RatePeriodAddUpdateResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RatePeriodAddUpdateResponse(RatePeriodAddUpdateResponse other) : this() {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RatePeriodAddUpdateResponse Clone() {
      return new RatePeriodAddUpdateResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RatePeriodAddUpdateResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RatePeriodAddUpdateResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RatePeriodAddUpdateResponse other) {
      if (other == null) {
        return;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
        }
      }
    }

  }

  public sealed partial class SellableInventoryTrafficStatisticsAddUpdateRequest : pb::IMessage<SellableInventoryTrafficStatisticsAddUpdateRequest> {
    private static readonly pb::MessageParser<SellableInventoryTrafficStatisticsAddUpdateRequest> _parser = new pb::MessageParser<SellableInventoryTrafficStatisticsAddUpdateRequest>(() => new SellableInventoryTrafficStatisticsAddUpdateRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SellableInventoryTrafficStatisticsAddUpdateRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Videa.TrafficStatisticNS.Service.Proto.Types.TrafficStatisticReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SellableInventoryTrafficStatisticsAddUpdateRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SellableInventoryTrafficStatisticsAddUpdateRequest(SellableInventoryTrafficStatisticsAddUpdateRequest other) : this() {
      SellableInventoryTrafficStatistics = other.sellableInventoryTrafficStatistics_ != null ? other.SellableInventoryTrafficStatistics.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SellableInventoryTrafficStatisticsAddUpdateRequest Clone() {
      return new SellableInventoryTrafficStatisticsAddUpdateRequest(this);
    }

    /// <summary>Field number for the "SellableInventoryTrafficStatistics" field.</summary>
    public const int SellableInventoryTrafficStatisticsFieldNumber = 1;
    private global::Videa.TrafficStatisticNS.Service.Proto.Types.SellableInventoryTrafficStatistics sellableInventoryTrafficStatistics_;
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Videa.TrafficStatisticNS.Service.Proto.Types.SellableInventoryTrafficStatistics SellableInventoryTrafficStatistics {
      get { return sellableInventoryTrafficStatistics_; }
      set {
        sellableInventoryTrafficStatistics_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SellableInventoryTrafficStatisticsAddUpdateRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SellableInventoryTrafficStatisticsAddUpdateRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(SellableInventoryTrafficStatistics, other.SellableInventoryTrafficStatistics)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (sellableInventoryTrafficStatistics_ != null) hash ^= SellableInventoryTrafficStatistics.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (sellableInventoryTrafficStatistics_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(SellableInventoryTrafficStatistics);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (sellableInventoryTrafficStatistics_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SellableInventoryTrafficStatistics);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SellableInventoryTrafficStatisticsAddUpdateRequest other) {
      if (other == null) {
        return;
      }
      if (other.sellableInventoryTrafficStatistics_ != null) {
        if (sellableInventoryTrafficStatistics_ == null) {
          sellableInventoryTrafficStatistics_ = new global::Videa.TrafficStatisticNS.Service.Proto.Types.SellableInventoryTrafficStatistics();
        }
        SellableInventoryTrafficStatistics.MergeFrom(other.SellableInventoryTrafficStatistics);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (sellableInventoryTrafficStatistics_ == null) {
              sellableInventoryTrafficStatistics_ = new global::Videa.TrafficStatisticNS.Service.Proto.Types.SellableInventoryTrafficStatistics();
            }
            input.ReadMessage(sellableInventoryTrafficStatistics_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SellableInventoryTrafficStatisticsAddUpdateResponse : pb::IMessage<SellableInventoryTrafficStatisticsAddUpdateResponse> {
    private static readonly pb::MessageParser<SellableInventoryTrafficStatisticsAddUpdateResponse> _parser = new pb::MessageParser<SellableInventoryTrafficStatisticsAddUpdateResponse>(() => new SellableInventoryTrafficStatisticsAddUpdateResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SellableInventoryTrafficStatisticsAddUpdateResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Videa.TrafficStatisticNS.Service.Proto.Types.TrafficStatisticReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SellableInventoryTrafficStatisticsAddUpdateResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SellableInventoryTrafficStatisticsAddUpdateResponse(SellableInventoryTrafficStatisticsAddUpdateResponse other) : this() {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SellableInventoryTrafficStatisticsAddUpdateResponse Clone() {
      return new SellableInventoryTrafficStatisticsAddUpdateResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SellableInventoryTrafficStatisticsAddUpdateResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SellableInventoryTrafficStatisticsAddUpdateResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SellableInventoryTrafficStatisticsAddUpdateResponse other) {
      if (other == null) {
        return;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
        }
      }
    }

  }

  public sealed partial class GetTrafficStatisticsRequest : pb::IMessage<GetTrafficStatisticsRequest> {
    private static readonly pb::MessageParser<GetTrafficStatisticsRequest> _parser = new pb::MessageParser<GetTrafficStatisticsRequest>(() => new GetTrafficStatisticsRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetTrafficStatisticsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Videa.TrafficStatisticNS.Service.Proto.Types.TrafficStatisticReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTrafficStatisticsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTrafficStatisticsRequest(GetTrafficStatisticsRequest other) : this() {
      sellableInventoryList_ = other.sellableInventoryList_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTrafficStatisticsRequest Clone() {
      return new GetTrafficStatisticsRequest(this);
    }

    /// <summary>Field number for the "SellableInventoryList" field.</summary>
    public const int SellableInventoryListFieldNumber = 1;
    private string sellableInventoryList_ = "";
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SellableInventoryList {
      get { return sellableInventoryList_; }
      set {
        sellableInventoryList_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetTrafficStatisticsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetTrafficStatisticsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SellableInventoryList != other.SellableInventoryList) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SellableInventoryList.Length != 0) hash ^= SellableInventoryList.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SellableInventoryList.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SellableInventoryList);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SellableInventoryList.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SellableInventoryList);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetTrafficStatisticsRequest other) {
      if (other == null) {
        return;
      }
      if (other.SellableInventoryList.Length != 0) {
        SellableInventoryList = other.SellableInventoryList;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            SellableInventoryList = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetTrafficStatisticsResponse : pb::IMessage<GetTrafficStatisticsResponse> {
    private static readonly pb::MessageParser<GetTrafficStatisticsResponse> _parser = new pb::MessageParser<GetTrafficStatisticsResponse>(() => new GetTrafficStatisticsResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetTrafficStatisticsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Videa.TrafficStatisticNS.Service.Proto.Types.TrafficStatisticReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTrafficStatisticsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTrafficStatisticsResponse(GetTrafficStatisticsResponse other) : this() {
      trafficStatistic_ = other.trafficStatistic_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTrafficStatisticsResponse Clone() {
      return new GetTrafficStatisticsResponse(this);
    }

    /// <summary>Field number for the "TrafficStatistic" field.</summary>
    public const int TrafficStatisticFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Videa.TrafficStatisticNS.Service.Proto.Types.TrafficStatistic> _repeated_trafficStatistic_codec
        = pb::FieldCodec.ForMessage(10, global::Videa.TrafficStatisticNS.Service.Proto.Types.TrafficStatistic.Parser);
    private readonly pbc::RepeatedField<global::Videa.TrafficStatisticNS.Service.Proto.Types.TrafficStatistic> trafficStatistic_ = new pbc::RepeatedField<global::Videa.TrafficStatisticNS.Service.Proto.Types.TrafficStatistic>();
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Videa.TrafficStatisticNS.Service.Proto.Types.TrafficStatistic> TrafficStatistic {
      get { return trafficStatistic_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetTrafficStatisticsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetTrafficStatisticsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!trafficStatistic_.Equals(other.trafficStatistic_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= trafficStatistic_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      trafficStatistic_.WriteTo(output, _repeated_trafficStatistic_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += trafficStatistic_.CalculateSize(_repeated_trafficStatistic_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetTrafficStatisticsResponse other) {
      if (other == null) {
        return;
      }
      trafficStatistic_.Add(other.trafficStatistic_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            trafficStatistic_.AddEntriesFrom(input, _repeated_trafficStatistic_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class BulkStoreRequest : pb::IMessage<BulkStoreRequest> {
    private static readonly pb::MessageParser<BulkStoreRequest> _parser = new pb::MessageParser<BulkStoreRequest>(() => new BulkStoreRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BulkStoreRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Videa.TrafficStatisticNS.Service.Proto.Types.TrafficStatisticReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BulkStoreRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BulkStoreRequest(BulkStoreRequest other) : this() {
      ratePeriod_ = other.ratePeriod_.Clone();
      sellableInventoryTrafficStatistics_ = other.sellableInventoryTrafficStatistics_.Clone();
      trafficStatistic_ = other.trafficStatistic_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BulkStoreRequest Clone() {
      return new BulkStoreRequest(this);
    }

    /// <summary>Field number for the "RatePeriod" field.</summary>
    public const int RatePeriodFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Videa.TrafficStatisticNS.Service.Proto.Types.RatePeriod> _repeated_ratePeriod_codec
        = pb::FieldCodec.ForMessage(10, global::Videa.TrafficStatisticNS.Service.Proto.Types.RatePeriod.Parser);
    private readonly pbc::RepeatedField<global::Videa.TrafficStatisticNS.Service.Proto.Types.RatePeriod> ratePeriod_ = new pbc::RepeatedField<global::Videa.TrafficStatisticNS.Service.Proto.Types.RatePeriod>();
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Videa.TrafficStatisticNS.Service.Proto.Types.RatePeriod> RatePeriod {
      get { return ratePeriod_; }
    }

    /// <summary>Field number for the "SellableInventoryTrafficStatistics" field.</summary>
    public const int SellableInventoryTrafficStatisticsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Videa.TrafficStatisticNS.Service.Proto.Types.SellableInventoryTrafficStatistics> _repeated_sellableInventoryTrafficStatistics_codec
        = pb::FieldCodec.ForMessage(18, global::Videa.TrafficStatisticNS.Service.Proto.Types.SellableInventoryTrafficStatistics.Parser);
    private readonly pbc::RepeatedField<global::Videa.TrafficStatisticNS.Service.Proto.Types.SellableInventoryTrafficStatistics> sellableInventoryTrafficStatistics_ = new pbc::RepeatedField<global::Videa.TrafficStatisticNS.Service.Proto.Types.SellableInventoryTrafficStatistics>();
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Videa.TrafficStatisticNS.Service.Proto.Types.SellableInventoryTrafficStatistics> SellableInventoryTrafficStatistics {
      get { return sellableInventoryTrafficStatistics_; }
    }

    /// <summary>Field number for the "TrafficStatistic" field.</summary>
    public const int TrafficStatisticFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Videa.TrafficStatisticNS.Service.Proto.Types.TrafficStatistic> _repeated_trafficStatistic_codec
        = pb::FieldCodec.ForMessage(26, global::Videa.TrafficStatisticNS.Service.Proto.Types.TrafficStatistic.Parser);
    private readonly pbc::RepeatedField<global::Videa.TrafficStatisticNS.Service.Proto.Types.TrafficStatistic> trafficStatistic_ = new pbc::RepeatedField<global::Videa.TrafficStatisticNS.Service.Proto.Types.TrafficStatistic>();
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Videa.TrafficStatisticNS.Service.Proto.Types.TrafficStatistic> TrafficStatistic {
      get { return trafficStatistic_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BulkStoreRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BulkStoreRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!ratePeriod_.Equals(other.ratePeriod_)) return false;
      if(!sellableInventoryTrafficStatistics_.Equals(other.sellableInventoryTrafficStatistics_)) return false;
      if(!trafficStatistic_.Equals(other.trafficStatistic_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= ratePeriod_.GetHashCode();
      hash ^= sellableInventoryTrafficStatistics_.GetHashCode();
      hash ^= trafficStatistic_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      ratePeriod_.WriteTo(output, _repeated_ratePeriod_codec);
      sellableInventoryTrafficStatistics_.WriteTo(output, _repeated_sellableInventoryTrafficStatistics_codec);
      trafficStatistic_.WriteTo(output, _repeated_trafficStatistic_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += ratePeriod_.CalculateSize(_repeated_ratePeriod_codec);
      size += sellableInventoryTrafficStatistics_.CalculateSize(_repeated_sellableInventoryTrafficStatistics_codec);
      size += trafficStatistic_.CalculateSize(_repeated_trafficStatistic_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BulkStoreRequest other) {
      if (other == null) {
        return;
      }
      ratePeriod_.Add(other.ratePeriod_);
      sellableInventoryTrafficStatistics_.Add(other.sellableInventoryTrafficStatistics_);
      trafficStatistic_.Add(other.trafficStatistic_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            ratePeriod_.AddEntriesFrom(input, _repeated_ratePeriod_codec);
            break;
          }
          case 18: {
            sellableInventoryTrafficStatistics_.AddEntriesFrom(input, _repeated_sellableInventoryTrafficStatistics_codec);
            break;
          }
          case 26: {
            trafficStatistic_.AddEntriesFrom(input, _repeated_trafficStatistic_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class BulkStoreResponse : pb::IMessage<BulkStoreResponse> {
    private static readonly pb::MessageParser<BulkStoreResponse> _parser = new pb::MessageParser<BulkStoreResponse>(() => new BulkStoreResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BulkStoreResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Videa.TrafficStatisticNS.Service.Proto.Types.TrafficStatisticReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BulkStoreResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BulkStoreResponse(BulkStoreResponse other) : this() {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BulkStoreResponse Clone() {
      return new BulkStoreResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BulkStoreResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BulkStoreResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BulkStoreResponse other) {
      if (other == null) {
        return;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: TrafficStatistic.proto
#region Designer generated code

using System;
using System.Threading;
using System.Threading.Tasks;
using grpc = global::Grpc.Core;

namespace Videa.TrafficStatisticNS.Service.Proto.Types {
  public static partial class TrafficStatisticService
  {
    static readonly string __ServiceName = "TrafficStatisticService";

    static readonly grpc::Marshaller<global::Videa.TrafficStatisticNS.Service.Proto.Types.RatePeriodDeleteRequest> __Marshaller_RatePeriodDeleteRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Videa.TrafficStatisticNS.Service.Proto.Types.RatePeriodDeleteRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Videa.TrafficStatisticNS.Service.Proto.Types.RatePeriodDeleteResponse> __Marshaller_RatePeriodDeleteResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Videa.TrafficStatisticNS.Service.Proto.Types.RatePeriodDeleteResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Videa.TrafficStatisticNS.Service.Proto.Types.SellableInventoryTrafficStatisticsDeleteRequest> __Marshaller_SellableInventoryTrafficStatisticsDeleteRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Videa.TrafficStatisticNS.Service.Proto.Types.SellableInventoryTrafficStatisticsDeleteRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Videa.TrafficStatisticNS.Service.Proto.Types.SellableInventoryTrafficStatisticsDeleteResponse> __Marshaller_SellableInventoryTrafficStatisticsDeleteResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Videa.TrafficStatisticNS.Service.Proto.Types.SellableInventoryTrafficStatisticsDeleteResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Videa.TrafficStatisticNS.Service.Proto.Types.RatePeriodAddUpdateRequest> __Marshaller_RatePeriodAddUpdateRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Videa.TrafficStatisticNS.Service.Proto.Types.RatePeriodAddUpdateRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Videa.TrafficStatisticNS.Service.Proto.Types.RatePeriodAddUpdateResponse> __Marshaller_RatePeriodAddUpdateResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Videa.TrafficStatisticNS.Service.Proto.Types.RatePeriodAddUpdateResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Videa.TrafficStatisticNS.Service.Proto.Types.SellableInventoryTrafficStatisticsAddUpdateRequest> __Marshaller_SellableInventoryTrafficStatisticsAddUpdateRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Videa.TrafficStatisticNS.Service.Proto.Types.SellableInventoryTrafficStatisticsAddUpdateRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Videa.TrafficStatisticNS.Service.Proto.Types.SellableInventoryTrafficStatisticsAddUpdateResponse> __Marshaller_SellableInventoryTrafficStatisticsAddUpdateResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Videa.TrafficStatisticNS.Service.Proto.Types.SellableInventoryTrafficStatisticsAddUpdateResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Videa.TrafficStatisticNS.Service.Proto.Types.GetTrafficStatisticsRequest> __Marshaller_GetTrafficStatisticsRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Videa.TrafficStatisticNS.Service.Proto.Types.GetTrafficStatisticsRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Videa.TrafficStatisticNS.Service.Proto.Types.GetTrafficStatisticsResponse> __Marshaller_GetTrafficStatisticsResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Videa.TrafficStatisticNS.Service.Proto.Types.GetTrafficStatisticsResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Videa.TrafficStatisticNS.Service.Proto.Types.BulkStoreRequest> __Marshaller_BulkStoreRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Videa.TrafficStatisticNS.Service.Proto.Types.BulkStoreRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Videa.TrafficStatisticNS.Service.Proto.Types.BulkStoreResponse> __Marshaller_BulkStoreResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Videa.TrafficStatisticNS.Service.Proto.Types.BulkStoreResponse.Parser.ParseFrom);

    static readonly grpc::Method<global::Videa.TrafficStatisticNS.Service.Proto.Types.RatePeriodDeleteRequest, global::Videa.TrafficStatisticNS.Service.Proto.Types.RatePeriodDeleteResponse> __Method_RatePeriodDelete = new grpc::Method<global::Videa.TrafficStatisticNS.Service.Proto.Types.RatePeriodDeleteRequest, global::Videa.TrafficStatisticNS.Service.Proto.Types.RatePeriodDeleteResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RatePeriodDelete",
        __Marshaller_RatePeriodDeleteRequest,
        __Marshaller_RatePeriodDeleteResponse);

    static readonly grpc::Method<global::Videa.TrafficStatisticNS.Service.Proto.Types.SellableInventoryTrafficStatisticsDeleteRequest, global::Videa.TrafficStatisticNS.Service.Proto.Types.SellableInventoryTrafficStatisticsDeleteResponse> __Method_SellableInventoryTrafficStatisticsDelete = new grpc::Method<global::Videa.TrafficStatisticNS.Service.Proto.Types.SellableInventoryTrafficStatisticsDeleteRequest, global::Videa.TrafficStatisticNS.Service.Proto.Types.SellableInventoryTrafficStatisticsDeleteResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SellableInventoryTrafficStatisticsDelete",
        __Marshaller_SellableInventoryTrafficStatisticsDeleteRequest,
        __Marshaller_SellableInventoryTrafficStatisticsDeleteResponse);

    static readonly grpc::Method<global::Videa.TrafficStatisticNS.Service.Proto.Types.RatePeriodAddUpdateRequest, global::Videa.TrafficStatisticNS.Service.Proto.Types.RatePeriodAddUpdateResponse> __Method_RatePeriodAddUpdate = new grpc::Method<global::Videa.TrafficStatisticNS.Service.Proto.Types.RatePeriodAddUpdateRequest, global::Videa.TrafficStatisticNS.Service.Proto.Types.RatePeriodAddUpdateResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RatePeriodAddUpdate",
        __Marshaller_RatePeriodAddUpdateRequest,
        __Marshaller_RatePeriodAddUpdateResponse);

    static readonly grpc::Method<global::Videa.TrafficStatisticNS.Service.Proto.Types.SellableInventoryTrafficStatisticsAddUpdateRequest, global::Videa.TrafficStatisticNS.Service.Proto.Types.SellableInventoryTrafficStatisticsAddUpdateResponse> __Method_SellableInventoryTrafficStatisticsAddUpdate = new grpc::Method<global::Videa.TrafficStatisticNS.Service.Proto.Types.SellableInventoryTrafficStatisticsAddUpdateRequest, global::Videa.TrafficStatisticNS.Service.Proto.Types.SellableInventoryTrafficStatisticsAddUpdateResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SellableInventoryTrafficStatisticsAddUpdate",
        __Marshaller_SellableInventoryTrafficStatisticsAddUpdateRequest,
        __Marshaller_SellableInventoryTrafficStatisticsAddUpdateResponse);

    static readonly grpc::Method<global::Videa.TrafficStatisticNS.Service.Proto.Types.GetTrafficStatisticsRequest, global::Videa.TrafficStatisticNS.Service.Proto.Types.GetTrafficStatisticsResponse> __Method_GetTrafficStatistics = new grpc::Method<global::Videa.TrafficStatisticNS.Service.Proto.Types.GetTrafficStatisticsRequest, global::Videa.TrafficStatisticNS.Service.Proto.Types.GetTrafficStatisticsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetTrafficStatistics",
        __Marshaller_GetTrafficStatisticsRequest,
        __Marshaller_GetTrafficStatisticsResponse);

    static readonly grpc::Method<global::Videa.TrafficStatisticNS.Service.Proto.Types.BulkStoreRequest, global::Videa.TrafficStatisticNS.Service.Proto.Types.BulkStoreResponse> __Method_BulkStore = new grpc::Method<global::Videa.TrafficStatisticNS.Service.Proto.Types.BulkStoreRequest, global::Videa.TrafficStatisticNS.Service.Proto.Types.BulkStoreResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "BulkStore",
        __Marshaller_BulkStoreRequest,
        __Marshaller_BulkStoreResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Videa.TrafficStatisticNS.Service.Proto.Types.TrafficStatisticReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of TrafficStatisticService</summary>
    public abstract partial class TrafficStatisticServiceBase
    {
      public virtual global::System.Threading.Tasks.Task<global::Videa.TrafficStatisticNS.Service.Proto.Types.RatePeriodDeleteResponse> RatePeriodDelete(global::Videa.TrafficStatisticNS.Service.Proto.Types.RatePeriodDeleteRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Videa.TrafficStatisticNS.Service.Proto.Types.SellableInventoryTrafficStatisticsDeleteResponse> SellableInventoryTrafficStatisticsDelete(global::Videa.TrafficStatisticNS.Service.Proto.Types.SellableInventoryTrafficStatisticsDeleteRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Videa.TrafficStatisticNS.Service.Proto.Types.RatePeriodAddUpdateResponse> RatePeriodAddUpdate(global::Videa.TrafficStatisticNS.Service.Proto.Types.RatePeriodAddUpdateRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Videa.TrafficStatisticNS.Service.Proto.Types.SellableInventoryTrafficStatisticsAddUpdateResponse> SellableInventoryTrafficStatisticsAddUpdate(global::Videa.TrafficStatisticNS.Service.Proto.Types.SellableInventoryTrafficStatisticsAddUpdateRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Videa.TrafficStatisticNS.Service.Proto.Types.GetTrafficStatisticsResponse> GetTrafficStatistics(global::Videa.TrafficStatisticNS.Service.Proto.Types.GetTrafficStatisticsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Videa.TrafficStatisticNS.Service.Proto.Types.BulkStoreResponse> BulkStore(global::Videa.TrafficStatisticNS.Service.Proto.Types.BulkStoreRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for TrafficStatisticService</summary>
    public partial class TrafficStatisticServiceClient : grpc::ClientBase<TrafficStatisticServiceClient>
    {
      /// <summary>Creates a new client for TrafficStatisticService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public TrafficStatisticServiceClient(grpc::Channel channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for TrafficStatisticService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public TrafficStatisticServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected TrafficStatisticServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected TrafficStatisticServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::Videa.TrafficStatisticNS.Service.Proto.Types.RatePeriodDeleteResponse RatePeriodDelete(global::Videa.TrafficStatisticNS.Service.Proto.Types.RatePeriodDeleteRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return RatePeriodDelete(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Videa.TrafficStatisticNS.Service.Proto.Types.RatePeriodDeleteResponse RatePeriodDelete(global::Videa.TrafficStatisticNS.Service.Proto.Types.RatePeriodDeleteRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RatePeriodDelete, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Videa.TrafficStatisticNS.Service.Proto.Types.RatePeriodDeleteResponse> RatePeriodDeleteAsync(global::Videa.TrafficStatisticNS.Service.Proto.Types.RatePeriodDeleteRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return RatePeriodDeleteAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Videa.TrafficStatisticNS.Service.Proto.Types.RatePeriodDeleteResponse> RatePeriodDeleteAsync(global::Videa.TrafficStatisticNS.Service.Proto.Types.RatePeriodDeleteRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RatePeriodDelete, null, options, request);
      }
      public virtual global::Videa.TrafficStatisticNS.Service.Proto.Types.SellableInventoryTrafficStatisticsDeleteResponse SellableInventoryTrafficStatisticsDelete(global::Videa.TrafficStatisticNS.Service.Proto.Types.SellableInventoryTrafficStatisticsDeleteRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return SellableInventoryTrafficStatisticsDelete(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Videa.TrafficStatisticNS.Service.Proto.Types.SellableInventoryTrafficStatisticsDeleteResponse SellableInventoryTrafficStatisticsDelete(global::Videa.TrafficStatisticNS.Service.Proto.Types.SellableInventoryTrafficStatisticsDeleteRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SellableInventoryTrafficStatisticsDelete, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Videa.TrafficStatisticNS.Service.Proto.Types.SellableInventoryTrafficStatisticsDeleteResponse> SellableInventoryTrafficStatisticsDeleteAsync(global::Videa.TrafficStatisticNS.Service.Proto.Types.SellableInventoryTrafficStatisticsDeleteRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return SellableInventoryTrafficStatisticsDeleteAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Videa.TrafficStatisticNS.Service.Proto.Types.SellableInventoryTrafficStatisticsDeleteResponse> SellableInventoryTrafficStatisticsDeleteAsync(global::Videa.TrafficStatisticNS.Service.Proto.Types.SellableInventoryTrafficStatisticsDeleteRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SellableInventoryTrafficStatisticsDelete, null, options, request);
      }
      public virtual global::Videa.TrafficStatisticNS.Service.Proto.Types.RatePeriodAddUpdateResponse RatePeriodAddUpdate(global::Videa.TrafficStatisticNS.Service.Proto.Types.RatePeriodAddUpdateRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return RatePeriodAddUpdate(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Videa.TrafficStatisticNS.Service.Proto.Types.RatePeriodAddUpdateResponse RatePeriodAddUpdate(global::Videa.TrafficStatisticNS.Service.Proto.Types.RatePeriodAddUpdateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RatePeriodAddUpdate, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Videa.TrafficStatisticNS.Service.Proto.Types.RatePeriodAddUpdateResponse> RatePeriodAddUpdateAsync(global::Videa.TrafficStatisticNS.Service.Proto.Types.RatePeriodAddUpdateRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return RatePeriodAddUpdateAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Videa.TrafficStatisticNS.Service.Proto.Types.RatePeriodAddUpdateResponse> RatePeriodAddUpdateAsync(global::Videa.TrafficStatisticNS.Service.Proto.Types.RatePeriodAddUpdateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RatePeriodAddUpdate, null, options, request);
      }
      public virtual global::Videa.TrafficStatisticNS.Service.Proto.Types.SellableInventoryTrafficStatisticsAddUpdateResponse SellableInventoryTrafficStatisticsAddUpdate(global::Videa.TrafficStatisticNS.Service.Proto.Types.SellableInventoryTrafficStatisticsAddUpdateRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return SellableInventoryTrafficStatisticsAddUpdate(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Videa.TrafficStatisticNS.Service.Proto.Types.SellableInventoryTrafficStatisticsAddUpdateResponse SellableInventoryTrafficStatisticsAddUpdate(global::Videa.TrafficStatisticNS.Service.Proto.Types.SellableInventoryTrafficStatisticsAddUpdateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SellableInventoryTrafficStatisticsAddUpdate, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Videa.TrafficStatisticNS.Service.Proto.Types.SellableInventoryTrafficStatisticsAddUpdateResponse> SellableInventoryTrafficStatisticsAddUpdateAsync(global::Videa.TrafficStatisticNS.Service.Proto.Types.SellableInventoryTrafficStatisticsAddUpdateRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return SellableInventoryTrafficStatisticsAddUpdateAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Videa.TrafficStatisticNS.Service.Proto.Types.SellableInventoryTrafficStatisticsAddUpdateResponse> SellableInventoryTrafficStatisticsAddUpdateAsync(global::Videa.TrafficStatisticNS.Service.Proto.Types.SellableInventoryTrafficStatisticsAddUpdateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SellableInventoryTrafficStatisticsAddUpdate, null, options, request);
      }
      public virtual global::Videa.TrafficStatisticNS.Service.Proto.Types.GetTrafficStatisticsResponse GetTrafficStatistics(global::Videa.TrafficStatisticNS.Service.Proto.Types.GetTrafficStatisticsRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetTrafficStatistics(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Videa.TrafficStatisticNS.Service.Proto.Types.GetTrafficStatisticsResponse GetTrafficStatistics(global::Videa.TrafficStatisticNS.Service.Proto.Types.GetTrafficStatisticsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetTrafficStatistics, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Videa.TrafficStatisticNS.Service.Proto.Types.GetTrafficStatisticsResponse> GetTrafficStatisticsAsync(global::Videa.TrafficStatisticNS.Service.Proto.Types.GetTrafficStatisticsRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetTrafficStatisticsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Videa.TrafficStatisticNS.Service.Proto.Types.GetTrafficStatisticsResponse> GetTrafficStatisticsAsync(global::Videa.TrafficStatisticNS.Service.Proto.Types.GetTrafficStatisticsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetTrafficStatistics, null, options, request);
      }
      public virtual global::Videa.TrafficStatisticNS.Service.Proto.Types.BulkStoreResponse BulkStore(global::Videa.TrafficStatisticNS.Service.Proto.Types.BulkStoreRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return BulkStore(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Videa.TrafficStatisticNS.Service.Proto.Types.BulkStoreResponse BulkStore(global::Videa.TrafficStatisticNS.Service.Proto.Types.BulkStoreRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_BulkStore, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Videa.TrafficStatisticNS.Service.Proto.Types.BulkStoreResponse> BulkStoreAsync(global::Videa.TrafficStatisticNS.Service.Proto.Types.BulkStoreRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return BulkStoreAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Videa.TrafficStatisticNS.Service.Proto.Types.BulkStoreResponse> BulkStoreAsync(global::Videa.TrafficStatisticNS.Service.Proto.Types.BulkStoreRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_BulkStore, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override TrafficStatisticServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new TrafficStatisticServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(TrafficStatisticServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_RatePeriodDelete, serviceImpl.RatePeriodDelete)
          .AddMethod(__Method_SellableInventoryTrafficStatisticsDelete, serviceImpl.SellableInventoryTrafficStatisticsDelete)
          .AddMethod(__Method_RatePeriodAddUpdate, serviceImpl.RatePeriodAddUpdate)
          .AddMethod(__Method_SellableInventoryTrafficStatisticsAddUpdate, serviceImpl.SellableInventoryTrafficStatisticsAddUpdate)
          .AddMethod(__Method_GetTrafficStatistics, serviceImpl.GetTrafficStatistics)
          .AddMethod(__Method_BulkStore, serviceImpl.BulkStore).Build();
    }

  }
}
#endregion
